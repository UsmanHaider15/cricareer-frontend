[{"/home/usman/Desktop/project/cricareer-frontend/src/index.js":"1","/home/usman/Desktop/project/cricareer-frontend/src/reportWebVitals.js":"2","/home/usman/Desktop/project/cricareer-frontend/src/App.js":"3","/home/usman/Desktop/project/cricareer-frontend/src/Components/MenuToolbar.jsx":"4","/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/Footer.jsx":"5","/home/usman/Desktop/project/cricareer-frontend/src/Components/Home.jsx":"6","/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/Header.jsx":"7","/home/usman/Desktop/project/cricareer-frontend/src/Components/IccPlayerComparison.jsx":"8","/home/usman/Desktop/project/cricareer-frontend/src/Components/Comparisons/LeaguePlayersComparison.jsx":"9","/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/IccPlayerProfile.jsx":"10","/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfiles.jsx":"11","/home/usman/Desktop/project/cricareer-frontend/src/Data/data.js":"12","/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/MediaControlCard.jsx":"13","/home/usman/Desktop/project/cricareer-frontend/src/Components/PlayerSearch.jsx":"14","/home/usman/Desktop/project/cricareer-frontend/src/Components/Comparisons/IccPlayersBowlingAveragesComparison.jsx":"15","/home/usman/Desktop/project/cricareer-frontend/src/Components/Comparisons/IccPlayersBattingAveragesComparison.jsx":"16","/home/usman/Desktop/project/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBattingAveragesComparison.jsx":"17","/home/usman/Desktop/project/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBowlingAveragesComparison.jsx":"18","/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/IccPlayerBattingAverages.jsx":"19","/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/IccPlayerBowlingAverages.jsx":"20","/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/LeaguePlayerBattingAverages.jsx":"21","/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/LeaguePlayerBowlingAverages.jsx":"22","/home/usman/Desktop/project/cricareer-frontend/src/Services/httpService.js":"23","/home/usman/Desktop/project/cricareer-frontend/src/Utils/humanify.js":"24","/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/Breadcrumb.jsx":"25","/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/Heading.jsx":"26","/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/MenuButton.jsx":"27","/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/TableView.jsx":"28","/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/AveragesTable.jsx":"29","/home/usman/Desktop/project/cricareer-frontend/src/Utils/tracking.js":"30","/home/usman/Desktop/project/cricareer-frontend/src/Utils/getFormattedBreadcrumb.js":"31","/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/EnhancedTableHead.jsx":"32","/home/usman/Desktop/project/cricareer-frontend/src/Utils/capitalizeFirstLetter.js":"33","/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/TopbarMenu.jsx":"34"},{"size":1026,"mtime":1635771090275,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1635771090275,"results":"37","hashOfConfig":"36"},{"size":6807,"mtime":1642691752867,"results":"38","hashOfConfig":"36"},{"size":2307,"mtime":1642690909895,"results":"39","hashOfConfig":"36"},{"size":1086,"mtime":1642691335845,"results":"40","hashOfConfig":"36"},{"size":4466,"mtime":1642691362717,"results":"41","hashOfConfig":"36"},{"size":267,"mtime":1635771090271,"results":"42","hashOfConfig":"36"},{"size":8291,"mtime":1642614729079,"results":"43","hashOfConfig":"36"},{"size":9371,"mtime":1642614729079,"results":"44","hashOfConfig":"36"},{"size":6216,"mtime":1642614729083,"results":"45","hashOfConfig":"36"},{"size":6869,"mtime":1642614729083,"results":"46","hashOfConfig":"36"},{"size":4967,"mtime":1635771090275,"results":"47","hashOfConfig":"36"},{"size":2290,"mtime":1642614729075,"results":"48","hashOfConfig":"36"},{"size":2010,"mtime":1642614729079,"results":"49","hashOfConfig":"36"},{"size":4504,"mtime":1642691652159,"results":"50","hashOfConfig":"36"},{"size":4427,"mtime":1642691664664,"results":"51","hashOfConfig":"36"},{"size":4718,"mtime":1642691641227,"results":"52","hashOfConfig":"36"},{"size":4700,"mtime":1642691628114,"results":"53","hashOfConfig":"36"},{"size":3371,"mtime":1642691613862,"results":"54","hashOfConfig":"36"},{"size":3002,"mtime":1642691604493,"results":"55","hashOfConfig":"36"},{"size":3195,"mtime":1642691597333,"results":"56","hashOfConfig":"36"},{"size":3227,"mtime":1642691590745,"results":"57","hashOfConfig":"36"},{"size":590,"mtime":1642593146753,"results":"58","hashOfConfig":"36"},{"size":150,"mtime":1635771090275,"results":"59","hashOfConfig":"36"},{"size":886,"mtime":1642691963255,"results":"60","hashOfConfig":"36"},{"size":237,"mtime":1642691564416,"results":"61","hashOfConfig":"36"},{"size":202,"mtime":1642691671228,"results":"62","hashOfConfig":"36"},{"size":1502,"mtime":1642614729075,"results":"63","hashOfConfig":"36"},{"size":2402,"mtime":1642691756627,"results":"64","hashOfConfig":"36"},{"size":484,"mtime":1635771090275,"results":"65","hashOfConfig":"36"},{"size":307,"mtime":1635771090275,"results":"66","hashOfConfig":"36"},{"size":1884,"mtime":1642691919109,"results":"67","hashOfConfig":"36"},{"size":141,"mtime":1635771090275,"results":"68","hashOfConfig":"36"},{"size":2020,"mtime":1642690799502,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1s1k2f1",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/usman/Desktop/project/cricareer-frontend/src/index.js",[],["143","144"],"/home/usman/Desktop/project/cricareer-frontend/src/reportWebVitals.js",[],"/home/usman/Desktop/project/cricareer-frontend/src/App.js",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/MenuToolbar.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/Footer.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Home.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/Header.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/IccPlayerComparison.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Comparisons/LeaguePlayersComparison.jsx",["145","146"],"import React from \"react\";\nimport PlayerSearch from \"Components/PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport qs from \"qs\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router\";\nimport Breadcrumb from \"Components/Common/Breadcrumb\";\nimport httpService from \"Services/httpService\";\nimport LeaguePlayersBattingAveragesComparison from \"./LeaguePlayersBattingAveragesComparison\";\nimport LeaguePlayersBowlingAveragesComparison from \"./LeaguePlayersBowlingAveragesComparison\";\nimport Header from \"Components/Common/Header\";\nimport {\n  icc_batting_table_column_name_lookup,\n  icc_bowling_table_column_name_lookup,\n  league_teams,\n} from \"Data/data\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst LeaguePlayersComparison = ({\n  history,\n  leagueName,\n  initialFirstPlayerID,\n  initialSecondPlayerID,\n}) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [firstPlayer, setFirstPlayer] = useState({});\n  const [secondPlayer, setSecondPlayer] = useState({});\n  const [firstRef, firstLoaded, firstOnLoad] = useImageLoaded();\n  const [secondRef, secondLoaded, secondOnLoad] = useImageLoaded();\n  const prevLeagueName = usePrevious(leagueName);\n\n  const [battingSeason, setBattingSeason] = React.useState(5);\n  const [battingOpposition, setBattingOpposition] = React.useState(\"All Teams\");\n  const [bowlingSeason, setBowlingSeason] = React.useState(5);\n  const [bowlingOpposition, setBowlingOpposition] = React.useState(\"All Teams\");\n\n  if (prevLeagueName && leagueName !== prevLeagueName) {\n    window.location.reload();\n  }\n\n  useEffect(() => {\n    if (Object.keys(firstPlayer).length && Object.keys(secondPlayer).length) {\n      history.push({\n        pathname: \"\",\n        search: `first_player_id=${firstPlayer.player_id}&second_player_id=${secondPlayer.player_id}&batting_season=${battingSeason}&batting_opposition=${battingOpposition}&bowling_season=${bowlingSeason}&bowling_opposition=${bowlingOpposition}`,\n      });\n    }\n  }, [\n    firstPlayer,\n    secondPlayer,\n    battingSeason,\n    battingOpposition,\n    bowlingSeason,\n    bowlingOpposition,\n    history,\n  ]);\n\n  const [locationKeys, setLocationKeys] = useState([]);\n\n  useEffect(() => {\n    return history.listen((location) => {\n      if (history.action === \"PUSH\") {\n        setLocationKeys([location.key]);\n      }\n\n      if (history.action === \"POP\") {\n        if (locationKeys[1] === location.key) {\n          setLocationKeys(([_, ...keys]) => keys);\n          // Handle forward event\n        } else {\n          // Handle back event\n          history.push(\"/\");\n        }\n      }\n    });\n  }, [locationKeys, history]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_players_list\", {\n        params: {\n          limit: 500,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const query_parameters = qs.parse(history.location.search.substring(1));\n\n    const batting_opposition = query_parameters[\"batting_opposition\"];\n    console.log(\"batting_opposition\", batting_opposition);\n    setBattingOpposition(batting_opposition || \"All Teams\");\n    const batting_season = query_parameters[\"batting_season\"];\n    console.log(\"batting_season\", batting_season);\n    setBattingSeason(batting_season || 0);\n\n    const bowling_opposition = query_parameters[\"bowling_opposition\"];\n    setBowlingOpposition(bowling_opposition || \"All Teams\");\n    const bowling_season = query_parameters[\"bowling_season\"];\n    setBowlingSeason(bowling_season || 0);\n\n    const player_ids = qs.parse(history.location.search.substring(1));\n    const first_player_id = player_ids.first_player_id || initialFirstPlayerID;\n    const second_player_id =\n      player_ids.second_player_id || initialSecondPlayerID;\n\n    httpService\n      .get(`/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: first_player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setFirstPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    httpService\n      .get(`/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: second_player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setSecondPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    history.push({\n      // pathname: \"\",\n      search: `first_player_id=${first_player_id}&second_player_id=${second_player_id}`,\n    });\n  }, [history, initialFirstPlayerID, initialSecondPlayerID, leagueName]);\n\n  const handleSelectedPlayer = (player, isFirst) => {\n    if (isFirst) {\n      setFirstPlayer(player);\n    } else {\n      setSecondPlayer(player);\n    }\n  };\n\n  return (\n    <div>\n      <Header\n        title={`${firstPlayer.player_name} vs ${\n          secondPlayer.player_name\n        } in ${leagueName.toUpperCase()}`}\n        description={`\n        Compare Batting and Bowling Averages of ${\n          firstPlayer.player_name\n        } and ${\n          secondPlayer.player_name\n        } in any season of ${leagueName.toUpperCase()}. You can also compare ${\n          firstPlayer.player_name\n        } and ${\n          secondPlayer.player_name\n        } batting and bowling averages against other teams like${Object.values(\n          league_teams[leagueName]\n        )\n          .slice(1)\n          .map((team) => ` ${team}`)} as well.`}\n      />\n      <Breadcrumb />\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={firstPlayer}\n            url=\"/league_player_profile/search_player_by_name\"\n            league_name={leagueName}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={secondPlayer}\n            isFirst={false}\n            url=\"/league_player_profile/search_player_by_name\"\n            league_name={leagueName}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              padding: 10,\n            }}\n          >\n            <img\n              ref={firstRef}\n              onLoad={firstOnLoad}\n              src={firstPlayer.headshot_image_url || \"/default-user.jpg\"}\n              alt=\"\"\n              style={{\n                minWidth: \"60%\",\n                display: firstLoaded ? \"block\" : \"none\",\n              }}\n            />\n            {!firstLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              padding: 10,\n            }}\n          >\n            <img\n              ref={secondRef}\n              onLoad={secondOnLoad}\n              src={secondPlayer.headshot_image_url || \"/default-user.jpg\"}\n              alt=\"\"\n              style={{\n                minWidth: \"60%\",\n                display: secondLoaded ? \"block\" : \"none\",\n              }}\n            />\n\n            {!secondLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        {firstPlayer.player_id && secondPlayer.player_id ? (\n          <Grid container>\n            <LeaguePlayersBattingAveragesComparison\n              firstPlayer={firstPlayer}\n              secondPlayer={secondPlayer}\n              leagueName={leagueName}\n              battingSeason={battingSeason}\n              setBattingSeason={setBattingSeason}\n              battingOpposition={battingOpposition}\n              setBattingOpposition={setBattingOpposition}\n            />\n            <LeaguePlayersBowlingAveragesComparison\n              firstPlayer={firstPlayer}\n              secondPlayer={secondPlayer}\n              leagueName={leagueName}\n              bowlingSeason={bowlingSeason}\n              setBowlingSeason={setBowlingSeason}\n              bowlingOpposition={bowlingOpposition}\n              setBowlingOpposition={setBowlingOpposition}\n            />\n          </Grid>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(LeaguePlayersComparison);\n","/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/IccPlayerProfile.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfiles.jsx",["147","148"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router\";\nimport qs from \"qs\";\nimport PlayerSearch from \"Components/PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LeaguePlayerBattingAverages from \"./LeaguePlayerBattingAverages\";\nimport LeaguePlayerBowlingAverages from \"./LeaguePlayerBowlingAverages\";\nimport Breadcrumb from \"Components/Common/Breadcrumb\";\nimport CustomResponsiveFontSizes from \"Components/Common/Heading\";\nimport httpService from \"Services/httpService\";\nimport Header from \"Components/Common/Header\";\nimport { icc_batting_table_column_name_lookup, league_teams } from \"Data/data\";\nimport { icc_bowling_table_column_name_lookup } from \"../../Data/data\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst LeaguePlayerProfiles = ({ history, leagueName, initialPlayerID }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [player, setPlayer] = useState({});\n  const [ref, loaded, onLoad] = useImageLoaded();\n  const prevLeagueName = usePrevious(leagueName);\n\n  const [battingSeason, setBattingSeason] = React.useState(\"\");\n  const [bowlingSeason, setBowlingSeason] = React.useState(\"\");\n\n  if (prevLeagueName && leagueName !== prevLeagueName) {\n    window.location.reload();\n  }\n  useEffect(() => {\n    if (Object.keys(player).length) {\n      history.push({\n        pathname: \"\",\n        search: `player_id=${player.player_id}&batting_season=${battingSeason}&bowling_season=${bowlingSeason}`,\n      });\n    }\n  }, [player, battingSeason, bowlingSeason, history]);\n\n  const [locationKeys, setLocationKeys] = useState([]);\n\n  useEffect(() => {\n    return history.listen((location) => {\n      if (history.action === \"PUSH\") {\n        setLocationKeys([location.key]);\n      }\n\n      if (history.action === \"POP\") {\n        if (locationKeys[1] === location.key) {\n          setLocationKeys(([_, ...keys]) => keys);\n          // Handle forward event\n        } else {\n          // Handle back event\n          history.push(\"/\");\n        }\n      }\n    });\n  }, [locationKeys, history]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_players_list\", {\n        params: {\n          limit: 500,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const query_parameters = qs.parse(history.location.search.substring(1));\n    const batting_season = query_parameters[\"batting_season\"];\n    const bowling_season = query_parameters[\"bowling_season\"];\n    setBattingSeason(batting_season || 0);\n    setBowlingSeason(bowling_season || 0);\n\n    const url_id = qs.parse(history.location.search.substring(1));\n    const player_id = url_id.player_id ? url_id.player_id : initialPlayerID;\n\n    httpService\n      .get(`/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        console.log(\"response\", response);\n        setPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    history.push({\n      // pathname: \"\",\n      search: `player_id=${player_id}`,\n    });\n  }, [history, initialPlayerID, leagueName]);\n\n  const handleSelectedPlayer = (player) => {\n    setPlayer(player);\n  };\n\n  return (\n    <div>\n      <Header\n        title={`${\n          player.player_name\n        }'s Batting and Bowling Averages in ${leagueName.toUpperCase()}`}\n        description={`Get Details of ${\n          player.player_name\n        }'s batting and bowling averages in any season of ${leagueName.toUpperCase()}. You can also get details of bowling and batting averages of ${\n          player.player_name\n        } against PSL teams like${Object.values(league_teams[leagueName])\n          .slice(1)\n          .map((team) => ` ${team}`)} \n           as well.`}\n      />\n      <Breadcrumb />\n      <Grid container spacing={1}>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <PlayerSearch\n              InitialPlayersList={initialPlayersList}\n              setSelectedPlayer={handleSelectedPlayer}\n              player={player}\n              url=\"/league_player_profile/search_player_by_name\"\n              league_name={leagueName}\n            />\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                paddingTop: 10,\n              }}\n            >\n              <img\n                ref={ref}\n                onLoad={onLoad}\n                src={\n                  player.headshot_image_url\n                    ? player.headshot_image_url\n                    : \"/default-user.jpg\"\n                }\n                alt=\"\"\n                style={{\n                  minWidth: \"60%\",\n                  display: loaded ? \"block\" : \"none\",\n                }}\n              />\n              {!loaded ? <CircularProgress /> : null}\n            </div>\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Batting Averages\" />\n          {Object.keys(player).length > 0 ? (\n            <LeaguePlayerBattingAverages\n              leagueName={leagueName}\n              player={player}\n              battingSeason={battingSeason}\n              setBattingSeason={setBattingSeason}\n            />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Bowling Averages\" />\n          {Object.keys(player).length > 0 ? (\n            <LeaguePlayerBowlingAverages\n              leagueName={leagueName}\n              player={player}\n              bowlingSeason={bowlingSeason}\n              setBowlingSeason={setBowlingSeason}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(LeaguePlayerProfiles);\n","/home/usman/Desktop/project/cricareer-frontend/src/Data/data.js",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/MediaControlCard.jsx",["149"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    [theme.breakpoints.down(\"xs\")]: {\n      height: 200,\n      backgroundColor: \"white\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      backgroundColor: \"white\",\n      width: \"35%\",\n      // height: 200,\n    },\n  },\n\n  root: {\n    [theme.breakpoints.down(\"xs\")]: {\n      backgroundColor: \"#f6f6f6\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      textAlign: \"left\",\n      display: \"flex\",\n      backgroundColor: \"#f6f6f6\",\n    },\n  },\n  btn_control: {\n    [theme.breakpoints.down(\"xs\")]: {\n      paddingBottom: 16,\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      paddingRight: 16,\n      paddingBottom: 16,\n    },\n  },\n}));\n\nexport default function MediaControlCard({\n  title,\n  content,\n  btnLinks,\n  logoUrl,\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia className={classes.media} image={logoUrl} title=\"ICC Logo\" />\n      <div className={classes.content}>\n        <CardContent>\n          <Typography component=\"h1\" variant=\"h4\">\n            {title}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {content}\n          </Typography>\n        </CardContent>\n        <div className={classes.btn_control}>\n          <Link\n            to={btnLinks.profile_link}\n            style={{ textDecoration: \"none\", marginRight: 10 }}\n          >\n            <Button variant=\"contained\" color=\"secondary\">\n              See Profile\n            </Button>\n          </Link>\n          <Link\n            to={btnLinks.comparison_link}\n            style={{ textDecoration: \"none\" }}\n          >\n            <Button variant=\"contained\" color=\"secondary\">\n              See Comparison\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </Card>\n  );\n}\n",["150","151"],"/home/usman/Desktop/project/cricareer-frontend/src/Components/PlayerSearch.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Comparisons/IccPlayersBowlingAveragesComparison.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Comparisons/IccPlayersBattingAveragesComparison.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBattingAveragesComparison.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBowlingAveragesComparison.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/IccPlayerBattingAverages.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/IccPlayerBowlingAverages.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/LeaguePlayerBattingAverages.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Profiles/LeaguePlayerBowlingAverages.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Services/httpService.js",[],"/home/usman/Desktop/project/cricareer-frontend/src/Utils/humanify.js",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/Breadcrumb.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/Heading.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/MenuButton.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/TableView.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/AveragesTable.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Utils/tracking.js",[],"/home/usman/Desktop/project/cricareer-frontend/src/Utils/getFormattedBreadcrumb.js",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/EnhancedTableHead.jsx",[],"/home/usman/Desktop/project/cricareer-frontend/src/Utils/capitalizeFirstLetter.js",[],"/home/usman/Desktop/project/cricareer-frontend/src/Components/Common/TopbarMenu.jsx",["152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":14,"column":3,"nodeType":"159","messageId":"160","endLine":14,"endColumn":39},{"ruleId":"157","severity":1,"message":"161","line":15,"column":3,"nodeType":"159","messageId":"160","endLine":15,"endColumn":39},{"ruleId":"157","severity":1,"message":"158","line":13,"column":10,"nodeType":"159","messageId":"160","endLine":13,"endColumn":46},{"ruleId":"157","severity":1,"message":"161","line":14,"column":10,"nodeType":"159","messageId":"160","endLine":14,"endColumn":46},{"ruleId":"157","severity":1,"message":"162","line":53,"column":9,"nodeType":"159","messageId":"160","endLine":53,"endColumn":14},{"ruleId":"153","replacedBy":"163"},{"ruleId":"155","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":37,"column":6,"nodeType":"167","endLine":37,"endColumn":25,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'icc_batting_table_column_name_lookup' is defined but never used.","Identifier","unusedVar","'icc_bowling_table_column_name_lookup' is defined but never used.","'theme' is assigned a value but never used.",["169"],["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array. If 'setBtnLabel' needs the current value of 'type', you can also switch to useReducer instead of useState and read 'type' in the reducer.","ArrayExpression",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},"Update the dependencies array to be: [location.pathname, type]",{"range":"174","text":"175"},[1192,1211],"[location.pathname, type]"]