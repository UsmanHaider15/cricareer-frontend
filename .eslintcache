[{"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js":"1","/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js":"2","/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js":"3","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Header.jsx":"4","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home.jsx":"5","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/IccPlayerComparison.jsx":"6","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Footer.jsx":"7","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/MenuToolbar.jsx":"8","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerProfile.jsx":"9","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfiles.jsx":"10","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersComparison.jsx":"11","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/PlayerSearch.jsx":"12","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Data/data.js":"13","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBowlingAveragesComparison.jsx":"14","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBattingAveragesComparison.jsx":"15","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBowlingAverages.jsx":"16","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBattingAverages.jsx":"17","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBattingAverages.jsx":"18","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TopbarMenu.jsx":"19","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBowlingAverages.jsx":"20","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBowlingAveragesComparison.jsx":"21","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBattingAveragesComparison.jsx":"22","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Services/httpService.js":"23","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js":"24","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Breadcrumb.jsx":"25","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Heading.jsx":"26","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/capitalizeFirstLetter.js":"27","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TableView.jsx":"28","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/AveragesTable.jsx":"29","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MenuButton.jsx":"30","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/tracking.js":"31","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/getFormattedBreadcrumb.js":"32","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/EnhancedTableHead.jsx":"33"},{"size":1026,"mtime":1635771090275,"results":"34","hashOfConfig":"35"},{"size":6795,"mtime":1642692342843,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1635771090275,"results":"37","hashOfConfig":"35"},{"size":267,"mtime":1635771090271,"results":"38","hashOfConfig":"35"},{"size":11660,"mtime":1643023685245,"results":"39","hashOfConfig":"35"},{"size":8283,"mtime":1642692343998,"results":"40","hashOfConfig":"35"},{"size":1074,"mtime":1642692344046,"results":"41","hashOfConfig":"35"},{"size":2307,"mtime":1642690909895,"results":"42","hashOfConfig":"35"},{"size":6208,"mtime":1642692344054,"results":"43","hashOfConfig":"35"},{"size":6861,"mtime":1642692344054,"results":"44","hashOfConfig":"35"},{"size":9363,"mtime":1642692344054,"results":"45","hashOfConfig":"35"},{"size":2018,"mtime":1642693213058,"results":"46","hashOfConfig":"35"},{"size":4967,"mtime":1635771090275,"results":"47","hashOfConfig":"35"},{"size":4484,"mtime":1642692344050,"results":"48","hashOfConfig":"35"},{"size":4407,"mtime":1642692344054,"results":"49","hashOfConfig":"35"},{"size":2982,"mtime":1642692344046,"results":"50","hashOfConfig":"35"},{"size":3351,"mtime":1642692344050,"results":"51","hashOfConfig":"35"},{"size":3179,"mtime":1642692344046,"results":"52","hashOfConfig":"35"},{"size":2210,"mtime":1642693156644,"results":"53","hashOfConfig":"35"},{"size":3211,"mtime":1642692344046,"results":"54","hashOfConfig":"35"},{"size":4680,"mtime":1642692344050,"results":"55","hashOfConfig":"35"},{"size":4698,"mtime":1642692344050,"results":"56","hashOfConfig":"35"},{"size":590,"mtime":1642593146753,"results":"57","hashOfConfig":"35"},{"size":150,"mtime":1635771090275,"results":"58","hashOfConfig":"35"},{"size":882,"mtime":1642692344054,"results":"59","hashOfConfig":"35"},{"size":233,"mtime":1642692344054,"results":"60","hashOfConfig":"35"},{"size":141,"mtime":1635771090275,"results":"61","hashOfConfig":"35"},{"size":1498,"mtime":1642692344054,"results":"62","hashOfConfig":"35"},{"size":2378,"mtime":1642692344054,"results":"63","hashOfConfig":"35"},{"size":198,"mtime":1642692344054,"results":"64","hashOfConfig":"35"},{"size":484,"mtime":1635771090275,"results":"65","hashOfConfig":"35"},{"size":307,"mtime":1635771090275,"results":"66","hashOfConfig":"35"},{"size":1868,"mtime":1642692344054,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1tzukmn",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js",[],["139","140"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Header.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home.jsx",["141"],"import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nconst homeData = [\n  {\n    fullLeagueName: \"Pakistan Super League\",\n    leagueName: \"PSL\",\n    stats: [\n      {\n        type: \"Highest Score\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"108*\",\n      },\n      {\n        type: \"Most Runs\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"259\",\n      },\n      {\n        type: \"Most Wickets\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"13\",\n      },\n    ],\n    subStats: [\n      { type: \"Matches Played\", value: \"32\" },\n      { type: \"Most Match Score\", value: \"32\" },\n      { type: \"Best Win Percentage\", value: \"32\" },\n      { type: \"Most Runs Scored in a match\", value: \"306\" },\n      { type: \"total number of sixes\", value: 76 },\n      { type: \"TOTAL NUMBER OF WICKETS\", value: 5345 },\n    ],\n  },\n  {\n    fullLeagueName: \"Pakistan Super League\",\n    leagueName: \"PSL\",\n    stats: [\n      {\n        type: \"Highest Score\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"108*\",\n      },\n      {\n        type: \"Most Runs\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"259\",\n      },\n      {\n        type: \"Most Wickets\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"13\",\n      },\n    ],\n    subStats: [\n      { type: \"Matches Played\", value: \"32\" },\n      { type: \"Most Match Score\", value: \"32\" },\n      { type: \"Best Win Percentage\", value: \"32\" },\n      { type: \"Most Runs Scored in a match\", value: \"306\" },\n      { type: \"total number of sixes\", value: 76 },\n      { type: \"TOTAL NUMBER OF WICKETS\", value: 5345 },\n    ],\n  },\n  {\n    fullLeagueName: \"Pakistan Super League\",\n    leagueName: \"PSL\",\n    stats: [\n      {\n        type: \"Highest Score\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"108*\",\n      },\n      {\n        type: \"Most Runs\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"259\",\n      },\n      {\n        type: \"Most Wickets\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"13\",\n      },\n    ],\n    subStats: [\n      { type: \"Matches Played\", value: \"32\" },\n      { type: \"Most Match Score\", value: \"32\" },\n      { type: \"Best Win Percentage\", value: \"32\" },\n      { type: \"Most Runs Scored in a match\", value: \"306\" },\n      { type: \"total number of sixes\", value: 76 },\n      { type: \"TOTAL NUMBER OF WICKETS\", value: 5345 },\n    ],\n  },\n  {\n    fullLeagueName: \"Pakistan Super League\",\n    leagueName: \"PSL\",\n    stats: [\n      {\n        type: \"Highest Score\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"108*\",\n      },\n      {\n        type: \"Most Runs\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"259\",\n      },\n      {\n        type: \"Most Wickets\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"13\",\n      },\n    ],\n    subStats: [\n      { type: \"Matches Played\", value: \"32\" },\n      { type: \"Most Match Score\", value: \"32\" },\n      { type: \"Best Win Percentage\", value: \"32\" },\n      { type: \"Most Runs Scored in a match\", value: \"306\" },\n      { type: \"total number of sixes\", value: 76 },\n      { type: \"TOTAL NUMBER OF WICKETS\", value: 5345 },\n    ],\n  },\n  {\n    fullLeagueName: \"Pakistan Super League\",\n    leagueName: \"PSL\",\n    stats: [\n      {\n        type: \"Highest Score\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"108*\",\n      },\n      {\n        type: \"Most Runs\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"259\",\n      },\n      {\n        type: \"Most Wickets\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"13\",\n      },\n    ],\n    subStats: [\n      { type: \"Matches Played\", value: \"32\" },\n      { type: \"Most Match Score\", value: \"32\" },\n      { type: \"Best Win Percentage\", value: \"32\" },\n      { type: \"Most Runs Scored in a match\", value: \"306\" },\n      { type: \"total number of sixes\", value: 76 },\n      { type: \"TOTAL NUMBER OF WICKETS\", value: 5345 },\n    ],\n  },\n  {\n    fullLeagueName: \"Pakistan Super League\",\n    leagueName: \"PSL\",\n    stats: [\n      {\n        type: \"Highest Score\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"108*\",\n      },\n      {\n        type: \"Most Runs\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"259\",\n      },\n      {\n        type: \"Most Wickets\",\n        avatar_url:\n          \"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/681305_headshot.png\",\n        player_name: \"usman haider\",\n        value: \"13\",\n      },\n    ],\n    subStats: [\n      { type: \"Matches Played\", value: \"32\" },\n      { type: \"Most Match Score\", value: \"32\" },\n      { type: \"Best Win Percentage\", value: \"32\" },\n      { type: \"Most Runs Scored in a match\", value: \"306\" },\n      { type: \"total number of sixes\", value: 76 },\n      { type: \"TOTAL NUMBER OF WICKETS\", value: 5345 },\n    ],\n  },\n];\nconst Home = () => {\n  return (\n    <React.Fragment>\n      <Grid container>\n        <Grid md={2}></Grid>\n        <Grid xs={12} md={8}>\n          <Box\n            sx={{\n              padding: 5,\n              width: \"100%\",\n              textAlign: \"center\",\n            }}\n          >\n            <Typography variant=\"h3\" component=\"div\" gutterBottom>\n              Cricareer - Cricket Statistics Site\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n              Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore\n              consectetur, neque doloribus, cupiditate numquam dignissimos\n              laborum fugiat deleniti? Eum quasi quidem quibusdam.\n            </Typography>\n            <Typography variant=\"h3\" component=\"div\" gutterBottom>\n              Some awesome stats or whatever\n            </Typography>\n          </Box>\n          {homeData.map((data) => (\n            <div>\n              <div style={{ padding: \"40px 0px 20px 0px\" }}>\n                <Typography variant=\"h3\" gutterBottom component=\"div\">\n                  {data.fullLeagueName}\n                </Typography>\n                <Typography variant=\"h5\" gutterBottom component=\"div\">\n                  TOURNAMENT STATS\n                </Typography>\n              </div>\n\n              <Grid container spacing={1}>\n                {data.stats.map((stat) => (\n                  <Grid item xs={12} md={6} lg={4}>\n                    <div\n                      style={{\n                        backgroundColor: \"rgb(16,4,74)\",\n                        height: 200,\n                        position: \"relative\",\n                        borderRadius: 5,\n                        color: \"white\",\n                        zIndex: 1,\n                        overflow: \"hidden\",\n                      }}\n                    >\n                      <div\n                        style={{\n                          textAlign: \"left\",\n                          position: \"absolute\",\n                          top: 20,\n                          left: 20,\n                          fontWeight: \"bold\",\n                          fontSize: \"1.3rem\",\n                        }}\n                      >\n                        HIGHEST SCORE\n                      </div>\n                      <div\n                        style={{\n                          textAlign: \"left\",\n                          position: \"absolute\",\n                          top: 80,\n                          left: 20,\n                          fontWeight: \"bold\",\n                          fontSize: \"1.5rem\",\n                        }}\n                      >\n                        USMAN HAIDER\n                      </div>\n                      <div\n                        style={{\n                          textAlign: \"left\",\n                          position: \"absolute\",\n                          bottom: 20,\n                          left: 20,\n                          fontWeight: \"bold\",\n                          fontSize: \"2rem\",\n                        }}\n                      >\n                        200*\n                      </div>\n                      <img\n                        style={{\n                          right: -50,\n                          bottom: 0,\n                          position: \"absolute\",\n                          height: 200,\n                          width: 300,\n                          zIndex: -10,\n                        }}\n                        class=\"image1\"\n                        src=\"https://cricareer.s3.ap-south-1.amazonaws.com/avatars/253802_headshot.png\"\n                      />\n                    </div>\n                  </Grid>\n                ))}\n              </Grid>\n              <Grid container spacing={1} style={{ paddingTop: 10 }}>\n                {data.subStats.map((stat) => (\n                  <Grid item xs={6} md={2} lg={2}>\n                    <div\n                      style={{\n                        backgroundColor: \"rgb(16,4,74)\",\n                        height: 150,\n                        borderRadius: 5,\n                        color: \"white\",\n                        zIndex: 1,\n                        overflow: \"hidden\",\n                        padding: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"space-around\",\n                      }}\n                    >\n                      <div style={{ fontSize: \"1.2rem\", fontWeight: \"bold\" }}>\n                        {stat.type}\n                      </div>\n                      <div style={{ fontSize: \"3rem\", fontWeight: \"bolder\" }}>\n                        {stat.value}\n                      </div>\n                    </div>\n                  </Grid>\n                ))}\n              </Grid>\n            </div>\n          ))}\n        </Grid>\n        <Grid md={2}></Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/IccPlayerComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Footer.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/MenuToolbar.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerProfile.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfiles.jsx",["142","143"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router\";\nimport qs from \"qs\";\nimport PlayerSearch from \"Components/PlayerSearch\";\nimport Grid from \"@mui/material/Grid\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport LeaguePlayerBattingAverages from \"./LeaguePlayerBattingAverages\";\nimport LeaguePlayerBowlingAverages from \"./LeaguePlayerBowlingAverages\";\nimport Breadcrumb from \"Components/Common/Breadcrumb\";\nimport CustomResponsiveFontSizes from \"Components/Common/Heading\";\nimport httpService from \"Services/httpService\";\nimport Header from \"Components/Common/Header\";\nimport { icc_batting_table_column_name_lookup, league_teams } from \"Data/data\";\nimport { icc_bowling_table_column_name_lookup } from \"../../Data/data\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst LeaguePlayerProfiles = ({ history, leagueName, initialPlayerID }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [player, setPlayer] = useState({});\n  const [ref, loaded, onLoad] = useImageLoaded();\n  const prevLeagueName = usePrevious(leagueName);\n\n  const [battingSeason, setBattingSeason] = React.useState(\"\");\n  const [bowlingSeason, setBowlingSeason] = React.useState(\"\");\n\n  if (prevLeagueName && leagueName !== prevLeagueName) {\n    window.location.reload();\n  }\n  useEffect(() => {\n    if (Object.keys(player).length) {\n      history.push({\n        pathname: \"\",\n        search: `player_id=${player.player_id}&batting_season=${battingSeason}&bowling_season=${bowlingSeason}`,\n      });\n    }\n  }, [player, battingSeason, bowlingSeason, history]);\n\n  const [locationKeys, setLocationKeys] = useState([]);\n\n  useEffect(() => {\n    return history.listen((location) => {\n      if (history.action === \"PUSH\") {\n        setLocationKeys([location.key]);\n      }\n\n      if (history.action === \"POP\") {\n        if (locationKeys[1] === location.key) {\n          setLocationKeys(([_, ...keys]) => keys);\n          // Handle forward event\n        } else {\n          // Handle back event\n          history.push(\"/\");\n        }\n      }\n    });\n  }, [locationKeys, history]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_players_list\", {\n        params: {\n          limit: 500,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const query_parameters = qs.parse(history.location.search.substring(1));\n    const batting_season = query_parameters[\"batting_season\"];\n    const bowling_season = query_parameters[\"bowling_season\"];\n    setBattingSeason(batting_season || 0);\n    setBowlingSeason(bowling_season || 0);\n\n    const url_id = qs.parse(history.location.search.substring(1));\n    const player_id = url_id.player_id ? url_id.player_id : initialPlayerID;\n\n    httpService\n      .get(`/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        console.log(\"response\", response);\n        setPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    history.push({\n      // pathname: \"\",\n      search: `player_id=${player_id}`,\n    });\n  }, [history, initialPlayerID, leagueName]);\n\n  const handleSelectedPlayer = (player) => {\n    setPlayer(player);\n  };\n\n  return (\n    <div>\n      <Header\n        title={`${\n          player.player_name\n        }'s Batting and Bowling Averages in ${leagueName.toUpperCase()}`}\n        description={`Get Details of ${\n          player.player_name\n        }'s batting and bowling averages in any season of ${leagueName.toUpperCase()}. You can also get details of bowling and batting averages of ${\n          player.player_name\n        } against PSL teams like${Object.values(league_teams[leagueName])\n          .slice(1)\n          .map((team) => ` ${team}`)} \n           as well.`}\n      />\n      <Breadcrumb />\n      <Grid container spacing={1}>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <PlayerSearch\n              InitialPlayersList={initialPlayersList}\n              setSelectedPlayer={handleSelectedPlayer}\n              player={player}\n              url=\"/league_player_profile/search_player_by_name\"\n              league_name={leagueName}\n            />\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                paddingTop: 10,\n              }}\n            >\n              <img\n                ref={ref}\n                onLoad={onLoad}\n                src={\n                  player.headshot_image_url\n                    ? player.headshot_image_url\n                    : \"/default-user.jpg\"\n                }\n                alt=\"\"\n                style={{\n                  minWidth: \"60%\",\n                  display: loaded ? \"block\" : \"none\",\n                }}\n              />\n              {!loaded ? <CircularProgress /> : null}\n            </div>\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Batting Averages\" />\n          {Object.keys(player).length > 0 ? (\n            <LeaguePlayerBattingAverages\n              leagueName={leagueName}\n              player={player}\n              battingSeason={battingSeason}\n              setBattingSeason={setBattingSeason}\n            />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Bowling Averages\" />\n          {Object.keys(player).length > 0 ? (\n            <LeaguePlayerBowlingAverages\n              leagueName={leagueName}\n              player={player}\n              bowlingSeason={bowlingSeason}\n              setBowlingSeason={setBowlingSeason}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(LeaguePlayerProfiles);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersComparison.jsx",["144","145"],"import React from \"react\";\nimport PlayerSearch from \"Components/PlayerSearch\";\nimport Grid from \"@mui/material/Grid\";\nimport qs from \"qs\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { withRouter } from \"react-router\";\nimport Breadcrumb from \"Components/Common/Breadcrumb\";\nimport httpService from \"Services/httpService\";\nimport LeaguePlayersBattingAveragesComparison from \"./LeaguePlayersBattingAveragesComparison\";\nimport LeaguePlayersBowlingAveragesComparison from \"./LeaguePlayersBowlingAveragesComparison\";\nimport Header from \"Components/Common/Header\";\nimport {\n  icc_batting_table_column_name_lookup,\n  icc_bowling_table_column_name_lookup,\n  league_teams,\n} from \"Data/data\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst LeaguePlayersComparison = ({\n  history,\n  leagueName,\n  initialFirstPlayerID,\n  initialSecondPlayerID,\n}) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [firstPlayer, setFirstPlayer] = useState({});\n  const [secondPlayer, setSecondPlayer] = useState({});\n  const [firstRef, firstLoaded, firstOnLoad] = useImageLoaded();\n  const [secondRef, secondLoaded, secondOnLoad] = useImageLoaded();\n  const prevLeagueName = usePrevious(leagueName);\n\n  const [battingSeason, setBattingSeason] = React.useState(5);\n  const [battingOpposition, setBattingOpposition] = React.useState(\"All Teams\");\n  const [bowlingSeason, setBowlingSeason] = React.useState(5);\n  const [bowlingOpposition, setBowlingOpposition] = React.useState(\"All Teams\");\n\n  if (prevLeagueName && leagueName !== prevLeagueName) {\n    window.location.reload();\n  }\n\n  useEffect(() => {\n    if (Object.keys(firstPlayer).length && Object.keys(secondPlayer).length) {\n      history.push({\n        pathname: \"\",\n        search: `first_player_id=${firstPlayer.player_id}&second_player_id=${secondPlayer.player_id}&batting_season=${battingSeason}&batting_opposition=${battingOpposition}&bowling_season=${bowlingSeason}&bowling_opposition=${bowlingOpposition}`,\n      });\n    }\n  }, [\n    firstPlayer,\n    secondPlayer,\n    battingSeason,\n    battingOpposition,\n    bowlingSeason,\n    bowlingOpposition,\n    history,\n  ]);\n\n  const [locationKeys, setLocationKeys] = useState([]);\n\n  useEffect(() => {\n    return history.listen((location) => {\n      if (history.action === \"PUSH\") {\n        setLocationKeys([location.key]);\n      }\n\n      if (history.action === \"POP\") {\n        if (locationKeys[1] === location.key) {\n          setLocationKeys(([_, ...keys]) => keys);\n          // Handle forward event\n        } else {\n          // Handle back event\n          history.push(\"/\");\n        }\n      }\n    });\n  }, [locationKeys, history]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_players_list\", {\n        params: {\n          limit: 500,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const query_parameters = qs.parse(history.location.search.substring(1));\n\n    const batting_opposition = query_parameters[\"batting_opposition\"];\n    console.log(\"batting_opposition\", batting_opposition);\n    setBattingOpposition(batting_opposition || \"All Teams\");\n    const batting_season = query_parameters[\"batting_season\"];\n    console.log(\"batting_season\", batting_season);\n    setBattingSeason(batting_season || 0);\n\n    const bowling_opposition = query_parameters[\"bowling_opposition\"];\n    setBowlingOpposition(bowling_opposition || \"All Teams\");\n    const bowling_season = query_parameters[\"bowling_season\"];\n    setBowlingSeason(bowling_season || 0);\n\n    const player_ids = qs.parse(history.location.search.substring(1));\n    const first_player_id = player_ids.first_player_id || initialFirstPlayerID;\n    const second_player_id =\n      player_ids.second_player_id || initialSecondPlayerID;\n\n    httpService\n      .get(`/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: first_player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setFirstPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    httpService\n      .get(`/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: second_player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setSecondPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    history.push({\n      // pathname: \"\",\n      search: `first_player_id=${first_player_id}&second_player_id=${second_player_id}`,\n    });\n  }, [history, initialFirstPlayerID, initialSecondPlayerID, leagueName]);\n\n  const handleSelectedPlayer = (player, isFirst) => {\n    if (isFirst) {\n      setFirstPlayer(player);\n    } else {\n      setSecondPlayer(player);\n    }\n  };\n\n  return (\n    <div>\n      <Header\n        title={`${firstPlayer.player_name} vs ${\n          secondPlayer.player_name\n        } in ${leagueName.toUpperCase()}`}\n        description={`\n        Compare Batting and Bowling Averages of ${\n          firstPlayer.player_name\n        } and ${\n          secondPlayer.player_name\n        } in any season of ${leagueName.toUpperCase()}. You can also compare ${\n          firstPlayer.player_name\n        } and ${\n          secondPlayer.player_name\n        } batting and bowling averages against other teams like${Object.values(\n          league_teams[leagueName]\n        )\n          .slice(1)\n          .map((team) => ` ${team}`)} as well.`}\n      />\n      <Breadcrumb />\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={firstPlayer}\n            url=\"/league_player_profile/search_player_by_name\"\n            league_name={leagueName}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={secondPlayer}\n            isFirst={false}\n            url=\"/league_player_profile/search_player_by_name\"\n            league_name={leagueName}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              padding: 10,\n            }}\n          >\n            <img\n              ref={firstRef}\n              onLoad={firstOnLoad}\n              src={firstPlayer.headshot_image_url || \"/default-user.jpg\"}\n              alt=\"\"\n              style={{\n                minWidth: \"60%\",\n                display: firstLoaded ? \"block\" : \"none\",\n              }}\n            />\n            {!firstLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              padding: 10,\n            }}\n          >\n            <img\n              ref={secondRef}\n              onLoad={secondOnLoad}\n              src={secondPlayer.headshot_image_url || \"/default-user.jpg\"}\n              alt=\"\"\n              style={{\n                minWidth: \"60%\",\n                display: secondLoaded ? \"block\" : \"none\",\n              }}\n            />\n\n            {!secondLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        {firstPlayer.player_id && secondPlayer.player_id ? (\n          <Grid container>\n            <LeaguePlayersBattingAveragesComparison\n              firstPlayer={firstPlayer}\n              secondPlayer={secondPlayer}\n              leagueName={leagueName}\n              battingSeason={battingSeason}\n              setBattingSeason={setBattingSeason}\n              battingOpposition={battingOpposition}\n              setBattingOpposition={setBattingOpposition}\n            />\n            <LeaguePlayersBowlingAveragesComparison\n              firstPlayer={firstPlayer}\n              secondPlayer={secondPlayer}\n              leagueName={leagueName}\n              bowlingSeason={bowlingSeason}\n              setBowlingSeason={setBowlingSeason}\n              bowlingOpposition={bowlingOpposition}\n              setBowlingOpposition={setBowlingOpposition}\n            />\n          </Grid>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(LeaguePlayersComparison);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/PlayerSearch.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Data/data.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBowlingAveragesComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBattingAveragesComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBowlingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBattingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBattingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TopbarMenu.jsx",["146"],"import React, { useEffect } from \"react\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport humanify from \"Utils/humanify\";\nimport MenuButton from \"Components/Common/MenuButton\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport capitalizeFirstLetter from \"Utils/capitalizeFirstLetter\";\n\nexport default function TopbarMenu({ type, links }) {\n  const location = useLocation();\n  const [btnLabel, setBtnLabel] = React.useState(\n    `Select ${capitalizeFirstLetter(type)}`\n  );\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isActive, setIsActive] = React.useState(false);\n\n  const handleClick = (event) => {\n    setIsOpen(true);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    if (!location.pathname.includes(`${type}s`)) {\n      setBtnLabel(`Select ${capitalizeFirstLetter(type)}`);\n      setIsActive(false);\n    } else {\n      const btnLabel = humanify(location.pathname.split(\"/\").pop());\n      setBtnLabel(btnLabel);\n      setIsActive(true);\n    }\n  }, [location.pathname]);\n\n  return (\n    <div>\n      <MenuButton\n        style={{ color: isActive ? \"red\" : \"grey\" }}\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        {btnLabel} {!isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n      </MenuButton>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {links.map(({ link, league }) => (\n          <Link to={link} style={{ textDecoration: \"none\" }}>\n            <MenuItem\n              onClick={() => {\n                setBtnLabel(`${league} Profile`);\n                handleClose();\n              }}\n            >\n              {league} Player Profile\n            </MenuItem>\n          </Link>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBowlingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBowlingAveragesComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBattingAveragesComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Services/httpService.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Breadcrumb.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Heading.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/capitalizeFirstLetter.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TableView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/AveragesTable.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MenuButton.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/tracking.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/getFormattedBreadcrumb.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/EnhancedTableHead.jsx",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":305,"column":23,"nodeType":"153","endLine":316,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":13,"column":10,"nodeType":"156","messageId":"157","endLine":13,"endColumn":46},{"ruleId":"154","severity":1,"message":"158","line":14,"column":10,"nodeType":"156","messageId":"157","endLine":14,"endColumn":46},{"ruleId":"154","severity":1,"message":"155","line":14,"column":3,"nodeType":"156","messageId":"157","endLine":14,"endColumn":39},{"ruleId":"154","severity":1,"message":"158","line":15,"column":3,"nodeType":"156","messageId":"157","endLine":15,"endColumn":39},{"ruleId":"159","severity":1,"message":"160","line":40,"column":6,"nodeType":"161","endLine":40,"endColumn":25,"suggestions":"162"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'icc_batting_table_column_name_lookup' is defined but never used.","Identifier","unusedVar","'icc_bowling_table_column_name_lookup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array. If 'setBtnLabel' needs the current value of 'type', you can also switch to useReducer instead of useState and read 'type' in the reducer.","ArrayExpression",["165"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},"Update the dependencies array to be: [location.pathname, type]",{"range":"168","text":"169"},[1346,1365],"[location.pathname, type]"]