[{"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js":"1","/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js":"2","/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js":"3","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js":"4","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/getFormattedBreadcrumb.js":"5","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/capitalizeFirstLetter.js":"6","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/MenuToolbar.jsx":"7","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/IccPlayerComparison.jsx":"8","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home.jsx":"9","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfiles.jsx":"10","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerProfile.jsx":"11","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersComparison.jsx":"12","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/ProfileMenu.jsx":"13","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/ComparisonMenu.jsx":"14","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/PlayerSearch.jsx":"15","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBattingAverages.jsx":"16","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBowlingAverages.jsx":"17","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBattingAverages.jsx":"18","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBowlingAverages.jsx":"19","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Services/httpService.js":"20","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Breadcrumb.jsx":"21","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBattingAveragesComparison.jsx":"22","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBowlingAveragesComparison.jsx":"23","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBattingAveragesComparison.jsx":"24","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBowlingAveragesComparison.jsx":"25","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Footer.jsx":"26","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MenuButton.jsx":"27","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Data/data.js":"28","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TableView.jsx":"29","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Heading.jsx":"30","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/AveragesTable.jsx":"31","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/EnhancedTableHead.jsx":"32","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/HomeCard.jsx":"33","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/tracking.js":"34"},{"size":657,"mtime":1624666775956,"results":"35","hashOfConfig":"36"},{"size":7193,"mtime":1625860026200,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1610861361319,"results":"38","hashOfConfig":"36"},{"size":150,"mtime":1611167234492,"results":"39","hashOfConfig":"36"},{"size":307,"mtime":1617452442767,"results":"40","hashOfConfig":"36"},{"size":141,"mtime":1617452429503,"results":"41","hashOfConfig":"36"},{"size":1239,"mtime":1616870513069,"results":"42","hashOfConfig":"36"},{"size":7629,"mtime":1625859187918,"results":"43","hashOfConfig":"36"},{"size":6475,"mtime":1625859846602,"results":"44","hashOfConfig":"36"},{"size":6068,"mtime":1625859205063,"results":"45","hashOfConfig":"36"},{"size":5551,"mtime":1625859209354,"results":"46","hashOfConfig":"36"},{"size":8443,"mtime":1625859199304,"results":"47","hashOfConfig":"36"},{"size":3558,"mtime":1625859871273,"results":"48","hashOfConfig":"36"},{"size":3836,"mtime":1625859895885,"results":"49","hashOfConfig":"36"},{"size":1992,"mtime":1625860102790,"results":"50","hashOfConfig":"36"},{"size":3513,"mtime":1624673955387,"results":"51","hashOfConfig":"36"},{"size":3545,"mtime":1624672056762,"results":"52","hashOfConfig":"36"},{"size":3699,"mtime":1624693447628,"results":"53","hashOfConfig":"36"},{"size":3300,"mtime":1624671754284,"results":"54","hashOfConfig":"36"},{"size":652,"mtime":1617841486539,"results":"55","hashOfConfig":"36"},{"size":892,"mtime":1618000418205,"results":"56","hashOfConfig":"36"},{"size":4783,"mtime":1624673947035,"results":"57","hashOfConfig":"36"},{"size":4860,"mtime":1624693485303,"results":"58","hashOfConfig":"36"},{"size":5079,"mtime":1624695628546,"results":"59","hashOfConfig":"36"},{"size":5061,"mtime":1624695628550,"results":"60","hashOfConfig":"36"},{"size":1727,"mtime":1617450127550,"results":"61","hashOfConfig":"36"},{"size":415,"mtime":1624754178467,"results":"62","hashOfConfig":"36"},{"size":4997,"mtime":1625850346983,"results":"63","hashOfConfig":"36"},{"size":1502,"mtime":1617678241008,"results":"64","hashOfConfig":"36"},{"size":639,"mtime":1617449878397,"results":"65","hashOfConfig":"36"},{"size":2996,"mtime":1617678497321,"results":"66","hashOfConfig":"36"},{"size":1920,"mtime":1618000446783,"results":"67","hashOfConfig":"36"},{"size":1738,"mtime":1617706955809,"results":"68","hashOfConfig":"36"},{"size":484,"mtime":1618017600379,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1xm0vh1",{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js",[],["148","149"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js",["150","151"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/getFormattedBreadcrumb.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/capitalizeFirstLetter.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/MenuToolbar.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/IccPlayerComparison.jsx",["152","153","154"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfiles.jsx",["155","156","157"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerProfile.jsx",["158","159","160"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersComparison.jsx",["161","162","163"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/ProfileMenu.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/ComparisonMenu.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/PlayerSearch.jsx",["164"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBattingAverages.jsx",["165","166"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AveragesTable from \"Components/Common/AveragesTable\";\nimport _ from \"lodash\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  league_batting_table_column_name_lookup,\n  league_seasons,\n} from \"Data/data\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayerBattingAverages = ({\n  player,\n  leagueName,\n  setBattingSeason,\n  battingSeason,\n}) => {\n  const classes = useStyles();\n  const [battingAverages, setBattingAverages] = useState([]);\n  const [option, setOption] = React.useState(battingSeason);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setOption(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    setBattingSeason(option);\n  }, [option]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_player_batting_averages\", {\n        params: {\n          player_id: player.player_id,\n          season_number: option,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        const data = response.data.rows;\n\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, [\n            \"opposition_team\",\n            \"innings_played\",\n            \"not_outs\",\n            \"runs_scored\",\n            \"highest_inns_score\",\n            \"batting_average\",\n            \"balls_faced\",\n            \"batting_strike_rate\",\n            \"hundreds_scored\",\n            \"fifties_scored\",\n            \"boundary_fours\",\n            \"boundary_sixes\",\n          ])\n        );\n\n        setBattingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, option]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={option}\n            onChange={handleChange}\n            label=\"Option\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      {battingAverages.length ? (\n        <AveragesTable\n          rows={battingAverages}\n          columnNamesLookup={league_batting_table_column_name_lookup}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default LeaguePlayerBattingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBowlingAverages.jsx",["167","168"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AveragesTable from \"Components/Common/AveragesTable\";\nimport _ from \"lodash\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  league_bowling_table_column_to_label_lookup,\n  league_seasons,\n} from \"Data/data\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayerBowlingAverages = ({\n  player,\n  leagueName,\n  setBowlingSeason,\n  bowlingSeason,\n}) => {\n  const classes = useStyles();\n  const [bowlingAverages, setBowlingAverages] = useState([]);\n  const [option, setOption] = React.useState(bowlingSeason);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setOption(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    setBowlingSeason(option);\n  }, [option]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_player_bowling_averages\", {\n        params: {\n          player_id: player.player_id,\n          season_number: option,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        const data = response.data.rows;\n\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, [\n            \"opposition_team\",\n            \"innings_played\",\n            \"balls_bowled\",\n            \"runs_conceded\",\n            \"wickets_taken\",\n            \"best_innings_bowling\",\n            \"bowling_average\",\n            \"economy_rate\",\n            \"bowling_strike_rate\",\n            \"five_wkts_in_an_inns\",\n            \"four_wkts_in_an_inns\",\n            \"ten_wkts_in_an_inns\",\n          ])\n        );\n\n        setBowlingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, option]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={option}\n            onChange={handleChange}\n            label=\"Option\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      {bowlingAverages.length ? (\n        <AveragesTable\n          rows={bowlingAverages}\n          columnNamesLookup={league_bowling_table_column_to_label_lookup}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default LeaguePlayerBowlingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBattingAverages.jsx",["169"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport _ from \"lodash\";\nimport {\n  icc_batting_table_column_name_lookup,\n  icc_teams_lookup,\n} from \"Data/data\";\nimport AveragesTable from \"Components/Common/AveragesTable\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0 },\n  select: {\n    marginBottom: 10,\n  },\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst IccPlayerBattingAverages = ({\n  player,\n  battingOpposition,\n  setBattingOpposition,\n}) => {\n  const classes = useStyles();\n\n  const [battingAverages, setBattingAverages] = useState([]);\n\n  const [oppositionOption, setOppositionOption] =\n    React.useState(battingOpposition);\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    setBattingOpposition(oppositionOption);\n  }, [oppositionOption]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/icc_profile/icc_career_averages\", {\n        params: {\n          player_id: player.player_id,\n          opposition_team: oppositionOption,\n          type: \"batting\",\n        },\n      })\n      .then(function (response) {\n        const data = response.data.rows;\n\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, [\n            \"format_type\",\n            \"matches_played\",\n            \"innings_played\",\n            \"not_outs\",\n            \"runs_scored\",\n            \"highest_inns_score\",\n            \"batting_average\",\n            \"balls_faced\",\n            \"batting_strike_rate\",\n            \"hundreds_scored\",\n            \"fifties_scored\",\n            \"ducks_scored\",\n            \"boundary_fours\",\n            \"boundary_sixes\",\n          ])\n        );\n\n        setBattingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, oppositionOption]);\n\n  return (\n    <Grid container>\n      <Grid item>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.select}\n          >\n            {Object.entries(icc_teams_lookup).map(([value, label]) => (\n              <MenuItem value={value}>{label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        {Object.keys(battingAverages).length ? (\n          <AveragesTable\n            rows={battingAverages}\n            columnNamesLookup={icc_batting_table_column_name_lookup}\n          />\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default IccPlayerBattingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBowlingAverages.jsx",["170","171"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  icc_teams_lookup,\n  icc_bowling_table_column_name_lookup,\n} from \"Data/data\";\nimport _ from \"lodash\";\nimport AveragesTable from \"Components/Common/AveragesTable\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst IccPlayerBowlingAverages = ({\n  player,\n  bowlingOpposition,\n  setBowlingOpposition,\n}) => {\n  const classes = useStyles();\n\n  const [oppositionOption, setOppositionOption] =\n    React.useState(bowlingOpposition);\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n  const [bowlingAverages, setBowlingAverages] = useState([]);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    setBowlingOpposition(oppositionOption);\n  }, [oppositionOption]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/icc_profile/icc_career_averages\", {\n        params: {\n          player_id: player[\"player_id\"],\n          opposition_team: oppositionOption,\n          type: \"bowling\",\n        },\n      })\n      .then(function (response) {\n        const data = response.data.rows;\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, Object.keys(icc_bowling_table_column_name_lookup))\n        );\n\n        setBowlingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, oppositionOption]);\n\n  return (\n    <Grid container>\n      <Grid item>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {Object.entries(icc_teams_lookup).map(([value, label]) => (\n              <MenuItem value={value}>{label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        {Object.keys(bowlingAverages).length ? (\n          <AveragesTable\n            rows={bowlingAverages}\n            columnNamesLookup={icc_bowling_table_column_name_lookup}\n          />\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default IccPlayerBowlingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Services/httpService.js",["172"],"import axios from \"axios\";\n\nconsole.log(\"process.env\", process.env);\nconst baseUrl =\n  process.env.REACT_APP_ENVIRONMENT === \"PROD\"\n    ? \"https://criccareers.com\"\n    : \"http://localhost:3001\";\n\naxios.defaults.baseURL = baseUrl;\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"Logging the error\", error);\n    alert(\"An unexpected error occurred\");\n  }\n\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Breadcrumb.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBattingAveragesComparison.jsx",["173"],"import React, { useEffect } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableView from \"Components/Common/TableView\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { icc_teams_lookup } from \"Data/data\";\nimport CustomResponsiveFontSizes from \"Components/Common/Heading\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst IccPlayersBattingAveragesComparison = ({\n  firstPlayer,\n  secondPlayer,\n  battingFormat,\n  setBattingFormat,\n  battingOpposition,\n  setBattingOpposition,\n}) => {\n  const classes = useStyles();\n  const [chartData, setChartData] = React.useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const [formatType, setFormatType] = React.useState(battingFormat);\n  const [formatMenuOpen, setFormatMenuOpen] = React.useState(false);\n\n  const handleFormatChange = (event) => {\n    setFormatType(event.target.value);\n  };\n\n  const handleFormatMenuClose = () => {\n    setFormatMenuOpen(false);\n  };\n\n  const handleFormatMenuOpen = () => {\n    setFormatMenuOpen(true);\n  };\n\n  const [oppositionOption, setOppositionOption] =\n    React.useState(battingOpposition);\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    setBattingFormat(formatType);\n    setBattingOpposition(oppositionOption);\n  }, [formatType, oppositionOption]);\n\n  useEffect(() => {\n    httpService\n      .get(`/icc_comparison/career_averages_comparison`, {\n        params: {\n          first_player_id: firstPlayer.player_id,\n          second_player_id: secondPlayer.player_id,\n          format_type: formatType,\n          opposition_team: oppositionOption,\n          type: \"batting\",\n        },\n      })\n      .then(function ({ data }) {\n        const { first_player, second_player } = data;\n\n        setChartData({ first_player, second_player });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [\n    formatType,\n    oppositionOption,\n    firstPlayer.player_id,\n    secondPlayer.player_id,\n  ]);\n\n  return (\n    <Grid container>\n      <Grid xs={12}>\n        <CustomResponsiveFontSizes text=\"Batting Averages Comparison\" />\n      </Grid>\n      <Grid xs={12} style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Format</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={formatMenuOpen}\n            onClose={handleFormatMenuClose}\n            onOpen={handleFormatMenuOpen}\n            value={formatType}\n            onChange={handleFormatChange}\n            label=\"Format\"\n            className={classes.root}\n          >\n            {[\"All Formats\", \"T20Is\", \"Tests\", \"ODIs\"].map((format) => (\n              <MenuItem value={format}>{format}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {Object.entries(icc_teams_lookup).map(([value, label]) => (\n              <MenuItem value={value}>{label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid\n        xs={12}\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          padding: 8,\n          marginBottom: 20,\n          width: \"100%\",\n        }}\n      >\n        <TableView\n          data={chartData}\n          excludedKeys={[\"player_id\", \"format_type\", \"opposition_team\"]}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default IccPlayersBattingAveragesComparison;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBowlingAveragesComparison.jsx",["174"],"import React, { useEffect } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableView from \"Components/Common/TableView\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { icc_teams_lookup } from \"Data/data\";\nimport CustomResponsiveFontSizes from \"Components/Common/Heading\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst IccPlayersBowlingAveragesComparison = ({\n  firstPlayer,\n  secondPlayer,\n  bowlingFormat,\n  setBowlingFormat,\n  bowlingOpposition,\n  setBowlingOpposition,\n}) => {\n  const classes = useStyles();\n  const [chartData, setChartData] = React.useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const [formatType, setFormatType] = React.useState(bowlingFormat);\n  const [formatMenuOpen, setFormatMenuOpen] = React.useState(false);\n\n  const handleFormatChange = (event) => {\n    setFormatType(event.target.value);\n  };\n\n  const handleFormatMenuClose = () => {\n    setFormatMenuOpen(false);\n  };\n\n  const handleFormatMenuOpen = () => {\n    setFormatMenuOpen(true);\n  };\n\n  const [oppositionOption, setOppositionOption] =\n    React.useState(bowlingOpposition);\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    setBowlingFormat(formatType);\n    setBowlingOpposition(oppositionOption);\n  }, [formatType, oppositionOption]);\n\n  useEffect(() => {\n    httpService\n      .get(`/icc_comparison/career_averages_comparison`, {\n        params: {\n          first_player_id: firstPlayer.player_id,\n          second_player_id: secondPlayer.player_id,\n          format_type: formatType,\n          opposition_team: oppositionOption,\n          type: \"bowling\",\n        },\n      })\n      .then(function ({ data }) {\n        const { first_player, second_player } = data;\n\n        setChartData({ first_player, second_player });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [\n    formatType,\n    oppositionOption,\n    firstPlayer.player_id,\n    secondPlayer.player_id,\n  ]);\n\n  return (\n    <Grid container>\n      <Grid xs={12}>\n        <CustomResponsiveFontSizes text=\"Bowling Averages Comparison\" />\n      </Grid>\n      <Grid xs={12} style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Format</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={formatMenuOpen}\n            onClose={handleFormatMenuClose}\n            onOpen={handleFormatMenuOpen}\n            value={formatType}\n            onChange={handleFormatChange}\n            label=\"Format\"\n            className={classes.root}\n          >\n            {[\"All Formats\", \"T20Is\", \"Tests\", \"ODIs\"].map((format) => (\n              <MenuItem value={format}>{format}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {Object.entries(icc_teams_lookup).map(([value, label]) => (\n              <MenuItem value={value}>{label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid\n        xs={12}\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          padding: 8,\n          marginBottom: 20,\n          width: \"100%\",\n        }}\n      >\n        <TableView\n          data={chartData}\n          excludedKeys={[\n            \"player_id\",\n            \"format_type\",\n            \"opposition_team\",\n            \"balls_bowled\",\n          ]}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default IccPlayersBowlingAveragesComparison;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBattingAveragesComparison.jsx",["175","176"],"import React, { useEffect } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableView from \"Components/Common/TableView\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { league_teams, league_seasons } from \"Data/data\";\nimport CustomResponsiveFontSizes from \"Components/Common/Heading\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayersBattingAveragesComparison = ({\n  firstPlayer,\n  secondPlayer,\n  leagueName,\n  battingSeason,\n  setBattingSeason,\n  battingOpposition,\n  setBattingOpposition,\n}) => {\n  const classes = useStyles();\n  const [chartData, setChartData] = React.useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const [seasonOption, setSeasonOption] = React.useState(battingSeason);\n  const [seasonMenuOpen, setSeasonMenuOpen] = React.useState(false);\n\n  const handleSeasonChange = (event) => {\n    setSeasonOption(event.target.value);\n  };\n\n  const handleSeasonMenuClose = () => {\n    setSeasonMenuOpen(false);\n  };\n\n  const handleSeasonMenuOpen = () => {\n    setSeasonMenuOpen(true);\n  };\n\n  const [oppositionOption, setOppositionOption] =\n    React.useState(battingOpposition);\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    setBattingSeason(seasonOption);\n    setBattingOpposition(oppositionOption);\n  }, [seasonOption, oppositionOption]);\n\n  useEffect(() => {\n    httpService\n      .get(`/league_player_comparison/career_averages_comparison`, {\n        params: {\n          first_player_id: firstPlayer.player_id,\n          second_player_id: secondPlayer.player_id,\n          season_number: seasonOption,\n          opposition_team: oppositionOption,\n          league_name: leagueName,\n          type: \"batting\",\n        },\n      })\n      .then(function ({ data }) {\n        const { first_player, second_player } = data;\n\n        setChartData({ first_player, second_player });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [\n    seasonOption,\n    oppositionOption,\n    firstPlayer.player_id,\n    secondPlayer.player_id,\n  ]);\n\n  return (\n    <Grid container>\n      <Grid xs={12}>\n        <CustomResponsiveFontSizes text=\"Batting Averages Comparison\" />\n      </Grid>\n      <Grid xs={12} style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={seasonMenuOpen}\n            onClose={handleSeasonMenuClose}\n            onOpen={handleSeasonMenuOpen}\n            value={seasonOption}\n            onChange={handleSeasonChange}\n            label=\"Season\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {league_teams[leagueName].map((value) => (\n              <MenuItem value={value}>{value}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid\n        xs={12}\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          padding: 8,\n          marginBottom: 20,\n          width: \"100%\",\n        }}\n      >\n        <TableView\n          data={chartData}\n          excludedKeys={[\"player_id\", \"season_number\", \"opposition_team\"]}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default LeaguePlayersBattingAveragesComparison;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBowlingAveragesComparison.jsx",["177","178","179"],"import React, { useEffect } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableView from \"Components/Common/TableView\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { league_teams, league_seasons } from \"Data/data\";\nimport CustomResponsiveFontSizes from \"Components/Common/Heading\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayersBowlingAveragesComparison = ({\n  firstPlayer,\n  secondPlayer,\n  leagueName,\n  bowlingSeason,\n  setBowlingSeason,\n  bowlingOpposition,\n  setBowlingOpposition,\n}) => {\n  const classes = useStyles();\n  const [chartData, setChartData] = React.useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const [seasonOption, setSeasonOption] = React.useState(bowlingSeason);\n  const [seasonMenuOpen, setSeasonMenuOpen] = React.useState(false);\n\n  const handleSeasonChange = (event) => {\n    setSeasonOption(event.target.value);\n  };\n\n  const handleSeasonMenuClose = () => {\n    setSeasonMenuOpen(false);\n  };\n\n  const handleSeasonMenuOpen = () => {\n    setSeasonMenuOpen(true);\n  };\n\n  const [oppositionOption, setOppositionOption] =\n    React.useState(bowlingOpposition);\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    setBowlingSeason(seasonOption);\n    setBowlingOpposition(oppositionOption);\n  }, [seasonOption, oppositionOption]);\n\n  useEffect(() => {\n    httpService\n      .get(`/league_player_comparison/career_averages_comparison`, {\n        params: {\n          first_player_id: firstPlayer.player_id,\n          second_player_id: secondPlayer.player_id,\n          season_number: seasonOption,\n          opposition_team: oppositionOption,\n          league_name: leagueName,\n          type: \"bowling\",\n        },\n      })\n      .then(function ({ data }) {\n        const { first_player, second_player } = data;\n\n        setChartData({ first_player, second_player });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [\n    seasonOption,\n    oppositionOption,\n    firstPlayer.player_id,\n    secondPlayer.player_id,\n  ]);\n\n  return (\n    <Grid container>\n      <Grid xs={12}>\n        <CustomResponsiveFontSizes text=\"Bowling Averages Comparison\" />\n      </Grid>\n      <Grid xs={12} style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={seasonMenuOpen}\n            onClose={handleSeasonMenuClose}\n            onOpen={handleSeasonMenuOpen}\n            value={seasonOption}\n            onChange={handleSeasonChange}\n            label=\"Season\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {league_teams[leagueName].map((value) => (\n              <MenuItem value={value}>{value}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <div\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          padding: 8,\n          marginBottom: 20,\n          width: \"100%\",\n        }}\n      >\n        <TableView\n          data={chartData}\n          excludedKeys={[\"player_id\", \"season_number\", \"opposition_team\"]}\n        />\n      </div>\n    </Grid>\n  );\n};\n\nexport default LeaguePlayersBowlingAveragesComparison;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Footer.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MenuButton.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Data/data.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TableView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Heading.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/AveragesTable.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/EnhancedTableHead.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/HomeCard.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/tracking.js",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"188","severity":1,"message":"189","line":60,"column":6,"nodeType":"190","endLine":60,"endColumn":8,"suggestions":"191"},{"ruleId":"188","severity":1,"message":"192","line":66,"column":6,"nodeType":"190","endLine":66,"endColumn":20,"suggestions":"193"},{"ruleId":"188","severity":1,"message":"192","line":75,"column":6,"nodeType":"190","endLine":82,"endColumn":4,"suggestions":"194"},{"ruleId":"188","severity":1,"message":"195","line":147,"column":6,"nodeType":"190","endLine":147,"endColumn":8,"suggestions":"196"},{"ruleId":"188","severity":1,"message":"192","line":59,"column":6,"nodeType":"190","endLine":59,"endColumn":44,"suggestions":"197"},{"ruleId":"188","severity":1,"message":"192","line":79,"column":6,"nodeType":"190","endLine":79,"endColumn":20,"suggestions":"198"},{"ruleId":"188","severity":1,"message":"199","line":127,"column":6,"nodeType":"190","endLine":127,"endColumn":8,"suggestions":"200"},{"ruleId":"188","severity":1,"message":"192","line":58,"column":6,"nodeType":"190","endLine":58,"endColumn":20,"suggestions":"201"},{"ruleId":"188","severity":1,"message":"192","line":67,"column":6,"nodeType":"190","endLine":67,"endColumn":52,"suggestions":"202"},{"ruleId":"188","severity":1,"message":"203","line":113,"column":6,"nodeType":"190","endLine":113,"endColumn":8,"suggestions":"204"},{"ruleId":"188","severity":1,"message":"192","line":69,"column":6,"nodeType":"190","endLine":76,"endColumn":4,"suggestions":"205"},{"ruleId":"188","severity":1,"message":"192","line":96,"column":6,"nodeType":"190","endLine":96,"endColumn":20,"suggestions":"206"},{"ruleId":"188","severity":1,"message":"207","line":166,"column":6,"nodeType":"190","endLine":166,"endColumn":8,"suggestions":"208"},{"ruleId":"188","severity":1,"message":"209","line":37,"column":6,"nodeType":"190","endLine":37,"endColumn":17,"suggestions":"210"},{"ruleId":"188","severity":1,"message":"211","line":51,"column":6,"nodeType":"190","endLine":51,"endColumn":14,"suggestions":"212"},{"ruleId":"188","severity":1,"message":"213","line":90,"column":6,"nodeType":"190","endLine":90,"endColumn":32,"suggestions":"214"},{"ruleId":"188","severity":1,"message":"215","line":51,"column":6,"nodeType":"190","endLine":51,"endColumn":14,"suggestions":"216"},{"ruleId":"188","severity":1,"message":"213","line":90,"column":6,"nodeType":"190","endLine":90,"endColumn":32,"suggestions":"217"},{"ruleId":"188","severity":1,"message":"218","line":56,"column":6,"nodeType":"190","endLine":56,"endColumn":24,"suggestions":"219"},{"ruleId":"188","severity":1,"message":"220","line":53,"column":6,"nodeType":"190","endLine":53,"endColumn":24,"suggestions":"221"},{"ruleId":"188","severity":1,"message":"222","line":78,"column":6,"nodeType":"190","endLine":78,"endColumn":42,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":25,"column":1,"nodeType":"226","endLine":30,"endColumn":3},{"ruleId":"188","severity":1,"message":"227","line":72,"column":6,"nodeType":"190","endLine":72,"endColumn":36,"suggestions":"228"},{"ruleId":"188","severity":1,"message":"229","line":72,"column":6,"nodeType":"190","endLine":72,"endColumn":36,"suggestions":"230"},{"ruleId":"188","severity":1,"message":"231","line":73,"column":6,"nodeType":"190","endLine":73,"endColumn":38,"suggestions":"232"},{"ruleId":"188","severity":1,"message":"213","line":95,"column":6,"nodeType":"190","endLine":100,"endColumn":4,"suggestions":"233"},{"ruleId":"188","severity":1,"message":"234","line":73,"column":6,"nodeType":"190","endLine":73,"endColumn":38,"suggestions":"235"},{"ruleId":"188","severity":1,"message":"213","line":95,"column":6,"nodeType":"190","endLine":100,"endColumn":4,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":105,"column":9,"nodeType":"239","endLine":105,"endColumn":29},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onBackButtonEvent'. Either include it or remove the dependency array.","ArrayExpression",["242"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["243"],["244"],"React Hook useEffect has missing dependencies: 'history', 'initialFirstPlayerID', and 'initialSecondPlayerID'. Either include them or remove the dependency array.",["245"],["246"],["247"],"React Hook useEffect has missing dependencies: 'history', 'initialPlayerID', and 'leagueName'. Either include them or remove the dependency array.",["248"],["249"],["250"],"React Hook useEffect has missing dependencies: 'history' and 'initialPlayerID'. Either include them or remove the dependency array.",["251"],["252"],["253"],"React Hook useEffect has missing dependencies: 'history', 'initialFirstPlayerID', 'initialSecondPlayerID', and 'leagueName'. Either include them or remove the dependency array.",["254"],"React Hook useEffect has missing dependencies: 'league_name' and 'url'. Either include them or remove the dependency array.",["255"],"React Hook useEffect has a missing dependency: 'setBattingSeason'. Either include it or remove the dependency array. If 'setBattingSeason' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["256"],"React Hook useEffect has a missing dependency: 'leagueName'. Either include it or remove the dependency array.",["257"],"React Hook useEffect has a missing dependency: 'setBowlingSeason'. Either include it or remove the dependency array. If 'setBowlingSeason' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["258"],["259"],"React Hook useEffect has a missing dependency: 'setBattingOpposition'. Either include it or remove the dependency array. If 'setBattingOpposition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["260"],"React Hook useEffect has a missing dependency: 'setBowlingOpposition'. Either include it or remove the dependency array. If 'setBowlingOpposition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["261"],"React Hook useEffect has a missing dependency: 'player'. Either include it or remove the dependency array.",["262"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'setBattingFormat' and 'setBattingOpposition'. Either include them or remove the dependency array. If 'setBattingFormat' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["263"],"React Hook useEffect has missing dependencies: 'setBowlingFormat' and 'setBowlingOpposition'. Either include them or remove the dependency array. If 'setBowlingFormat' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["264"],"React Hook useEffect has missing dependencies: 'setBattingOpposition' and 'setBattingSeason'. Either include them or remove the dependency array. If 'setBattingSeason' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["265"],["266"],"React Hook useEffect has missing dependencies: 'setBowlingOpposition' and 'setBowlingSeason'. Either include them or remove the dependency array. If 'setBowlingSeason' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["267"],["268"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"271","fix":"279"},{"desc":"280","fix":"281"},{"desc":"271","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"271","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"296","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"313","fix":"317"},"Update the dependencies array to be: [onBackButtonEvent]",{"range":"318","text":"319"},"Update the dependencies array to be: [history, locationKeys]",{"range":"320","text":"321"},"Update the dependencies array to be: [firstPlayer, secondPlayer, battingFormat, battingOpposition, bowlingFormat, bowlingOpposition, history]",{"range":"322","text":"323"},"Update the dependencies array to be: [history, initialFirstPlayerID, initialSecondPlayerID]",{"range":"324","text":"325"},"Update the dependencies array to be: [player, battingSeason, bowlingSeason, history]",{"range":"326","text":"327"},{"range":"328","text":"321"},"Update the dependencies array to be: [history, initialPlayerID, leagueName]",{"range":"329","text":"330"},{"range":"331","text":"321"},"Update the dependencies array to be: [player, battingOpposition, bowlingOpposition, history]",{"range":"332","text":"333"},"Update the dependencies array to be: [history, initialPlayerID]",{"range":"334","text":"335"},"Update the dependencies array to be: [firstPlayer, secondPlayer, battingSeason, battingOpposition, bowlingSeason, bowlingOpposition, history]",{"range":"336","text":"337"},{"range":"338","text":"321"},"Update the dependencies array to be: [history, initialFirstPlayerID, initialSecondPlayerID, leagueName]",{"range":"339","text":"340"},"Update the dependencies array to be: [league_name, searchStr, url]",{"range":"341","text":"342"},"Update the dependencies array to be: [option, setBattingSeason]",{"range":"343","text":"344"},"Update the dependencies array to be: [player.player_id, option, leagueName]",{"range":"345","text":"346"},"Update the dependencies array to be: [option, setBowlingSeason]",{"range":"347","text":"348"},{"range":"349","text":"346"},"Update the dependencies array to be: [oppositionOption, setBattingOpposition]",{"range":"350","text":"351"},"Update the dependencies array to be: [oppositionOption, setBowlingOpposition]",{"range":"352","text":"353"},"Update the dependencies array to be: [player.player_id, oppositionOption, player]",{"range":"354","text":"355"},"Update the dependencies array to be: [formatType, oppositionOption, setBattingFormat, setBattingOpposition]",{"range":"356","text":"357"},"Update the dependencies array to be: [formatType, oppositionOption, setBowlingFormat, setBowlingOpposition]",{"range":"358","text":"359"},"Update the dependencies array to be: [seasonOption, oppositionOption, setBattingSeason, setBattingOpposition]",{"range":"360","text":"361"},"Update the dependencies array to be: [seasonOption, oppositionOption, firstPlayer.player_id, secondPlayer.player_id, leagueName]",{"range":"362","text":"363"},"Update the dependencies array to be: [seasonOption, oppositionOption, setBowlingSeason, setBowlingOpposition]",{"range":"364","text":"365"},{"range":"366","text":"363"},[2055,2057],"[onBackButtonEvent]",[2141,2155],"[history, locationKeys]",[2565,2689],"[firstPlayer, secondPlayer, battingFormat, battingOpposition, bowlingFormat, bowlingOpposition, history]",[4586,4588],"[history, initialFirstPlayerID, initialSecondPlayerID]",[1805,1843],"[player, battingSeason, bowlingSeason, history]",[2334,2348],[3672,3674],"[history, initialPlayerID, leagueName]",[1774,1788],[2043,2089],"[player, battingOpposition, bowlingOpposition, history]",[3279,3281],"[history, initialPlayerID]",[2327,2451],"[firstPlayer, secondPlayer, battingSeason, battingOpposition, bowlingSeason, bowlingOpposition, history]",[2942,2956],[5114,5116],"[history, initialFirstPlayerID, initialSecondPlayerID, leagueName]",[980,991],"[league_name, searchStr, url]",[1267,1275],"[option, setBattingSeason]",[2247,2273],"[player.player_id, option, leagueName]",[1271,1279],"[option, setBowlingSeason]",[2275,2301],[1468,1486],"[oppositionOption, setBattingOpposition]",[1447,1465],"[oppositionOption, setBowlingOpposition]",[2101,2137],"[player.player_id, oppositionOption, player]",[1950,1980],"[formatType, oppositionOption, setBattingFormat, setBattingOpposition]",[1950,1980],"[formatType, oppositionOption, setBowlingFormat, setBowlingOpposition]",[1987,2019],"[seasonOption, oppositionOption, setBattingSeason, setBattingOpposition]",[2642,2742],"[seasonOption, oppositionOption, firstPlayer.player_id, secondPlayer.player_id, leagueName]",[1987,2019],"[seasonOption, oppositionOption, setBowlingSeason, setBowlingOpposition]",[2642,2742]]