[{"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js":"1","/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js":"2","/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js":"3","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx":"4","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx":"5","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js":"6","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx":"7","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TabPanel.jsx":"8","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TableView.jsx":"9","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/ChartView.jsx":"10","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/PlayerSearch.jsx":"11","/home/usman/Desktop/Cricareer/cricareer-frontend/src/data/data.js":"12","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/AveragesTable.jsx":"13","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/EnhancedTableHead.jsx":"14","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerProfile.jsx":"15","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBattingAverages.jsx":"16","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBowlingAverages.jsx":"17","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/IccPlayersBattingAveragesComparison.jsx":"18","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/IccPlayersBowlingAveragesComparison.jsx":"19","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/MenuToolbar.jsx":"20","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ProfileMenu.jsx":"21","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ComparisonMenu.jsx":"22","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerBattingAverages.jsx":"23","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerBowlingAverages.jsx":"24","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerProfiles.jsx":"25","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersBattingAveragesComparison.jsx":"26","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersBowlingAveragesComparison.jsx":"27","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeagueCareerComparisons.jsx":"28","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersComparison.jsx":"29","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/MenuButton.jsx":"30","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/Home.jsx":"31","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/Breadcrumb.jsx":"32","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/Footer.jsx":"33","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/Heading.jsx":"34","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/getFormattedBreadcrumb.js":"35","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/capitalizeFirstLetter.js":"36","/home/usman/Desktop/Cricareer/cricareer-frontend/src/services/httpService.js":"37"},{"size":677,"mtime":1617678870442,"results":"38","hashOfConfig":"39"},{"size":3524,"mtime":1617448026715,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1610861361319,"results":"41","hashOfConfig":"39"},{"size":5393,"mtime":1617678870802,"results":"42","hashOfConfig":"39"},{"size":646,"mtime":1615115850226,"results":"43","hashOfConfig":"39"},{"size":150,"mtime":1611167234492,"results":"44","hashOfConfig":"39"},{"size":2270,"mtime":1614464486560,"results":"45","hashOfConfig":"39"},{"size":382,"mtime":1611417644481,"results":"46","hashOfConfig":"39"},{"size":1502,"mtime":1617678241008,"results":"47","hashOfConfig":"39"},{"size":1037,"mtime":1611432683752,"results":"48","hashOfConfig":"39"},{"size":1992,"mtime":1617677365035,"results":"49","hashOfConfig":"39"},{"size":3813,"mtime":1616797310735,"results":"50","hashOfConfig":"39"},{"size":2996,"mtime":1617678497321,"results":"51","hashOfConfig":"39"},{"size":1959,"mtime":1617678241016,"results":"52","hashOfConfig":"39"},{"size":4168,"mtime":1617678871282,"results":"53","hashOfConfig":"39"},{"size":3550,"mtime":1617678871282,"results":"54","hashOfConfig":"39"},{"size":3186,"mtime":1617678871286,"results":"55","hashOfConfig":"39"},{"size":4549,"mtime":1617678871282,"results":"56","hashOfConfig":"39"},{"size":4681,"mtime":1617678871282,"results":"57","hashOfConfig":"39"},{"size":1239,"mtime":1616870513069,"results":"58","hashOfConfig":"39"},{"size":2129,"mtime":1617678870802,"results":"59","hashOfConfig":"39"},{"size":2285,"mtime":1617678870802,"results":"60","hashOfConfig":"39"},{"size":3392,"mtime":1617678871286,"results":"61","hashOfConfig":"39"},{"size":3424,"mtime":1617678871430,"results":"62","hashOfConfig":"39"},{"size":4815,"mtime":1617678871282,"results":"63","hashOfConfig":"39"},{"size":4834,"mtime":1617678871282,"results":"64","hashOfConfig":"39"},{"size":4871,"mtime":1617678871282,"results":"65","hashOfConfig":"39"},{"size":749,"mtime":1616795962540,"results":"66","hashOfConfig":"39"},{"size":6193,"mtime":1617678871282,"results":"67","hashOfConfig":"39"},{"size":415,"mtime":1616870295819,"results":"68","hashOfConfig":"39"},{"size":2118,"mtime":1617678870802,"results":"69","hashOfConfig":"39"},{"size":711,"mtime":1617678245015,"results":"70","hashOfConfig":"39"},{"size":1727,"mtime":1617450127550,"results":"71","hashOfConfig":"39"},{"size":639,"mtime":1617449878397,"results":"72","hashOfConfig":"39"},{"size":307,"mtime":1617452442767,"results":"73","hashOfConfig":"39"},{"size":141,"mtime":1617452429503,"results":"74","hashOfConfig":"39"},{"size":598,"mtime":1617676881247,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xm0vh1",{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"81"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"81"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"81"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"81"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"81"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"81"},"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js",["167"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport IccPlayerComparison from \"./components/IccPlayerComparison\";\nimport LeaguePlayerProfiles from \"./components/profiles/LeaguePlayerProfiles\";\nimport LeaguePlayersComparison from \"./components/comparisons/LeaguePlayersComparison\";\nimport IccPlayerProfile from \"./components/profiles/IccPlayerProfile\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport MenuToolbar from \"./components/MenuToolbar\";\nimport Home from \"./components/Home\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingTop: 20,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <div className={classes.root}>\n        <Grid container spacing={1}>\n          <Grid xs={0} md={3}></Grid>\n          <Grid xs={12} md={6}>\n            <Paper className={classes.paper}>\n              <Router>\n                <CssBaseline />\n                <MenuToolbar />\n\n                <div style={{ marginTop: 40 }}>\n                  <div>\n                    {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                    <div className=\"App\" style={{ paddingBottom: 500 }}>\n                      <Switch>\n                        <Route path=\"/\" exact>\n                          <Home />\n                        </Route>\n                        <Route path=\"/profiles/icc_profile\">\n                          <IccPlayerProfile />\n                        </Route>\n                        <Route path=\"/profiles/psl_profile\">\n                          <LeaguePlayerProfiles\n                            leagueName=\"psl\"\n                            initialPlayerID=\"440\"\n                          />\n                        </Route>\n                        <Route path=\"/profiles/ipl_profile\">\n                          <LeaguePlayerProfiles\n                            leagueName=\"ipl\"\n                            initialPlayerID=\"146\"\n                          />\n                        </Route>\n                        <Route path=\"/comparisons/icc_comparison\">\n                          <IccPlayerComparison />\n                        </Route>\n\n                        <Route path=\"/comparisons/psl_comparison\">\n                          <LeaguePlayersComparison\n                            leagueName=\"psl\"\n                            initialFirstPlayerID=\"440\"\n                            initialSecondPlayerID=\"441\"\n                          />\n                        </Route>\n                        <Route path=\"/comparisons/ipl_comparison\">\n                          <LeaguePlayersComparison\n                            leagueName=\"ipl\"\n                            initialFirstPlayerID=\"146\"\n                            initialSecondPlayerID=\"28\"\n                          />\n                        </Route>\n                      </Switch>\n                    </div>\n                  </div>\n                </div>\n              </Router>\n            </Paper>\n          </Grid>\n          <Grid xs={0} md={3}></Grid>\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n",["168","169"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx",["170","171"],"import PlayerSearch from \"./PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport qs from \"qs\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router\";\nimport IccCareerComparisons from \"./IccCareerComparisons\";\nimport Breadcrumb from \"./common/Breadcrumb\";\nimport httpService from \"services/httpService\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nconst IccPlayerComparison = ({ history }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [firstPlayer, setFirstPlayer] = useState({});\n  const [secondPlayer, setSecondPlayer] = useState({});\n  const [firstRef, firstLoaded, firstOnLoad] = useImageLoaded();\n  const [secondRef, secondLoaded, secondOnLoad] = useImageLoaded();\n\n  useEffect(() => {\n    if (Object.keys(firstPlayer).length && Object.keys(secondPlayer).length) {\n      history.push({\n        pathname: \"\",\n        search: `first_player_id=${firstPlayer.player_id}&second_player_id=${secondPlayer.player_id}`,\n      });\n    }\n  }, [firstPlayer, secondPlayer]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/get_players_list\", {\n        params: {\n          limit: 100,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const player_ids = qs.parse(history.location.search.substring(1));\n    const first_player_id = player_ids.first_player_id\n      ? player_ids.first_player_id\n      : 253802;\n    const second_player_id = player_ids.second_player_id\n      ? player_ids.second_player_id\n      : 348144;\n\n    httpService\n      .get(`/get_player_by_id`, {\n        params: {\n          player_id: first_player_id,\n        },\n      })\n      .then(function (response) {\n        setFirstPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    httpService\n      .get(`/get_player_by_id`, {\n        params: {\n          player_id: second_player_id,\n        },\n      })\n      .then(function (response) {\n        setSecondPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    history.push({\n      // pathname: \"\",\n      search: `first_player_id=${first_player_id}&second_player_id=${second_player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player, isFirst) => {\n    if (isFirst) {\n      setFirstPlayer(player);\n    } else {\n      setSecondPlayer(player);\n    }\n  };\n\n  return (\n    <div>\n      <Breadcrumb />\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={firstPlayer}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={secondPlayer}\n            isFirst={false}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              padding: 10,\n            }}\n          >\n            <img\n              ref={firstRef}\n              onLoad={firstOnLoad}\n              src={\n                firstPlayer.player_image_url\n                  ? firstPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                minWidth: \"60%\",\n                display: firstLoaded ? \"block\" : \"none\",\n              }}\n            />\n            {!firstLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              padding: 10,\n            }}\n          >\n            <img\n              ref={secondRef}\n              onLoad={secondOnLoad}\n              src={\n                secondPlayer.player_image_url\n                  ? secondPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                minWidth: \"60%\",\n                display: secondLoaded ? \"block\" : \"none\",\n              }}\n            />\n\n            {!secondLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        {firstPlayer.player_id && secondPlayer.player_id ? (\n          <IccCareerComparisons\n            firstPlayer={firstPlayer}\n            secondPlayer={secondPlayer}\n          />\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(IccPlayerComparison);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx",[],["172","173"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TabPanel.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TableView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/ChartView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/PlayerSearch.jsx",["174"],"/* eslint-disable no-use-before-define */\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useState, useEffect } from \"react\";\nimport httpService from \"services/httpService\";\n\nexport default function PlayerSearch({\n  InitialPlayersList,\n  setSelectedPlayer,\n  player,\n  isFirst = true,\n  url = \"/search_player_by_name\",\n  league_name = \"psl\",\n}) {\n  const [searchedPlayersList, setSearchedPlayersList] = useState([]);\n  const [searchStr, setSearchStr] = useState(\"\");\n\n  useEffect(() => {\n    if (searchStr) {\n      httpService\n        .get(url, {\n          params: {\n            player_name: searchStr,\n            league_name,\n          },\n        })\n        .then(function (response) {\n          setSearchedPlayersList(response.data.rows);\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n    }\n  }, [searchStr]);\n\n  return (\n    <div>\n      <Autocomplete\n        value={player}\n        disableClearable={true}\n        // id=\"combo-box-demo\"\n        options={\n          searchedPlayersList.length ? searchedPlayersList : InitialPlayersList\n        }\n        getOptionLabel={(option) => option.player_name}\n        getOptionSelected={(option, value) => {\n          if (option.player_name === value.player_name) {\n            setSelectedPlayer(value, isFirst);\n          }\n          return true;\n        }}\n        onInputChange={(event, value, reason) => {\n          return reason === \"input\" && setSearchStr(value);\n        }}\n        onChange={(event, value, reason) => {\n          if (reason === \"select-option\") {\n            setSelectedPlayer(value, isFirst);\n          }\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search Player\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        )}\n      />\n    </div>\n  );\n}\n\n//\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/data/data.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/AveragesTable.jsx",["175","176"],"import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    // marginBottom: theme.spacing(2),\n  },\n  table: {\n    // minWidth: 750,\n  },\n\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst AveragesTable = ({ rows, columnNamesLookup }) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"opposition_team\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={\"small\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              columnNamesLookup={columnNamesLookup}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy)).map(\n                (row, index) => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.opposition_team}>\n                      {Object.values(row).map((col_val, index) => (\n                        <TableCell align=\"left\">{col_val}</TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                }\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n};\n\nexport default AveragesTable;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/EnhancedTableHead.jsx",["177"],"import React from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport PropTypes from \"prop-types\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport humanify from \"../../Utils/humanify\";\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort, columnNamesLookup } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  const headCells = Object.entries(columnNamesLookup).map(([key, value]) => ({\n    id: key,\n    numeric: false,\n    disablePadding: true,\n    label: value,\n  }));\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell, index) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"left\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n            // {...(index ? {} : { style: { paddingLeft: 15, paddingRight: 70 } })}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              <b>{headCell.label}</b>\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n};\n\nexport default EnhancedTableHead;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerProfile.jsx",["178","179"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router\";\nimport qs from \"qs\";\nimport PlayerSearch from \"../PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport IccPlayerBattingAverages from \"./IccPlayerBattingAverages\";\nimport IccPlayerBowlingAverages from \"./IccPlayerBowlingAverages\";\nimport Breadcrumb from \"common/Breadcrumb\";\nimport CustomResponsiveFontSizes from \"common/Heading\";\nimport httpService from \"services/httpService\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nconst IccPlayerProfile = ({ history }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [player, setPlayer] = useState({});\n  const [ref, loaded, onLoad] = useImageLoaded();\n\n  useEffect(() => {\n    if (Object.keys(player).length) {\n      history.push({\n        pathname: \"\",\n        search: `player_id=${player.player_id}`,\n      });\n    }\n  }, [player]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/get_players_list\", {\n        params: {\n          limit: 100,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const url_id = qs.parse(history.location.search.substring(1));\n    const player_id = url_id.player_id ? url_id.player_id : 253802;\n\n    httpService\n      .get(`/get_player_by_id`, {\n        params: {\n          player_id: player_id,\n        },\n      })\n      .then(function (response) {\n        setPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    history.push({\n      // pathname: \"\",\n      search: `player_id=${player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player) => {\n    setPlayer(player);\n  };\n\n  return (\n    <div>\n      <Breadcrumb />\n      <Grid container spacing={1}>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <PlayerSearch\n              InitialPlayersList={initialPlayersList}\n              setSelectedPlayer={handleSelectedPlayer}\n              player={player}\n              url=\"/search_player_by_name\"\n            />\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                paddingTop: 10,\n              }}\n            >\n              <img\n                ref={ref}\n                onLoad={onLoad}\n                src={\n                  player.player_image_url\n                    ? player.player_image_url\n                    : \"/default-user.jpg\"\n                }\n                alt=\"\"\n                style={{\n                  minWidth: \"60%\",\n                  display: loaded ? \"block\" : \"none\",\n                }}\n              />\n              {!loaded ? <CircularProgress /> : null}\n            </div>\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Batting Averages\" />\n          {Object.keys(player).length ? (\n            <IccPlayerBattingAverages player={player} />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Bowling Averages\" />\n          {Object.keys(player).length ? (\n            <IccPlayerBowlingAverages player={player} />\n          ) : null}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(IccPlayerProfile);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBattingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBowlingAverages.jsx",["180"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  icc_teams_lookup,\n  icc_bowling_table_column_name_lookup,\n} from \"../../data/data\";\nimport _ from \"lodash\";\nimport AveragesTable from \"common/AveragesTable\";\nimport httpService from \"services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst IccPlayerBowlingAverages = ({ player }) => {\n  const classes = useStyles();\n\n  const [oppositionOption, setOppositionOption] = React.useState(\"all_teams\");\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n  const [bowlingAverages, setBowlingAverages] = useState([]);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    httpService\n      .get(\"/icc_profile/icc_career_averages\", {\n        params: {\n          player_id: player[\"player_id\"],\n          opposition_team: oppositionOption,\n          type: \"bowling\",\n        },\n      })\n      .then(function (response) {\n        const data = response.data.rows;\n        console.log(\"data\", data);\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, Object.keys(icc_bowling_table_column_name_lookup))\n        );\n\n        setBowlingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, oppositionOption]);\n\n  return (\n    <Grid container>\n      <Grid item>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {Object.entries(icc_teams_lookup).map(([value, label]) => (\n              <MenuItem value={value}>{label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        {Object.keys(bowlingAverages).length ? (\n          <AveragesTable\n            rows={bowlingAverages}\n            columnNamesLookup={icc_bowling_table_column_name_lookup}\n          />\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default IccPlayerBowlingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/IccPlayersBattingAveragesComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/IccPlayersBowlingAveragesComparison.jsx",["181"],"import React, { useEffect } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableView from \"common/TableView\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { icc_teams_lookup } from \"../../data/data\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomResponsiveFontSizes from \"common/Heading\";\nimport httpService from \"services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst IccPlayersBowlingAveragesComparison = ({ firstPlayer, secondPlayer }) => {\n  const classes = useStyles();\n  const [chartData, setChartData] = React.useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const [formatType, setFormatType] = React.useState(\"All Formats\");\n  const [formatMenuOpen, setFormatMenuOpen] = React.useState(false);\n\n  const handleFormatChange = (event) => {\n    setFormatType(event.target.value);\n  };\n\n  const handleFormatMenuClose = () => {\n    setFormatMenuOpen(false);\n  };\n\n  const handleFormatMenuOpen = () => {\n    setFormatMenuOpen(true);\n  };\n\n  const [oppositionOption, setOppositionOption] = React.useState(\"all_teams\");\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    httpService\n      .get(`/icc_comparison/career_averages_comparison`, {\n        params: {\n          first_player_id: firstPlayer.player_id,\n          second_player_id: secondPlayer.player_id,\n          format_type: formatType,\n          opposition_team: oppositionOption,\n          type: \"bowling\",\n        },\n      })\n      .then(function ({ data }) {\n        const { first_player, second_player } = data;\n\n        setChartData({ first_player, second_player });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [\n    formatType,\n    oppositionOption,\n    firstPlayer.player_id,\n    secondPlayer.player_id,\n  ]);\n\n  return (\n    <Grid container>\n      <Grid xs={12}>\n        <CustomResponsiveFontSizes text=\"Bowling Averages Comparison\" />\n      </Grid>\n      <Grid xs={12} style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Format</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={formatMenuOpen}\n            onClose={handleFormatMenuClose}\n            onOpen={handleFormatMenuOpen}\n            value={formatType}\n            onChange={handleFormatChange}\n            label=\"Format\"\n            className={classes.root}\n          >\n            {[\"All Formats\", \"T20Is\", \"Tests\", \"ODIs\"].map((format) => (\n              <MenuItem value={format}>{format}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {Object.entries(icc_teams_lookup).map(([value, label]) => (\n              <MenuItem value={value}>{label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid\n        xs={12}\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          padding: 8,\n          marginBottom: 20,\n          width: \"100%\",\n        }}\n      >\n        <TableView\n          data={chartData}\n          excludedKeys={[\n            \"player_id\",\n            \"format_type\",\n            \"opposition_team\",\n            \"balls_bowled\",\n          ]}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default IccPlayersBowlingAveragesComparison;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/MenuToolbar.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ProfileMenu.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ComparisonMenu.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerBattingAverages.jsx",["182"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AveragesTable from \"component/common/AveragesTable\";\nimport _ from \"lodash\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  league_batting_table_column_name_lookup,\n  league_seasons,\n} from \"data/data\";\nimport httpService from \"services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayerBattingAverages = ({ player, leagueName }) => {\n  const classes = useStyles();\n  const [battingAverages, setBattingAverages] = useState([]);\n  const [option, setOption] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setOption(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_player_batting_averages\", {\n        params: {\n          player_id: player.player_id,\n          season_number: option,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        const data = response.data.rows;\n\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, [\n            \"opposition_team\",\n            \"innings_played\",\n            \"not_outs\",\n            \"runs_scored\",\n            \"highest_inns_score\",\n            \"batting_average\",\n            \"balls_faced\",\n            \"batting_strike_rate\",\n            \"hundreds_scored\",\n            \"fifties_scored\",\n            \"boundary_fours\",\n            \"boundary_sixes\",\n          ])\n        );\n\n        setBattingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, option]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={option}\n            onChange={handleChange}\n            label=\"Option\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      {battingAverages.length ? (\n        <AveragesTable\n          rows={battingAverages}\n          columnNamesLookup={league_batting_table_column_name_lookup}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default LeaguePlayerBattingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerBowlingAverages.jsx",["183"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AveragesTable from \"common/AveragesTable\";\nimport _ from \"lodash\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  league_bowling_table_column_to_label_lookup,\n  league_seasons,\n} from \"../../data/data\";\nimport httpService from \"services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayerBowlingAverages = ({ player, leagueName }) => {\n  const classes = useStyles();\n  const [bowlingAverages, setBowlingAverages] = useState([]);\n  const [option, setOption] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setOption(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_player_bowling_averages\", {\n        params: {\n          player_id: player.player_id,\n          season_number: option,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        const data = response.data.rows;\n\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, [\n            \"opposition_team\",\n            \"innings_played\",\n            \"balls_bowled\",\n            \"runs_conceded\",\n            \"wickets_taken\",\n            \"best_innings_bowling\",\n            \"bowling_average\",\n            \"economy_rate\",\n            \"bowling_strike_rate\",\n            \"five_wkts_in_an_inns\",\n            \"four_wkts_in_an_inns\",\n            \"ten_wkts_in_an_inns\",\n          ])\n        );\n\n        setBowlingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, option]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={option}\n            onChange={handleChange}\n            label=\"Option\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      {bowlingAverages.length ? (\n        <AveragesTable\n          rows={bowlingAverages}\n          columnNamesLookup={league_bowling_table_column_to_label_lookup}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default LeaguePlayerBowlingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerProfiles.jsx",["184","185"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router\";\nimport qs from \"qs\";\nimport PlayerSearch from \"components/PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LeaguePlayerBattingAverages from \"./LeaguePlayerBattingAverages\";\nimport LeaguePlayerBowlingAverages from \"./LeaguePlayerBowlingAverages\";\nimport Breadcrumb from \"components/common/Breadcrumb\";\nimport CustomResponsiveFontSizes from \"components/common/Heading\";\nimport httpService from \"services/httpService\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst LeaguePlayerProfiles = ({ history, leagueName, initialPlayerID }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [player, setPlayer] = useState({});\n  const [ref, loaded, onLoad] = useImageLoaded();\n  const prevLeagueName = usePrevious(leagueName);\n\n  if (prevLeagueName && leagueName !== prevLeagueName) {\n    window.location.reload();\n  }\n  useEffect(() => {\n    if (Object.keys(player).length) {\n      history.push({\n        pathname: \"\",\n        search: `player_id=${player.player_id}`,\n      });\n    }\n  }, [player]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_players_list\", {\n        params: {\n          limit: 100,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const url_id = qs.parse(history.location.search.substring(1));\n    const player_id = url_id.player_id ? url_id.player_id : initialPlayerID;\n\n    httpService\n      .get(`/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    history.push({\n      // pathname: \"\",\n      search: `player_id=${player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player) => {\n    setPlayer(player);\n  };\n\n  return (\n    <div>\n      <Breadcrumb />\n      <Grid container spacing={1}>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <PlayerSearch\n              InitialPlayersList={initialPlayersList}\n              setSelectedPlayer={handleSelectedPlayer}\n              player={player}\n              url=\"/league_player_profile/search_player_by_name\"\n              league_name={leagueName}\n            />\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                paddingTop: 10,\n              }}\n            >\n              <img\n                ref={ref}\n                onLoad={onLoad}\n                src={\n                  player.player_image_url\n                    ? player.player_image_url\n                    : \"/default-user.jpg\"\n                }\n                alt=\"\"\n                style={{\n                  minWidth: \"60%\",\n                  display: loaded ? \"block\" : \"none\",\n                }}\n              />\n              {!loaded ? <CircularProgress /> : null}\n            </div>\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Batting Averages\" />\n          {Object.keys(player).length > 0 ? (\n            <LeaguePlayerBattingAverages\n              leagueName={leagueName}\n              player={player}\n            />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Bowling Averages\" />\n          {Object.keys(player).length > 0 ? (\n            <LeaguePlayerBowlingAverages\n              leagueName={leagueName}\n              player={player}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(LeaguePlayerProfiles);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersBattingAveragesComparison.jsx",["186"],"import React, { useEffect } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableView from \"common/TableView\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { league_teams, league_seasons } from \"../../data/data\";\nimport CustomResponsiveFontSizes from \"common/Heading\";\nimport httpService from \"services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayersBattingAveragesComparison = ({\n  firstPlayer,\n  secondPlayer,\n  leagueName,\n}) => {\n  const classes = useStyles();\n  const [chartData, setChartData] = React.useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const [seasonOption, setSeasonOption] = React.useState(0);\n  const [seasonMenuOpen, setSeasonMenuOpen] = React.useState(false);\n\n  const handleSeasonChange = (event) => {\n    setSeasonOption(event.target.value);\n  };\n\n  const handleSeasonMenuClose = () => {\n    setSeasonMenuOpen(false);\n  };\n\n  const handleSeasonMenuOpen = () => {\n    setSeasonMenuOpen(true);\n  };\n\n  const [oppositionOption, setOppositionOption] = React.useState(\"All Teams\");\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    httpService\n      .get(`/league_player_comparison/career_averages_comparison`, {\n        params: {\n          first_player_id: firstPlayer.player_id,\n          second_player_id: secondPlayer.player_id,\n          season_number: seasonOption,\n          opposition_team: oppositionOption,\n          league_name: leagueName,\n          type: \"batting\",\n        },\n      })\n      .then(function ({ data }) {\n        const { first_player, second_player } = data;\n\n        setChartData({ first_player, second_player });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [\n    seasonOption,\n    oppositionOption,\n    firstPlayer.player_id,\n    secondPlayer.player_id,\n  ]);\n\n  return (\n    <Grid container>\n      <Grid xs={12}>\n        <CustomResponsiveFontSizes text=\"Batting Averages Comparison\" />\n      </Grid>\n      <Grid xs={12} style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={seasonMenuOpen}\n            onClose={handleSeasonMenuClose}\n            onOpen={handleSeasonMenuOpen}\n            value={seasonOption}\n            onChange={handleSeasonChange}\n            label=\"Season\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {league_teams[leagueName].map((value) => (\n              <MenuItem value={value}>{value}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid\n        xs={12}\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          padding: 8,\n          marginBottom: 20,\n          width: \"100%\",\n        }}\n      >\n        <TableView\n          data={chartData}\n          excludedKeys={[\"player_id\", \"season_number\", \"opposition_team\"]}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default LeaguePlayersBattingAveragesComparison;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersBowlingAveragesComparison.jsx",["187","188"],"import React, { useEffect } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableView from \"common/TableView\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { league_teams, league_seasons } from \"../../data/data\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomResponsiveFontSizes from \"common/Heading\";\nimport httpService from \"services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayersBowlingAveragesComparison = ({\n  firstPlayer,\n  secondPlayer,\n  leagueName,\n}) => {\n  const classes = useStyles();\n  const [chartData, setChartData] = React.useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const [seasonOption, setSeasonOption] = React.useState(0);\n  const [seasonMenuOpen, setSeasonMenuOpen] = React.useState(false);\n\n  const handleSeasonChange = (event) => {\n    setSeasonOption(event.target.value);\n  };\n\n  const handleSeasonMenuClose = () => {\n    setSeasonMenuOpen(false);\n  };\n\n  const handleSeasonMenuOpen = () => {\n    setSeasonMenuOpen(true);\n  };\n\n  const [oppositionOption, setOppositionOption] = React.useState(\"All Teams\");\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    httpService\n      .get(`/league_player_comparison/career_averages_comparison`, {\n        params: {\n          first_player_id: firstPlayer.player_id,\n          second_player_id: secondPlayer.player_id,\n          season_number: seasonOption,\n          opposition_team: oppositionOption,\n          league_name: leagueName,\n          type: \"bowling\",\n        },\n      })\n      .then(function ({ data }) {\n        const { first_player, second_player } = data;\n\n        setChartData({ first_player, second_player });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [\n    seasonOption,\n    oppositionOption,\n    firstPlayer.player_id,\n    secondPlayer.player_id,\n  ]);\n\n  return (\n    <Grid container>\n      <Grid xs={12}>\n        <CustomResponsiveFontSizes text=\"Bowling Averages Comparison\" />\n      </Grid>\n      <Grid xs={12} style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={seasonMenuOpen}\n            onClose={handleSeasonMenuClose}\n            onOpen={handleSeasonMenuOpen}\n            value={seasonOption}\n            onChange={handleSeasonChange}\n            label=\"Season\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {league_teams[leagueName].map((value) => (\n              <MenuItem value={value}>{value}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <div\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          padding: 8,\n          marginBottom: 20,\n          width: \"100%\",\n        }}\n      >\n        <TableView\n          data={chartData}\n          excludedKeys={[\"player_id\", \"season_number\", \"opposition_team\"]}\n        />\n      </div>\n    </Grid>\n  );\n};\n\nexport default LeaguePlayersBowlingAveragesComparison;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeagueCareerComparisons.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersComparison.jsx",["189","190"],"import PlayerSearch from \"components/PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport qs from \"qs\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router\";\nimport LeagueCareerComparisons from \"./LeagueCareerComparisons\";\nimport Breadcrumb from \"components/common/Breadcrumb\";\nimport httpService from \"services/httpService\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst LeaguePlayersComparison = ({\n  history,\n  leagueName,\n  initialFirstPlayerID,\n  initialSecondPlayerID,\n}) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [firstPlayer, setFirstPlayer] = useState({});\n  const [secondPlayer, setSecondPlayer] = useState({});\n  const [firstRef, firstLoaded, firstOnLoad] = useImageLoaded();\n  const [secondRef, secondLoaded, secondOnLoad] = useImageLoaded();\n  const prevLeagueName = usePrevious(leagueName);\n\n  if (prevLeagueName && leagueName !== prevLeagueName) {\n    window.location.reload();\n  }\n\n  useEffect(() => {\n    if (Object.keys(firstPlayer).length && Object.keys(secondPlayer).length) {\n      history.push({\n        pathname: \"\",\n        search: `first_player_id=${firstPlayer.player_id}&second_player_id=${secondPlayer.player_id}`,\n      });\n    }\n  }, [firstPlayer, secondPlayer]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_players_list\", {\n        params: {\n          limit: 100,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const player_ids = qs.parse(history.location.search.substring(1));\n    const first_player_id = player_ids.first_player_id\n      ? player_ids.first_player_id\n      : initialFirstPlayerID;\n    const second_player_id = player_ids.second_player_id\n      ? player_ids.second_player_id\n      : initialSecondPlayerID;\n\n    httpService\n      .get(`/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: first_player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setFirstPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    httpService\n      .get(`/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: second_player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setSecondPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    history.push({\n      // pathname: \"\",\n      search: `first_player_id=${first_player_id}&second_player_id=${second_player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player, isFirst) => {\n    if (isFirst) {\n      setFirstPlayer(player);\n    } else {\n      setSecondPlayer(player);\n    }\n  };\n\n  return (\n    <div>\n      <Breadcrumb />\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={firstPlayer}\n            url=\"/league_player_profile/search_player_by_name\"\n            league_name={leagueName}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={secondPlayer}\n            isFirst={false}\n            url=\"/league_player_profile/search_player_by_name\"\n            league_name={leagueName}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              padding: 10,\n            }}\n          >\n            <img\n              ref={firstRef}\n              onLoad={firstOnLoad}\n              src={\n                firstPlayer.player_image_url\n                  ? firstPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                minWidth: \"60%\",\n                display: firstLoaded ? \"block\" : \"none\",\n              }}\n            />\n            {!firstLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              padding: 10,\n            }}\n          >\n            <img\n              ref={secondRef}\n              onLoad={secondOnLoad}\n              src={\n                secondPlayer.player_image_url\n                  ? secondPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                minWidth: \"60%\",\n                display: secondLoaded ? \"block\" : \"none\",\n              }}\n            />\n\n            {!secondLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        {firstPlayer.player_id && secondPlayer.player_id ? (\n          <LeagueCareerComparisons\n            firstPlayer={firstPlayer}\n            secondPlayer={secondPlayer}\n            leagueName={leagueName}\n          />\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(LeaguePlayersComparison);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/MenuButton.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/Home.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/Breadcrumb.jsx",["191"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/Footer.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/Heading.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/getFormattedBreadcrumb.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/capitalizeFirstLetter.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/services/httpService.js",["192"],"import axios from \"axios\";\n\nconst baseUrl =\n  process.env.NODE_ENV === \"production\"\n    ? \"http://65.0.31.34\"\n    : \"http://localhost:3001\";\n\naxios.defaults.baseURL = baseUrl;\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"Logging the error\", error);\n    alert(\"An unexpected error occurred\");\n  }\n\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n",{"ruleId":"193","severity":1,"message":"194","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":44,"column":6,"nodeType":"203","endLine":44,"endColumn":33,"suggestions":"204"},{"ruleId":"201","severity":1,"message":"202","line":100,"column":6,"nodeType":"203","endLine":100,"endColumn":8,"suggestions":"205"},{"ruleId":"197","replacedBy":"206"},{"ruleId":"199","replacedBy":"207"},{"ruleId":"201","severity":1,"message":"208","line":37,"column":6,"nodeType":"203","endLine":37,"endColumn":17,"suggestions":"209"},{"ruleId":"193","severity":1,"message":"210","line":10,"column":8,"nodeType":"195","messageId":"196","endLine":10,"endColumn":24},{"ruleId":"193","severity":1,"message":"211","line":11,"column":8,"nodeType":"195","messageId":"196","endLine":11,"endColumn":14},{"ruleId":"193","severity":1,"message":"212","line":7,"column":8,"nodeType":"195","messageId":"196","endLine":7,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":44,"column":6,"nodeType":"203","endLine":44,"endColumn":14,"suggestions":"213"},{"ruleId":"201","severity":1,"message":"202","line":83,"column":6,"nodeType":"203","endLine":83,"endColumn":8,"suggestions":"214"},{"ruleId":"201","severity":1,"message":"215","line":70,"column":6,"nodeType":"203","endLine":70,"endColumn":42,"suggestions":"216"},{"ruleId":"193","severity":1,"message":"217","line":10,"column":8,"nodeType":"195","messageId":"196","endLine":10,"endColumn":18},{"ruleId":"201","severity":1,"message":"218","line":81,"column":6,"nodeType":"203","endLine":81,"endColumn":32,"suggestions":"219"},{"ruleId":"201","severity":1,"message":"218","line":81,"column":6,"nodeType":"203","endLine":81,"endColumn":32,"suggestions":"220"},{"ruleId":"201","severity":1,"message":"202","line":56,"column":6,"nodeType":"203","endLine":56,"endColumn":14,"suggestions":"221"},{"ruleId":"201","severity":1,"message":"222","line":97,"column":6,"nodeType":"203","endLine":97,"endColumn":8,"suggestions":"223"},{"ruleId":"201","severity":1,"message":"218","line":85,"column":6,"nodeType":"203","endLine":90,"endColumn":4,"suggestions":"224"},{"ruleId":"193","severity":1,"message":"217","line":10,"column":8,"nodeType":"195","messageId":"196","endLine":10,"endColumn":18},{"ruleId":"201","severity":1,"message":"218","line":86,"column":6,"nodeType":"203","endLine":91,"endColumn":4,"suggestions":"225"},{"ruleId":"201","severity":1,"message":"202","line":62,"column":6,"nodeType":"203","endLine":62,"endColumn":33,"suggestions":"226"},{"ruleId":"201","severity":1,"message":"227","line":121,"column":6,"nodeType":"203","endLine":121,"endColumn":8,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":12,"column":34,"nodeType":"231","messageId":"232","endLine":12,"endColumn":36},{"ruleId":"233","severity":1,"message":"234","line":24,"column":1,"nodeType":"235","endLine":29,"endColumn":3},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["236"],"no-negated-in-lhs",["237"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["238"],["239"],["236"],["237"],"React Hook useEffect has missing dependencies: 'league_name' and 'url'. Either include them or remove the dependency array.",["240"],"'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'humanify' is defined but never used.",["241"],["242"],"React Hook useEffect has a missing dependency: 'player'. Either include it or remove the dependency array.",["243"],"'Typography' is defined but never used.","React Hook useEffect has a missing dependency: 'leagueName'. Either include it or remove the dependency array.",["244"],["245"],["246"],"React Hook useEffect has missing dependencies: 'history', 'initialPlayerID', and 'leagueName'. Either include them or remove the dependency array.",["247"],["248"],["249"],["250"],"React Hook useEffect has missing dependencies: 'history', 'initialFirstPlayerID', 'initialSecondPlayerID', and 'leagueName'. Either include them or remove the dependency array.",["251"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"254","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"263","fix":"265"},{"desc":"258","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"269","fix":"271"},{"desc":"252","fix":"272"},{"desc":"273","fix":"274"},"Update the dependencies array to be: [firstPlayer, history, secondPlayer]",{"range":"275","text":"276"},"Update the dependencies array to be: [history]",{"range":"277","text":"278"},"Update the dependencies array to be: [league_name, searchStr, url]",{"range":"279","text":"280"},"Update the dependencies array to be: [history, player]",{"range":"281","text":"282"},{"range":"283","text":"278"},"Update the dependencies array to be: [player.player_id, oppositionOption, player]",{"range":"284","text":"285"},"Update the dependencies array to be: [player.player_id, option, leagueName]",{"range":"286","text":"287"},{"range":"288","text":"287"},{"range":"289","text":"282"},"Update the dependencies array to be: [history, initialPlayerID, leagueName]",{"range":"290","text":"291"},"Update the dependencies array to be: [seasonOption, oppositionOption, firstPlayer.player_id, secondPlayer.player_id, leagueName]",{"range":"292","text":"293"},{"range":"294","text":"293"},{"range":"295","text":"276"},"Update the dependencies array to be: [history, initialFirstPlayerID, initialSecondPlayerID, leagueName]",{"range":"296","text":"297"},[1376,1403],"[firstPlayer, history, secondPlayer]",[2770,2772],"[history]",[980,991],"[league_name, searchStr, url]",[1272,1280],"[history, player]",[2148,2150],[1985,2021],"[player.player_id, oppositionOption, player]",[2115,2141],"[player.player_id, option, leagueName]",[2152,2178],[1609,1617],[2608,2610],"[history, initialPlayerID, leagueName]",[2387,2487],"[seasonOption, oppositionOption, firstPlayer.player_id, secondPlayer.player_id, leagueName]",[2442,2542],[1741,1768],[3335,3337],"[history, initialFirstPlayerID, initialSecondPlayerID, leagueName]"]