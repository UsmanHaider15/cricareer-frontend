[{"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js":"1","/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js":"2","/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js":"3","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js":"4","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/getFormattedBreadcrumb.js":"5","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/capitalizeFirstLetter.js":"6","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/MenuToolbar.jsx":"7","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/IccPlayerComparison.jsx":"8","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home.jsx":"9","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfiles.jsx":"10","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerProfile.jsx":"11","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersComparison.jsx":"12","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/ProfileMenu.jsx":"13","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/ComparisonMenu.jsx":"14","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/PlayerSearch.jsx":"15","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBattingAverages.jsx":"16","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBowlingAverages.jsx":"17","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBattingAverages.jsx":"18","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBowlingAverages.jsx":"19","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Services/httpService.js":"20","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Breadcrumb.jsx":"21","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBattingAveragesComparison.jsx":"22","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBowlingAveragesComparison.jsx":"23","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBattingAveragesComparison.jsx":"24","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBowlingAveragesComparison.jsx":"25","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Footer.jsx":"26","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MenuButton.jsx":"27","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Data/data.js":"28","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TableView.jsx":"29","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Heading.jsx":"30","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/AveragesTable.jsx":"31","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/EnhancedTableHead.jsx":"32","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/HomeCard.jsx":"33","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/tracking.js":"34"},{"size":657,"mtime":1624666775956,"results":"35","hashOfConfig":"36"},{"size":4759,"mtime":1624680816015,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1610861361319,"results":"38","hashOfConfig":"36"},{"size":150,"mtime":1611167234492,"results":"39","hashOfConfig":"36"},{"size":307,"mtime":1617452442767,"results":"40","hashOfConfig":"36"},{"size":141,"mtime":1617452429503,"results":"41","hashOfConfig":"36"},{"size":1239,"mtime":1616870513069,"results":"42","hashOfConfig":"36"},{"size":7325,"mtime":1624680874793,"results":"43","hashOfConfig":"36"},{"size":3229,"mtime":1618166180402,"results":"44","hashOfConfig":"36"},{"size":5563,"mtime":1624672020163,"results":"45","hashOfConfig":"36"},{"size":5046,"mtime":1624671179044,"results":"46","hashOfConfig":"36"},{"size":7938,"mtime":1624694010052,"results":"47","hashOfConfig":"36"},{"size":2129,"mtime":1618166180406,"results":"48","hashOfConfig":"36"},{"size":2285,"mtime":1624681251109,"results":"49","hashOfConfig":"36"},{"size":1992,"mtime":1617679733169,"results":"50","hashOfConfig":"36"},{"size":3513,"mtime":1624673955387,"results":"51","hashOfConfig":"36"},{"size":3545,"mtime":1624672056762,"results":"52","hashOfConfig":"36"},{"size":3699,"mtime":1624693447628,"results":"53","hashOfConfig":"36"},{"size":3300,"mtime":1624671754284,"results":"54","hashOfConfig":"36"},{"size":652,"mtime":1617841486539,"results":"55","hashOfConfig":"36"},{"size":892,"mtime":1618000418205,"results":"56","hashOfConfig":"36"},{"size":4783,"mtime":1624673947035,"results":"57","hashOfConfig":"36"},{"size":4860,"mtime":1624693485303,"results":"58","hashOfConfig":"36"},{"size":5079,"mtime":1624693604554,"results":"59","hashOfConfig":"36"},{"size":5061,"mtime":1624693695013,"results":"60","hashOfConfig":"36"},{"size":1727,"mtime":1617450127550,"results":"61","hashOfConfig":"36"},{"size":415,"mtime":1616870295819,"results":"62","hashOfConfig":"36"},{"size":3813,"mtime":1624579442219,"results":"63","hashOfConfig":"36"},{"size":1502,"mtime":1617678241008,"results":"64","hashOfConfig":"36"},{"size":639,"mtime":1617449878397,"results":"65","hashOfConfig":"36"},{"size":2996,"mtime":1617678497321,"results":"66","hashOfConfig":"36"},{"size":1920,"mtime":1618000446783,"results":"67","hashOfConfig":"36"},{"size":1738,"mtime":1617706955809,"results":"68","hashOfConfig":"36"},{"size":484,"mtime":1618017600379,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1xm0vh1",{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js",[],["147","148"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js",["149","150"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/getFormattedBreadcrumb.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/capitalizeFirstLetter.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/MenuToolbar.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/IccPlayerComparison.jsx",["151","152"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfiles.jsx",["153","154"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router\";\nimport qs from \"qs\";\nimport PlayerSearch from \"Components/PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LeaguePlayerBattingAverages from \"./LeaguePlayerBattingAverages\";\nimport LeaguePlayerBowlingAverages from \"./LeaguePlayerBowlingAverages\";\nimport Breadcrumb from \"Components/Common/Breadcrumb\";\nimport CustomResponsiveFontSizes from \"Components/Common/Heading\";\nimport httpService from \"Services/httpService\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst LeaguePlayerProfiles = ({ history, leagueName, initialPlayerID }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [player, setPlayer] = useState({});\n  const [ref, loaded, onLoad] = useImageLoaded();\n  const prevLeagueName = usePrevious(leagueName);\n\n  const [battingSeason, setBattingSeason] = React.useState(\"\");\n  const [bowlingSeason, setBowlingSeason] = React.useState(\"\");\n\n  if (prevLeagueName && leagueName !== prevLeagueName) {\n    window.location.reload();\n  }\n  useEffect(() => {\n    if (Object.keys(player).length) {\n      history.push({\n        pathname: \"\",\n        search: `player_id=${player.player_id}&batting_season=${battingSeason}&bowling_season=${bowlingSeason}`,\n      });\n    }\n  }, [player, battingSeason, bowlingSeason]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_players_list\", {\n        params: {\n          limit: 100,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const query_parameters = qs.parse(history.location.search.substring(1));\n    const batting_season = query_parameters[\"batting_season\"];\n    const bowling_season = query_parameters[\"bowling_season\"];\n    setBattingSeason(batting_season || 0);\n    setBowlingSeason(bowling_season || 0);\n\n    const url_id = qs.parse(history.location.search.substring(1));\n    const player_id = url_id.player_id ? url_id.player_id : initialPlayerID;\n\n    httpService\n      .get(`/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        console.log(\"response\", response);\n        setPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    history.push({\n      // pathname: \"\",\n      search: `player_id=${player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player) => {\n    setPlayer(player);\n  };\n\n  return (\n    <div>\n      <Breadcrumb />\n      <Grid container spacing={1}>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <PlayerSearch\n              InitialPlayersList={initialPlayersList}\n              setSelectedPlayer={handleSelectedPlayer}\n              player={player}\n              url=\"/league_player_profile/search_player_by_name\"\n              league_name={leagueName}\n            />\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                paddingTop: 10,\n              }}\n            >\n              <img\n                ref={ref}\n                onLoad={onLoad}\n                src={\n                  player.headshot_image_url\n                    ? player.headshot_image_url\n                    : \"/default-user.jpg\"\n                }\n                alt=\"\"\n                style={{\n                  minWidth: \"60%\",\n                  display: loaded ? \"block\" : \"none\",\n                }}\n              />\n              {!loaded ? <CircularProgress /> : null}\n            </div>\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Batting Averages\" />\n          {Object.keys(player).length > 0 ? (\n            <LeaguePlayerBattingAverages\n              leagueName={leagueName}\n              player={player}\n              battingSeason={battingSeason}\n              setBattingSeason={setBattingSeason}\n            />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Bowling Averages\" />\n          {Object.keys(player).length > 0 ? (\n            <LeaguePlayerBowlingAverages\n              leagueName={leagueName}\n              player={player}\n              bowlingSeason={bowlingSeason}\n              setBowlingSeason={setBowlingSeason}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(LeaguePlayerProfiles);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerProfile.jsx",["155","156"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router\";\nimport qs from \"qs\";\nimport PlayerSearch from \"Components/PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport IccPlayerBattingAverages from \"./IccPlayerBattingAverages\";\nimport IccPlayerBowlingAverages from \"./IccPlayerBowlingAverages\";\nimport Breadcrumb from \"Components/Common/Breadcrumb\";\nimport CustomResponsiveFontSizes from \"Components/Common/Heading\";\nimport httpService from \"Services/httpService\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nconst IccPlayerProfile = ({ history, initialPlayerID }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [player, setPlayer] = useState({});\n  const [ref, loaded, onLoad] = useImageLoaded();\n\n  const [battingOpposition, setBattingOpposition] = React.useState(\"\");\n  const [bowlingOpposition, setBowlingOpposition] = React.useState(\"\");\n\n  useEffect(() => {\n    if (Object.keys(player).length) {\n      history.push({\n        pathname: \"\",\n        search: `player_id=${player.player_id}&batting_opposition=${battingOpposition}&bowling_opposition=${bowlingOpposition}`,\n      });\n    }\n  }, [player, battingOpposition, bowlingOpposition]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/get_players_list\", {\n        params: {\n          limit: 100,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const query_parameters = qs.parse(history.location.search.substring(1));\n    const batting_opposition = query_parameters[\"batting_opposition\"];\n    const bowling_opposition = query_parameters[\"bowling_opposition\"];\n    setBattingOpposition(batting_opposition || \"all_teams\");\n    setBowlingOpposition(bowling_opposition || \"all_teams\");\n\n    const player_id = query_parameters[\"player_id\"]\n      ? query_parameters[\"player_id\"]\n      : initialPlayerID;\n\n    httpService\n      .get(`/get_player_by_id`, {\n        params: {\n          player_id: player_id,\n        },\n      })\n      .then(function (response) {\n        setPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    history.push({\n      // pathname: \"\",\n      search: `player_id=${player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player) => {\n    setPlayer(player);\n  };\n\n  return (\n    <div>\n      <Breadcrumb />\n      <Grid container spacing={1}>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <PlayerSearch\n              InitialPlayersList={initialPlayersList}\n              setSelectedPlayer={handleSelectedPlayer}\n              player={player}\n              url=\"/search_player_by_name\"\n            />\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                paddingTop: 10,\n              }}\n            >\n              <img\n                ref={ref}\n                onLoad={onLoad}\n                src={\n                  player.headshot_image_url\n                    ? player.headshot_image_url\n                    : \"/default-user.jpg\"\n                }\n                alt=\"\"\n                style={{\n                  minWidth: \"60%\",\n                  display: loaded ? \"block\" : \"none\",\n                }}\n              />\n              {!loaded ? <CircularProgress /> : null}\n            </div>\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Batting Averages\" />\n          {Object.keys(player).length ? (\n            <IccPlayerBattingAverages\n              player={player}\n              battingOpposition={battingOpposition}\n              setBattingOpposition={setBattingOpposition}\n            />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} style={{ paddingTop: 10 }}>\n          <CustomResponsiveFontSizes text=\"Bowling Averages\" />\n          {Object.keys(player).length ? (\n            <IccPlayerBowlingAverages\n              player={player}\n              bowlingOpposition={bowlingOpposition}\n              setBowlingOpposition={setBowlingOpposition}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(IccPlayerProfile);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersComparison.jsx",["157","158"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/ProfileMenu.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/ComparisonMenu.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/PlayerSearch.jsx",["159"],"/* eslint-disable no-use-before-define */\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useState, useEffect } from \"react\";\nimport httpService from \"Services/httpService\";\n\nexport default function PlayerSearch({\n  InitialPlayersList,\n  setSelectedPlayer,\n  player,\n  isFirst = true,\n  url = \"/search_player_by_name\",\n  league_name = \"psl\",\n}) {\n  const [searchedPlayersList, setSearchedPlayersList] = useState([]);\n  const [searchStr, setSearchStr] = useState(\"\");\n\n  useEffect(() => {\n    if (searchStr) {\n      httpService\n        .get(url, {\n          params: {\n            player_name: searchStr,\n            league_name,\n          },\n        })\n        .then(function (response) {\n          setSearchedPlayersList(response.data.rows);\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n    }\n  }, [searchStr]);\n\n  return (\n    <div>\n      <Autocomplete\n        value={player}\n        disableClearable={true}\n        // id=\"combo-box-demo\"\n        options={\n          searchedPlayersList.length ? searchedPlayersList : InitialPlayersList\n        }\n        getOptionLabel={(option) => option.player_name}\n        getOptionSelected={(option, value) => {\n          if (option.player_name === value.player_name) {\n            setSelectedPlayer(value, isFirst);\n          }\n          return true;\n        }}\n        onInputChange={(event, value, reason) => {\n          return reason === \"input\" && setSearchStr(value);\n        }}\n        onChange={(event, value, reason) => {\n          if (reason === \"select-option\") {\n            setSelectedPlayer(value, isFirst);\n          }\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search Player\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        )}\n      />\n    </div>\n  );\n}\n\n//\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBattingAverages.jsx",["160","161"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AveragesTable from \"Components/Common/AveragesTable\";\nimport _ from \"lodash\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  league_batting_table_column_name_lookup,\n  league_seasons,\n} from \"Data/data\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayerBattingAverages = ({\n  player,\n  leagueName,\n  setBattingSeason,\n  battingSeason,\n}) => {\n  const classes = useStyles();\n  const [battingAverages, setBattingAverages] = useState([]);\n  const [option, setOption] = React.useState(battingSeason);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setOption(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    setBattingSeason(option);\n  }, [option]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_player_batting_averages\", {\n        params: {\n          player_id: player.player_id,\n          season_number: option,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        const data = response.data.rows;\n\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, [\n            \"opposition_team\",\n            \"innings_played\",\n            \"not_outs\",\n            \"runs_scored\",\n            \"highest_inns_score\",\n            \"batting_average\",\n            \"balls_faced\",\n            \"batting_strike_rate\",\n            \"hundreds_scored\",\n            \"fifties_scored\",\n            \"boundary_fours\",\n            \"boundary_sixes\",\n          ])\n        );\n\n        setBattingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, option]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={option}\n            onChange={handleChange}\n            label=\"Option\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      {battingAverages.length ? (\n        <AveragesTable\n          rows={battingAverages}\n          columnNamesLookup={league_batting_table_column_name_lookup}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default LeaguePlayerBattingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBowlingAverages.jsx",["162","163"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AveragesTable from \"Components/Common/AveragesTable\";\nimport _ from \"lodash\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  league_bowling_table_column_to_label_lookup,\n  league_seasons,\n} from \"Data/data\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayerBowlingAverages = ({\n  player,\n  leagueName,\n  setBowlingSeason,\n  bowlingSeason,\n}) => {\n  const classes = useStyles();\n  const [bowlingAverages, setBowlingAverages] = useState([]);\n  const [option, setOption] = React.useState(bowlingSeason);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setOption(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    setBowlingSeason(option);\n  }, [option]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/league_player_profile/get_player_bowling_averages\", {\n        params: {\n          player_id: player.player_id,\n          season_number: option,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        const data = response.data.rows;\n\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, [\n            \"opposition_team\",\n            \"innings_played\",\n            \"balls_bowled\",\n            \"runs_conceded\",\n            \"wickets_taken\",\n            \"best_innings_bowling\",\n            \"bowling_average\",\n            \"economy_rate\",\n            \"bowling_strike_rate\",\n            \"five_wkts_in_an_inns\",\n            \"four_wkts_in_an_inns\",\n            \"ten_wkts_in_an_inns\",\n          ])\n        );\n\n        setBowlingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, option]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={option}\n            onChange={handleChange}\n            label=\"Option\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      {bowlingAverages.length ? (\n        <AveragesTable\n          rows={bowlingAverages}\n          columnNamesLookup={league_bowling_table_column_to_label_lookup}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default LeaguePlayerBowlingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBattingAverages.jsx",["164"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/IccPlayerBowlingAverages.jsx",["165","166"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  icc_teams_lookup,\n  icc_bowling_table_column_name_lookup,\n} from \"Data/data\";\nimport _ from \"lodash\";\nimport AveragesTable from \"Components/Common/AveragesTable\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst IccPlayerBowlingAverages = ({\n  player,\n  bowlingOpposition,\n  setBowlingOpposition,\n}) => {\n  const classes = useStyles();\n\n  const [oppositionOption, setOppositionOption] =\n    React.useState(bowlingOpposition);\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n  const [bowlingAverages, setBowlingAverages] = useState([]);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    setBowlingOpposition(oppositionOption);\n  }, [oppositionOption]);\n\n  useEffect(() => {\n    httpService\n      .get(\"/icc_profile/icc_career_averages\", {\n        params: {\n          player_id: player[\"player_id\"],\n          opposition_team: oppositionOption,\n          type: \"bowling\",\n        },\n      })\n      .then(function (response) {\n        const data = response.data.rows;\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, Object.keys(icc_bowling_table_column_name_lookup))\n        );\n\n        setBowlingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, oppositionOption]);\n\n  return (\n    <Grid container>\n      <Grid item>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {Object.entries(icc_teams_lookup).map(([value, label]) => (\n              <MenuItem value={value}>{label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        {Object.keys(bowlingAverages).length ? (\n          <AveragesTable\n            rows={bowlingAverages}\n            columnNamesLookup={icc_bowling_table_column_name_lookup}\n          />\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default IccPlayerBowlingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Services/httpService.js",["167"],"import axios from \"axios\";\n\nconsole.log(\"process.env\", process.env);\nconst baseUrl =\n  process.env.REACT_APP_ENVIRONMENT === \"PROD\"\n    ? \"https://criccareers.com\"\n    : \"http://localhost:3001\";\n\naxios.defaults.baseURL = baseUrl;\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"Logging the error\", error);\n    alert(\"An unexpected error occurred\");\n  }\n\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Breadcrumb.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBattingAveragesComparison.jsx",["168"],"import React, { useEffect } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableView from \"Components/Common/TableView\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { icc_teams_lookup } from \"Data/data\";\nimport CustomResponsiveFontSizes from \"Components/Common/Heading\";\nimport httpService from \"Services/httpService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst IccPlayersBattingAveragesComparison = ({\n  firstPlayer,\n  secondPlayer,\n  battingFormat,\n  setBattingFormat,\n  battingOpposition,\n  setBattingOpposition,\n}) => {\n  const classes = useStyles();\n  const [chartData, setChartData] = React.useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const [formatType, setFormatType] = React.useState(battingFormat);\n  const [formatMenuOpen, setFormatMenuOpen] = React.useState(false);\n\n  const handleFormatChange = (event) => {\n    setFormatType(event.target.value);\n  };\n\n  const handleFormatMenuClose = () => {\n    setFormatMenuOpen(false);\n  };\n\n  const handleFormatMenuOpen = () => {\n    setFormatMenuOpen(true);\n  };\n\n  const [oppositionOption, setOppositionOption] =\n    React.useState(battingOpposition);\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    setBattingFormat(formatType);\n    setBattingOpposition(oppositionOption);\n  }, [formatType, oppositionOption]);\n\n  useEffect(() => {\n    httpService\n      .get(`/icc_comparison/career_averages_comparison`, {\n        params: {\n          first_player_id: firstPlayer.player_id,\n          second_player_id: secondPlayer.player_id,\n          format_type: formatType,\n          opposition_team: oppositionOption,\n          type: \"batting\",\n        },\n      })\n      .then(function ({ data }) {\n        const { first_player, second_player } = data;\n\n        setChartData({ first_player, second_player });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [\n    formatType,\n    oppositionOption,\n    firstPlayer.player_id,\n    secondPlayer.player_id,\n  ]);\n\n  return (\n    <Grid container>\n      <Grid xs={12}>\n        <CustomResponsiveFontSizes text=\"Batting Averages Comparison\" />\n      </Grid>\n      <Grid xs={12} style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Format</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={formatMenuOpen}\n            onClose={handleFormatMenuClose}\n            onOpen={handleFormatMenuOpen}\n            value={formatType}\n            onChange={handleFormatChange}\n            label=\"Format\"\n            className={classes.root}\n          >\n            {[\"All Formats\", \"T20Is\", \"Tests\", \"ODIs\"].map((format) => (\n              <MenuItem value={format}>{format}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {Object.entries(icc_teams_lookup).map(([value, label]) => (\n              <MenuItem value={value}>{label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid\n        xs={12}\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          padding: 8,\n          marginBottom: 20,\n          width: \"100%\",\n        }}\n      >\n        <TableView\n          data={chartData}\n          excludedKeys={[\"player_id\", \"format_type\", \"opposition_team\"]}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default IccPlayersBattingAveragesComparison;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/IccPlayersBowlingAveragesComparison.jsx",["169"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBattingAveragesComparison.jsx",["170","171"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBowlingAveragesComparison.jsx",["172","173"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Footer.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MenuButton.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Data/data.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TableView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Heading.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/AveragesTable.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/EnhancedTableHead.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/HomeCard.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/tracking.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":60,"column":6,"nodeType":"184","endLine":60,"endColumn":8,"suggestions":"185"},{"ruleId":"182","severity":1,"message":"186","line":55,"column":6,"nodeType":"184","endLine":62,"endColumn":4,"suggestions":"187"},{"ruleId":"182","severity":1,"message":"188","line":127,"column":6,"nodeType":"184","endLine":127,"endColumn":8,"suggestions":"189"},{"ruleId":"182","severity":1,"message":"186","line":59,"column":6,"nodeType":"184","endLine":59,"endColumn":44,"suggestions":"190"},{"ruleId":"182","severity":1,"message":"191","line":107,"column":6,"nodeType":"184","endLine":107,"endColumn":8,"suggestions":"192"},{"ruleId":"182","severity":1,"message":"186","line":47,"column":6,"nodeType":"184","endLine":47,"endColumn":52,"suggestions":"193"},{"ruleId":"182","severity":1,"message":"194","line":93,"column":6,"nodeType":"184","endLine":93,"endColumn":8,"suggestions":"195"},{"ruleId":"182","severity":1,"message":"186","line":69,"column":6,"nodeType":"184","endLine":76,"endColumn":4,"suggestions":"196"},{"ruleId":"182","severity":1,"message":"197","line":146,"column":6,"nodeType":"184","endLine":146,"endColumn":8,"suggestions":"198"},{"ruleId":"182","severity":1,"message":"199","line":37,"column":6,"nodeType":"184","endLine":37,"endColumn":17,"suggestions":"200"},{"ruleId":"182","severity":1,"message":"201","line":51,"column":6,"nodeType":"184","endLine":51,"endColumn":14,"suggestions":"202"},{"ruleId":"182","severity":1,"message":"203","line":90,"column":6,"nodeType":"184","endLine":90,"endColumn":32,"suggestions":"204"},{"ruleId":"182","severity":1,"message":"205","line":51,"column":6,"nodeType":"184","endLine":51,"endColumn":14,"suggestions":"206"},{"ruleId":"182","severity":1,"message":"203","line":90,"column":6,"nodeType":"184","endLine":90,"endColumn":32,"suggestions":"207"},{"ruleId":"182","severity":1,"message":"208","line":56,"column":6,"nodeType":"184","endLine":56,"endColumn":24,"suggestions":"209"},{"ruleId":"182","severity":1,"message":"210","line":53,"column":6,"nodeType":"184","endLine":53,"endColumn":24,"suggestions":"211"},{"ruleId":"182","severity":1,"message":"212","line":78,"column":6,"nodeType":"184","endLine":78,"endColumn":42,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":25,"column":1,"nodeType":"216","endLine":30,"endColumn":3},{"ruleId":"182","severity":1,"message":"217","line":72,"column":6,"nodeType":"184","endLine":72,"endColumn":36,"suggestions":"218"},{"ruleId":"182","severity":1,"message":"219","line":72,"column":6,"nodeType":"184","endLine":72,"endColumn":36,"suggestions":"220"},{"ruleId":"182","severity":1,"message":"221","line":73,"column":6,"nodeType":"184","endLine":73,"endColumn":38,"suggestions":"222"},{"ruleId":"182","severity":1,"message":"203","line":95,"column":6,"nodeType":"184","endLine":100,"endColumn":4,"suggestions":"223"},{"ruleId":"182","severity":1,"message":"224","line":73,"column":6,"nodeType":"184","endLine":73,"endColumn":38,"suggestions":"225"},{"ruleId":"182","severity":1,"message":"203","line":95,"column":6,"nodeType":"184","endLine":100,"endColumn":4,"suggestions":"226"},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onBackButtonEvent'. Either include it or remove the dependency array.","ArrayExpression",["229"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has missing dependencies: 'history', 'initialFirstPlayerID', and 'initialSecondPlayerID'. Either include them or remove the dependency array.",["231"],["232"],"React Hook useEffect has missing dependencies: 'history', 'initialPlayerID', and 'leagueName'. Either include them or remove the dependency array.",["233"],["234"],"React Hook useEffect has missing dependencies: 'history' and 'initialPlayerID'. Either include them or remove the dependency array.",["235"],["236"],"React Hook useEffect has missing dependencies: 'history', 'initialFirstPlayerID', 'initialSecondPlayerID', and 'leagueName'. Either include them or remove the dependency array.",["237"],"React Hook useEffect has missing dependencies: 'league_name' and 'url'. Either include them or remove the dependency array.",["238"],"React Hook useEffect has a missing dependency: 'setBattingSeason'. Either include it or remove the dependency array. If 'setBattingSeason' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["239"],"React Hook useEffect has a missing dependency: 'leagueName'. Either include it or remove the dependency array.",["240"],"React Hook useEffect has a missing dependency: 'setBowlingSeason'. Either include it or remove the dependency array. If 'setBowlingSeason' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["241"],["242"],"React Hook useEffect has a missing dependency: 'setBattingOpposition'. Either include it or remove the dependency array. If 'setBattingOpposition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["243"],"React Hook useEffect has a missing dependency: 'setBowlingOpposition'. Either include it or remove the dependency array. If 'setBowlingOpposition' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["244"],"React Hook useEffect has a missing dependency: 'player'. Either include it or remove the dependency array.",["245"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'setBattingFormat' and 'setBattingOpposition'. Either include them or remove the dependency array. If 'setBattingFormat' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["246"],"React Hook useEffect has missing dependencies: 'setBowlingFormat' and 'setBowlingOpposition'. Either include them or remove the dependency array. If 'setBowlingFormat' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["247"],"React Hook useEffect has missing dependencies: 'setBattingOpposition' and 'setBattingSeason'. Either include them or remove the dependency array. If 'setBattingSeason' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["248"],["249"],"React Hook useEffect has missing dependencies: 'setBowlingOpposition' and 'setBowlingSeason'. Either include them or remove the dependency array. If 'setBowlingSeason' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["250"],["251"],"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"274","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"291","fix":"295"},"Update the dependencies array to be: [onBackButtonEvent]",{"range":"296","text":"297"},"Update the dependencies array to be: [firstPlayer, secondPlayer, battingFormat, battingOpposition, bowlingFormat, bowlingOpposition, history]",{"range":"298","text":"299"},"Update the dependencies array to be: [history, initialFirstPlayerID, initialSecondPlayerID]",{"range":"300","text":"301"},"Update the dependencies array to be: [player, battingSeason, bowlingSeason, history]",{"range":"302","text":"303"},"Update the dependencies array to be: [history, initialPlayerID, leagueName]",{"range":"304","text":"305"},"Update the dependencies array to be: [player, battingOpposition, bowlingOpposition, history]",{"range":"306","text":"307"},"Update the dependencies array to be: [history, initialPlayerID]",{"range":"308","text":"309"},"Update the dependencies array to be: [firstPlayer, secondPlayer, battingSeason, battingOpposition, bowlingSeason, bowlingOpposition, history]",{"range":"310","text":"311"},"Update the dependencies array to be: [history, initialFirstPlayerID, initialSecondPlayerID, leagueName]",{"range":"312","text":"313"},"Update the dependencies array to be: [league_name, searchStr, url]",{"range":"314","text":"315"},"Update the dependencies array to be: [option, setBattingSeason]",{"range":"316","text":"317"},"Update the dependencies array to be: [player.player_id, option, leagueName]",{"range":"318","text":"319"},"Update the dependencies array to be: [option, setBowlingSeason]",{"range":"320","text":"321"},{"range":"322","text":"319"},"Update the dependencies array to be: [oppositionOption, setBattingOpposition]",{"range":"323","text":"324"},"Update the dependencies array to be: [oppositionOption, setBowlingOpposition]",{"range":"325","text":"326"},"Update the dependencies array to be: [player.player_id, oppositionOption, player]",{"range":"327","text":"328"},"Update the dependencies array to be: [formatType, oppositionOption, setBattingFormat, setBattingOpposition]",{"range":"329","text":"330"},"Update the dependencies array to be: [formatType, oppositionOption, setBowlingFormat, setBowlingOpposition]",{"range":"331","text":"332"},"Update the dependencies array to be: [seasonOption, oppositionOption, setBattingSeason, setBattingOpposition]",{"range":"333","text":"334"},"Update the dependencies array to be: [seasonOption, oppositionOption, firstPlayer.player_id, secondPlayer.player_id, leagueName]",{"range":"335","text":"336"},"Update the dependencies array to be: [seasonOption, oppositionOption, setBowlingSeason, setBowlingOpposition]",{"range":"337","text":"338"},{"range":"339","text":"336"},[2055,2057],"[onBackButtonEvent]",[2060,2184],"[firstPlayer, secondPlayer, battingFormat, battingOpposition, bowlingFormat, bowlingOpposition, history]",[4081,4083],"[history, initialFirstPlayerID, initialSecondPlayerID]",[1805,1843],"[player, battingSeason, bowlingSeason, history]",[3167,3169],"[history, initialPlayerID, leagueName]",[1538,1584],"[player, battingOpposition, bowlingOpposition, history]",[2774,2776],"[history, initialPlayerID]",[2327,2451],"[firstPlayer, secondPlayer, battingSeason, battingOpposition, bowlingSeason, bowlingOpposition, history]",[4609,4611],"[history, initialFirstPlayerID, initialSecondPlayerID, leagueName]",[980,991],"[league_name, searchStr, url]",[1267,1275],"[option, setBattingSeason]",[2247,2273],"[player.player_id, option, leagueName]",[1271,1279],"[option, setBowlingSeason]",[2275,2301],[1468,1486],"[oppositionOption, setBattingOpposition]",[1447,1465],"[oppositionOption, setBowlingOpposition]",[2101,2137],"[player.player_id, oppositionOption, player]",[1950,1980],"[formatType, oppositionOption, setBattingFormat, setBattingOpposition]",[1950,1980],"[formatType, oppositionOption, setBowlingFormat, setBowlingOpposition]",[1987,2019],"[seasonOption, oppositionOption, setBattingSeason, setBattingOpposition]",[2642,2742],"[seasonOption, oppositionOption, firstPlayer.player_id, secondPlayer.player_id, leagueName]",[1987,2019],"[seasonOption, oppositionOption, setBowlingSeason, setBowlingOpposition]",[2642,2742]]