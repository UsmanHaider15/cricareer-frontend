[{"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js":"1","/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js":"2","/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js":"3","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx":"4","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx":"5","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js":"6","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparison.jsx":"7","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx":"8","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TabPanel.jsx":"9","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TableView.jsx":"10","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/ChartView.jsx":"11","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/PlayerSearch.jsx":"12","/home/usman/Desktop/Cricareer/cricareer-frontend/src/data/data.js":"13","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerAveragesComparison.jsx":"14","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerProfiles.jsx":"15","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerBattingAverages.jsx":"16","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/AveragesTable.jsx":"17","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/EnhancedTableHead.jsx":"18","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerBowlingAverages.jsx":"19"},{"size":593,"mtime":1610989760186,"results":"20","hashOfConfig":"21"},{"size":1080,"mtime":1613848051201,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1610861361319,"results":"23","hashOfConfig":"21"},{"size":5640,"mtime":1613845317234,"results":"24","hashOfConfig":"21"},{"size":2938,"mtime":1611688706937,"results":"25","hashOfConfig":"21"},{"size":150,"mtime":1611167234492,"results":"26","hashOfConfig":"21"},{"size":3613,"mtime":1613912568699,"results":"27","hashOfConfig":"21"},{"size":2175,"mtime":1611690749936,"results":"28","hashOfConfig":"21"},{"size":382,"mtime":1611417644481,"results":"29","hashOfConfig":"21"},{"size":1970,"mtime":1611420846815,"results":"30","hashOfConfig":"21"},{"size":1037,"mtime":1611432683752,"results":"31","hashOfConfig":"21"},{"size":1986,"mtime":1613849464940,"results":"32","hashOfConfig":"21"},{"size":1381,"mtime":1614296512130,"results":"33","hashOfConfig":"21"},{"size":2952,"mtime":1611493370023,"results":"34","hashOfConfig":"21"},{"size":3857,"mtime":1614296284342,"results":"35","hashOfConfig":"21"},{"size":3335,"mtime":1614294846604,"results":"36","hashOfConfig":"21"},{"size":3452,"mtime":1614295553458,"results":"37","hashOfConfig":"21"},{"size":1870,"mtime":1614295618574,"results":"38","hashOfConfig":"21"},{"size":3231,"mtime":1614296372026,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1xm0vh1",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js",[],["83","84"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx",["85","86"],"import PlayerSearch from \"./PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router\";\nimport IccCareerComparisons from \"./IccCareerComparisons\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nconst IccPlayerComparison = ({ history }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [firstPlayer, setFirstPlayer] = useState({});\n  const [secondPlayer, setSecondPlayer] = useState({});\n  const [firstRef, firstLoaded, firstOnLoad] = useImageLoaded();\n  const [secondRef, secondLoaded, secondOnLoad] = useImageLoaded();\n\n  useEffect(() => {\n    if (Object.keys(firstPlayer).length && Object.keys(secondPlayer).length) {\n      history.push({\n        pathname: \"\",\n        search: `first_player_id=${firstPlayer.player_id}&second_player_id=${secondPlayer.player_id}`,\n      });\n    }\n  }, [firstPlayer, secondPlayer]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/get_players_list\", {\n        params: {\n          limit: 100,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const player_ids = qs.parse(history.location.search.substring(1));\n    const first_player_id = player_ids.first_player_id\n      ? player_ids.first_player_id\n      : 253802;\n    const second_player_id = player_ids.second_player_id\n      ? player_ids.second_player_id\n      : 348144;\n\n    axios\n      .get(`http://localhost:3001/get_player_by_id`, {\n        params: {\n          player_id: first_player_id,\n        },\n      })\n      .then(function (response) {\n        setFirstPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    axios\n      .get(`http://localhost:3001/get_player_by_id`, {\n        params: {\n          player_id: second_player_id,\n        },\n      })\n      .then(function (response) {\n        setSecondPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    history.push({\n      // pathname: \"\",\n      search: `first_player_id=${first_player_id}&second_player_id=${second_player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player, isFirst) => {\n    if (isFirst) {\n      setFirstPlayer(player);\n    } else {\n      setSecondPlayer(player);\n    }\n  };\n\n  return (\n    <div>\n      <Grid container style={{ paddingTop: 10 }} spacing={1}>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={firstPlayer}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={secondPlayer}\n            isFirst={false}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={firstRef}\n              onLoad={firstOnLoad}\n              src={\n                firstPlayer.player_image_url\n                  ? firstPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: firstLoaded ? \"block\" : \"none\",\n              }}\n            />\n            {!firstLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={secondRef}\n              onLoad={secondOnLoad}\n              src={\n                secondPlayer.player_image_url\n                  ? secondPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: secondLoaded ? \"block\" : \"none\",\n              }}\n            />\n\n            {!secondLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        {firstPlayer.player_id && secondPlayer.player_id ? (\n          <IccCareerComparisons\n            firstPlayer={firstPlayer}\n            secondPlayer={secondPlayer}\n          />\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(IccPlayerComparison);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparison.jsx",["87","88","89","90"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport humanify from \"../Utils/humanify\";\nimport DataViewTabs from \"./DataViewTabs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nexport default function IccBattingFormatAveragesComparison({\n  firstPlayer,\n  secondPlayer,\n  career,\n  options,\n}) {\n  const classes = useStyles();\n  const [option, setOption] = React.useState(\"matches_played\");\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = useState({ first_player: {}, second_player: {} });\n  const [chartData, setChartData] = useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const handleChange = (event) => {\n    setOption(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:3001/icc_comparison/${career}_format_averages_comparison`,\n        {\n          params: {\n            first_player_id: firstPlayer.player_id,\n            second_player_id: secondPlayer.player_id,\n            option: option,\n          },\n        }\n      )\n      .then(function (response) {\n        const first = {};\n        response.data.first_player.map((obj) => {\n          first[obj[\"match_type\"]] = obj[option];\n        });\n        const second = {};\n        response.data.second_player.map((obj) => {\n          second[obj[\"match_type\"]] = obj[option];\n        });\n\n        const first_player = {};\n        const second_player = {};\n        [\"Tests\", \"ODIs\", \"T20Is\", \"T20s\"].map((format) => {\n          first_player[format] = first[format] ? first[format] : \"-\";\n          second_player[format] = second[format] ? second[format] : \"-\";\n        });\n\n        setChartData({ first_player, second_player });\n        setData({\n          first_player: Object.assign(\n            { player_name: firstPlayer.player_name.split(\" \")[0] },\n            first_player\n          ),\n          second_player: Object.assign(\n            { player_name: secondPlayer.player_name.split(\" \")[0] },\n            second_player\n          ),\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [option, firstPlayer.player_id, secondPlayer.player_id]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Option</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={option}\n            onChange={handleChange}\n            label=\"Option\"\n            className={classes.root}\n          >\n            {options.map((value) => (\n              <MenuItem value={value}>{humanify(value)}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      <div>\n        <DataViewTabs\n          data={data}\n          chartData={chartData}\n          firstPlayer={firstPlayer}\n          secondPlayer={secondPlayer}\n        />\n      </div>\n    </div>\n  );\n}\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TabPanel.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TableView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/ChartView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/PlayerSearch.jsx",["91"],"/* eslint-disable no-use-before-define */\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function PlayerSearch({\n  InitialPlayersList,\n  setSelectedPlayer,\n  player,\n  isFirst = true,\n  url = \"http://localhost:3001/search_player_by_name\",\n  league_name = \"psl\",\n}) {\n  const [searchedPlayersList, setSearchedPlayersList] = useState([]);\n  const [searchStr, setSearchStr] = useState(\"\");\n\n  useEffect(() => {\n    if (searchStr) {\n      axios\n        .get(url, {\n          params: {\n            player_name: searchStr,\n            league_name,\n          },\n        })\n        .then(function (response) {\n          setSearchedPlayersList(response.data.rows);\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n    }\n  }, [searchStr]);\n\n  return (\n    <div>\n      <Autocomplete\n        value={player}\n        disableClearable={true}\n        // id=\"combo-box-demo\"\n        options={\n          searchedPlayersList.length ? searchedPlayersList : InitialPlayersList\n        }\n        getOptionLabel={(option) => option.player_name}\n        getOptionSelected={(option, value) => {\n          if (option.player_name === value.player_name) {\n            setSelectedPlayer(value, isFirst);\n          }\n          return true;\n        }}\n        onInputChange={(event, value, reason) => {\n          return reason === \"input\" && setSearchStr(value);\n        }}\n        onChange={(event, value, reason) => {\n          if (reason === \"select-option\") {\n            setSelectedPlayer(value, isFirst);\n          }\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search Player\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        )}\n      />\n    </div>\n  );\n}\n\n//\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/data/data.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerAveragesComparison.jsx",["92"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport TableView from \"./common/TableView\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nexport default function IccCareerAveragesComparison({\n  firstPlayer,\n  secondPlayer,\n  career,\n}) {\n  const classes = useStyles();\n  const [format, setFormat] = React.useState(\"ODIs\");\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = useState({ first_player: {}, second_player: {} });\n\n  const formatOptions = [\"ODIs\", \"T20Is\", \"T20s\", \"Tests\"];\n  const handleChange = (event) => {\n    setFormat(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:3001/icc_comparison/${career}_averages_comparison`,\n        {\n          params: {\n            first_player_id: firstPlayer.player_id,\n            second_player_id: secondPlayer.player_id,\n            format,\n          },\n        }\n      )\n      .then(function (response) {\n        setData({\n          first_player: Object.assign(\n            { player_name: firstPlayer.player_name.split(\" \")[0] },\n            response.data.first_player\n          ),\n          second_player: Object.assign(\n            { player_name: secondPlayer.player_name.split(\" \")[0] },\n            response.data.second_player\n          ),\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [format, firstPlayer.player_id, secondPlayer.player_id]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Format</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={format}\n            onChange={handleChange}\n            label=\"Format\"\n            className={classes.root}\n          >\n            {formatOptions.map((option) => (\n              <MenuItem value={option}>{option}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      <div\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          borderRadius: \"10px 10px 10px 10px\",\n          padding: 8,\n          marginBottom: 20,\n        }}\n      >\n        <TableView data={data} />\n      </div>\n    </div>\n  );\n}\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerProfiles.jsx",["93","94"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerBattingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/AveragesTable.jsx",["95"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/EnhancedTableHead.jsx",["96"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerBowlingAverages.jsx",["97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":43,"column":6,"nodeType":"104","endLine":43,"endColumn":33,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"103","line":99,"column":6,"nodeType":"104","endLine":99,"endColumn":8,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":62,"column":46,"nodeType":"109","messageId":"110","endLine":62,"endColumn":48},{"ruleId":"107","severity":1,"message":"108","line":66,"column":47,"nodeType":"109","messageId":"110","endLine":66,"endColumn":49},{"ruleId":"107","severity":1,"message":"108","line":72,"column":57,"nodeType":"109","messageId":"110","endLine":72,"endColumn":59},{"ruleId":"102","severity":1,"message":"111","line":92,"column":6,"nodeType":"104","endLine":92,"endColumn":61,"suggestions":"112"},{"ruleId":"102","severity":1,"message":"113","line":37,"column":6,"nodeType":"104","endLine":37,"endColumn":17,"suggestions":"114"},{"ruleId":"102","severity":1,"message":"111","line":70,"column":6,"nodeType":"104","endLine":70,"endColumn":61,"suggestions":"115"},{"ruleId":"102","severity":1,"message":"103","line":42,"column":6,"nodeType":"104","endLine":42,"endColumn":14,"suggestions":"116"},{"ruleId":"102","severity":1,"message":"103","line":83,"column":6,"nodeType":"104","endLine":83,"endColumn":8,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":13,"column":10,"nodeType":"120","messageId":"121","endLine":13,"endColumn":49},{"ruleId":"118","severity":1,"message":"122","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":11,"column":3,"nodeType":"120","messageId":"121","endLine":11,"endColumn":42},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["125"],["126"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'career', 'firstPlayer.player_name', and 'secondPlayer.player_name'. Either include them or remove the dependency array. If 'setData' needs the current value of 'firstPlayer.player_name', you can also switch to useReducer instead of useState and read 'firstPlayer.player_name' in the reducer.",["127"],"React Hook useEffect has missing dependencies: 'league_name' and 'url'. Either include them or remove the dependency array.",["128"],["129"],["130"],["131"],"no-unused-vars","'league_batting_table_column_name_lookup' is defined but never used.","Identifier","unusedVar","'humanify' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"134","fix":"144"},"Update the dependencies array to be: [firstPlayer, history, secondPlayer]",{"range":"145","text":"146"},"Update the dependencies array to be: [history]",{"range":"147","text":"148"},"Update the dependencies array to be: [option, firstPlayer.player_id, secondPlayer.player_id, career, firstPlayer.player_name, secondPlayer.player_name]",{"range":"149","text":"150"},"Update the dependencies array to be: [league_name, searchStr, url]",{"range":"151","text":"152"},"Update the dependencies array to be: [format, firstPlayer.player_id, secondPlayer.player_id, career, firstPlayer.player_name, secondPlayer.player_name]",{"range":"153","text":"154"},"Update the dependencies array to be: [history, player]",{"range":"155","text":"156"},{"range":"157","text":"148"},[1309,1336],"[firstPlayer, history, secondPlayer]",[2748,2750],"[history]",[2608,2663],"[option, firstPlayer.player_id, secondPlayer.player_id, career, firstPlayer.player_name, secondPlayer.player_name]",[974,985],"[league_name, searchStr, url]",[1895,1950],"[format, firstPlayer.player_id, secondPlayer.player_id, career, firstPlayer.player_name, secondPlayer.player_name]",[1146,1154],"[history, player]",[2133,2135]]