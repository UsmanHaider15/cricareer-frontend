[{"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js":"1","/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js":"2","/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js":"3","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Header.jsx":"4","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Footer.jsx":"5","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersComparison.jsx":"6","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Data/data.js":"7","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBattingAverages.jsx":"8","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBowlingAverages.jsx":"9","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBowlingAveragesComparison.jsx":"10","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBattingAveragesComparison.jsx":"11","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Services/httpService.js":"12","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js":"13","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Breadcrumb.jsx":"14","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/capitalizeFirstLetter.js":"15","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TableView.jsx":"16","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/AveragesTable.jsx":"17","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MenuButton.jsx":"18","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/EnhancedTableHead.jsx":"19","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MediaControlCard.jsx":"20","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TopbarMenu.jsx":"21","/home/usman/Desktop/Cricareer/cricareer-frontend/src/config.js":"22","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home/Home.jsx":"23","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MenuToolbar.jsx":"24","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfile.jsx":"25","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home/PlayerStatCard.jsx":"26","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home/Cover.jsx":"27","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home/StatCards.jsx":"28","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/generateHeader.js":"29","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/PlayerSearch.jsx":"30","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueStats.jsx":"31","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfileSkeleton.jsx":"32","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayerComparisonSkeleton.jsx":"33","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueBattingStats.jsx":"34","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueBowlingStats.jsx":"35","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/PlayerImage.jsx":"36","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/getFormattedPageName.js":"37","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueAveragesTable.jsx":"38","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/CircularLoader.jsx":"39","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueEnhancedTableHead.jsx":"40","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/NoData.jsx":"41","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueStatsSkeleton.jsx":"42"},{"size":1442,"mtime":1643372229981,"results":"43","hashOfConfig":"44"},{"size":3642,"mtime":1644993994616,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1635771090275,"results":"46","hashOfConfig":"44"},{"size":267,"mtime":1635771090271,"results":"47","hashOfConfig":"44"},{"size":1359,"mtime":1644994103103,"results":"48","hashOfConfig":"44"},{"size":7573,"mtime":1644993582598,"results":"49","hashOfConfig":"44"},{"size":7828,"mtime":1644924782820,"results":"50","hashOfConfig":"44"},{"size":3346,"mtime":1644924782820,"results":"51","hashOfConfig":"44"},{"size":3359,"mtime":1644924782820,"results":"52","hashOfConfig":"44"},{"size":5611,"mtime":1644924782812,"results":"53","hashOfConfig":"44"},{"size":5615,"mtime":1644924782812,"results":"54","hashOfConfig":"44"},{"size":655,"mtime":1644644946033,"results":"55","hashOfConfig":"44"},{"size":150,"mtime":1635771090275,"results":"56","hashOfConfig":"44"},{"size":705,"mtime":1644993862669,"results":"57","hashOfConfig":"44"},{"size":141,"mtime":1635771090275,"results":"58","hashOfConfig":"44"},{"size":1978,"mtime":1644924782808,"results":"59","hashOfConfig":"44"},{"size":3285,"mtime":1644924782804,"results":"60","hashOfConfig":"44"},{"size":198,"mtime":1643372229805,"results":"61","hashOfConfig":"44"},{"size":2257,"mtime":1644924782804,"results":"62","hashOfConfig":"44"},{"size":1295,"mtime":1643372229805,"results":"63","hashOfConfig":"44"},{"size":2304,"mtime":1644924782808,"results":"64","hashOfConfig":"44"},{"size":3593,"mtime":1644917968969,"results":"65","hashOfConfig":"44"},{"size":535,"mtime":1644924782816,"results":"66","hashOfConfig":"44"},{"size":1591,"mtime":1644644946021,"results":"67","hashOfConfig":"44"},{"size":5539,"mtime":1644993546882,"results":"68","hashOfConfig":"44"},{"size":8817,"mtime":1644924782816,"results":"69","hashOfConfig":"44"},{"size":886,"mtime":1644924782812,"results":"70","hashOfConfig":"44"},{"size":1847,"mtime":1644924782816,"results":"71","hashOfConfig":"44"},{"size":1218,"mtime":1643580460971,"results":"72","hashOfConfig":"44"},{"size":2018,"mtime":1644561093224,"results":"73","hashOfConfig":"44"},{"size":2621,"mtime":1644993940153,"results":"74","hashOfConfig":"44"},{"size":1633,"mtime":1644924782820,"results":"75","hashOfConfig":"44"},{"size":2010,"mtime":1644924782812,"results":"76","hashOfConfig":"44"},{"size":6922,"mtime":1644924782816,"results":"77","hashOfConfig":"44"},{"size":6988,"mtime":1644924782816,"results":"78","hashOfConfig":"44"},{"size":1412,"mtime":1644644946021,"results":"79","hashOfConfig":"44"},{"size":347,"mtime":1644644946033,"results":"80","hashOfConfig":"44"},{"size":3513,"mtime":1644924782816,"results":"81","hashOfConfig":"44"},{"size":599,"mtime":1644644946021,"results":"82","hashOfConfig":"44"},{"size":2275,"mtime":1644924782816,"results":"83","hashOfConfig":"44"},{"size":532,"mtime":1644644946021,"results":"84","hashOfConfig":"44"},{"size":754,"mtime":1644924782820,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1tzukmn",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js",[],["175","176"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Header.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Footer.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersComparison.jsx",["177","178","179"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Data/data.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBattingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerBowlingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBowlingAveragesComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayersBattingAveragesComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Services/httpService.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/Breadcrumb.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/capitalizeFirstLetter.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TableView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/AveragesTable.jsx",["180","181"],"import React from \"react\";\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport NoData from \"./NoData\";\nimport { Link } from \"react-router-dom\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst AveragesTable = ({ rows, columnNamesLookup }) => {\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"opposition_team\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  if (rows.length === 0) {\n    return <NoData />;\n  }\n\n  return (\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\", marginTop: 2 }}>\n      <TableContainer sx={{ maxHeight: 400 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <EnhancedTableHead\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n            columnNamesLookup={columnNamesLookup}\n          />\n          <TableBody>\n            {stableSort(rows, getComparator(order, orderBy)).map(\n              (row, index) => {\n                return (\n                  <TableRow hover tabIndex={-1} key={row.opposition_team}>\n                    {Object.values(row).map((col_val, ind) => (\n                      <TableCell\n                        sx={{\n                          ...(!ind\n                            ? {\n                                backgroundColor: \"white\",\n                                left: 0,\n                                position: \"sticky\",\n                                align: \"left\",\n                                whiteSpace: \"nowrap\",\n                              }\n                            : {\n                                textAlign: { xs: \"left\", md: \"center\" },\n                              }),\n                          fontSize: { xs: 12, md: 18 },\n                          padding: { xs: 1 },\n                        }}\n                      >\n                        {col_val}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                );\n              }\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nexport default AveragesTable;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MenuButton.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/EnhancedTableHead.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MediaControlCard.jsx",["182"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/TopbarMenu.jsx",["183"],"import React, { useEffect } from \"react\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport MenuButton from \"Components/Common/MenuButton\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport getFormattedPageName from \"Utils/getFormattedPageName\";\nimport _ from \"lodash\";\n\nexport default function TopbarMenu({ type, links }) {\n  const location = useLocation();\n  const [btnLabel, setBtnLabel] = React.useState(`${_.capitalize(type)}s`);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isActive, setIsActive] = React.useState(false);\n\n  const handleClick = (event) => {\n    setIsOpen(true);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    if (!location.pathname.includes(type)) {\n      setBtnLabel(`${_.capitalize(type)}s`);\n      setIsActive(false);\n    } else {\n      setBtnLabel(btnLabel);\n      setIsActive(true);\n    }\n  }, [location.pathname]);\n\n  return (\n    <div>\n      <MenuButton\n        sx={{\n          color: isActive ? \"#170451\" : \"gray\",\n          fontWeight: \"bold\",\n        }}\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        {btnLabel} {!isOpen ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}\n      </MenuButton>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {links.map(({ link, leagueName }) => (\n          <Link to={link} style={{ textDecoration: \"none\", color: \"#170451\" }}>\n            <MenuItem\n              sx={{ textDecoration: \"none\" }}\n              onClick={() => {\n                setBtnLabel(getFormattedPageName({ leagueName, type }));\n                handleClose();\n              }}\n            >\n              {getFormattedPageName({ leagueName, type })}\n            </MenuItem>\n          </Link>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/config.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home/Home.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/MenuToolbar.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfile.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home/PlayerStatCard.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home/Cover.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Home/StatCards.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/generateHeader.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/PlayerSearch.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueStats.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Profiles/LeaguePlayerProfileSkeleton.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Comparisons/LeaguePlayerComparisonSkeleton.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueBattingStats.jsx",["184"],"import * as React from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { league_seasons, league_teams } from \"Data/data\";\nimport { Grid, Box } from \"@mui/material\";\nimport httpService from \"Services/httpService\";\nimport _ from \"lodash\";\nimport LeagueAveragesTable from \"./LeagueAveragesTable\";\nimport CircularLoader from \"Components/Common/CircularLoader\";\nimport LeagueStatsSkeleton from \"./LeagueStatsSkeleton\";\n\nconst stats_lookup = {\n  \"Most Runs\": \"runs_scored\",\n  \"Most Fours\": \"boundary_fours\",\n  \"Most Sixes\": \"boundary_sixes\",\n  \"Most Fifties\": \"fifties_scored\",\n  \"Most Centuries\": \"hundreds_scored\",\n  \"Best Batting Strike Rate\": \"batting_strike_rate\",\n  \"Best Batting Averages\": \"batting_averages\",\n};\n\nconst column_name_lookup = {\n  innings_played: \"Inns\",\n  not_outs: \"NO\",\n  runs_scored: \"Runs\",\n  highest_inns_score: \"HS\",\n  batting_average: \"Avg\",\n  balls_faced: \"BF\",\n  batting_strike_rate: \"SR\",\n  boundary_fours: \"4s\",\n  boundary_sixes: \"6s\",\n  fifties_scored: \"50s\",\n  hundreds_scored: \"100s\",\n};\n\nconst LeagueBattingStats = ({\n  leagueName,\n  battingSeason = 0,\n  stat = \"Most Runs\",\n  opposition = \"All Teams\",\n  onHandleParamChange,\n}) => {\n  const [season, setSeason] = React.useState(battingSeason);\n  const [loading, setLoading] = React.useState(true);\n\n  const [battingStat, setBattingStat] = React.useState(stat);\n  const [oppositionOption, setOppositionOption] = React.useState(opposition);\n  const [battingAverages, setBattingAverages] = React.useState([]);\n\n  const handleOptionChange = (e, setter) => {\n    onHandleParamChange(e.target.name, e.target.value);\n    setter(e.target.value);\n    setLoading(true);\n  };\n\n  React.useEffect(() => {\n    httpService\n      .get(\"/league_stats\", {\n        params: {\n          league_name: leagueName,\n          stat_type: \"batting\",\n          stat_name: battingStat,\n          season_number: season,\n          team_name: oppositionOption,\n        },\n      })\n      .then(({ data }) => {\n        const { rows } = data;\n\n        // Important: here we are enforcing order\n        const modifiedData = rows.map((obj) => {\n          const newObj = _.pick(obj, [\n            \"player_name\",\n            stats_lookup[battingStat],\n            ...Object.keys(column_name_lookup),\n          ]);\n\n          // TODO: please fix me\n          return {\n            ...newObj,\n            player_name: {\n              player_name: obj[\"player_name\"],\n              link: `/profile/${leagueName}_profile?player_id=${obj[\"player_id\"]}`,\n            },\n          };\n        });\n        setBattingAverages(modifiedData);\n        setLoading(false);\n      });\n  }, [season, battingStat, oppositionOption]);\n\n  return (\n    <React.Fragment>\n      {battingAverages.length ? (\n        <Grid container sx={{ padding: 1 }}>\n          <Grid xs={12}>\n            <Box\n              sx={{\n                textAlign: \"left\",\n                fontSize: { xs: 30, md: 48 },\n              }}\n            >\n              Batting Averages\n            </Box>\n          </Grid>\n          <Grid xs={12} sx={{ textAlign: \"left\" }}>\n            <FormControl sx={{ paddingRight: 1, marginTop: 1 }}>\n              <InputLabel id=\"demo-simple-select-label\">Stat</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={battingStat}\n                label=\"Stat\"\n                name=\"battingStat\"\n                onChange={(e) => handleOptionChange(e, setBattingStat)}\n                sx={[\n                  {\n                    \".MuiSelect-select\": {\n                      padding: { xs: \"7px 5px\", md: \"16.5px 14px\" },\n                      fontSize: { xs: \"0.9rem\", md: \"1rem\" },\n                    },\n                  },\n                ]}\n              >\n                {Object.keys(stats_lookup).map((stat) => (\n                  <MenuItem value={stat}>{stat}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControl\n              variant=\"outlined\"\n              sx={{ paddingRight: 1, marginTop: 1 }}\n            >\n              <InputLabel id=\"demo-simple-select-label\">Season</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={season}\n                label=\"Season\"\n                name=\"battingSeason\"\n                onChange={(e) => handleOptionChange(e, setSeason)}\n                sx={[\n                  {\n                    \".MuiSelect-select\": {\n                      padding: { xs: \"7px 5px\", md: \"16.5px 14px\" },\n                      fontSize: { xs: \"0.9rem\", md: \"1rem\" },\n                    },\n                  },\n                ]}\n              >\n                {[\n                  ...league_seasons[leagueName],\n                  { season_number: 0, year: null, label: \"All Seasons\" },\n                ]\n                  .reverse()\n                  .map(({ season_number, label }) => (\n                    <MenuItem value={season_number}>{label}</MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n\n            <FormControl sx={{ marginTop: 1 }}>\n              <InputLabel id=\"demo-simple-select-label\">Against</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={oppositionOption}\n                label=\"Against\"\n                name=\"battingOpposition\"\n                onChange={(e) => handleOptionChange(e, setOppositionOption)}\n                sx={[\n                  {\n                    \".MuiSelect-select\": {\n                      padding: { xs: \"7px 5px\", md: \"16.5px 14px\" },\n                      fontSize: { xs: \"0.9rem\", md: \"1rem\" },\n                    },\n                  },\n                ]}\n              >\n                {league_teams[leagueName].map((value) => (\n                  <MenuItem value={value}>{value}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          {!loading ? (\n            <LeagueAveragesTable\n              rows={battingAverages}\n              columnNamesLookup={{\n                player_name: \"Player\",\n                [stats_lookup[battingStat]]: \"focus\",\n                ...column_name_lookup,\n              }}\n            />\n          ) : (\n            <CircularLoader />\n          )}\n        </Grid>\n      ) : (\n        <LeagueStatsSkeleton />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default LeagueBattingStats;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueBowlingStats.jsx",["185"],"import * as React from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { league_seasons, league_teams } from \"Data/data\";\nimport { Grid, Box } from \"@mui/material\";\nimport httpService from \"Services/httpService\";\nimport _ from \"lodash\";\nimport LeagueAveragesTable from \"./LeagueAveragesTable\";\nimport CircularLoader from \"Components/Common/CircularLoader\";\nimport LeagueStatsSkeleton from \"./LeagueStatsSkeleton\";\n\nconst stats_lookup = {\n  \"Most Wickets\": \"wickets_taken\",\n  \"Best Bowling Average\": \"bowling_average\",\n  \"Best Bowling Economy\": \"economy_rate\",\n  \"Best Bowling Strike Rate\": \"bowling_strike_rate\",\n  \"Most Runs Conceded\": \"runs_conceded\",\n};\n\nconst column_name_lookup = {\n  innings_played: \"Inns\",\n  balls_bowled: \"Balls\",\n  runs_conceded: \"Runs\",\n  wickets_taken: \"Wkts\",\n  // best_innings_bowling: \"Best Inns Bowling\",\n  // maiden_overs: \"Maidens\",\n  bowling_average: \"Avg\",\n  economy_rate: \"Econ\",\n  bowling_strike_rate: \"SR\",\n  four_wkts_in_an_inns: \"4w\",\n  five_wkts_in_an_inns: \"5w\",\n  ten_wkts_in_an_inns: \"10w\",\n};\n\nconst LeagueBowlingStats = ({\n  leagueName,\n  bowlingSeason = 0,\n  stat = \"Most Wickets\",\n  opposition = \"All Teams\",\n  onHandleParamChange,\n}) => {\n  const [season, setSeason] = React.useState(bowlingSeason);\n  const [loading, setLoading] = React.useState(true);\n\n  const [bowlingStat, setBowlingStats] = React.useState(stat);\n  const [oppositionOption, setOppositionOption] = React.useState(opposition);\n  const [bowlingAverages, setBowlingAverages] = React.useState([]);\n\n  const handleOptionChange = (e, setter) => {\n    onHandleParamChange(e.target.name, e.target.value);\n    setter(e.target.value);\n    setLoading(true);\n  };\n\n  React.useEffect(() => {\n    httpService\n      .get(\"/league_stats\", {\n        params: {\n          league_name: leagueName,\n          stat_type: \"bowling\",\n          stat_name: bowlingStat,\n          season_number: season,\n          team_name: oppositionOption,\n        },\n      })\n      .then(({ data }) => {\n        const { rows } = data;\n\n        // Important: here we are enforcing order\n        const modifiedData = rows.map((obj) => {\n          const newObj = _.pick(obj, [\n            \"player_name\",\n            stats_lookup[bowlingStat],\n            ...Object.keys(column_name_lookup),\n          ]);\n\n          // TODO: please fix me\n          return {\n            ...newObj,\n            player_name: {\n              player_name: obj[\"player_name\"],\n              link: `/profile/${leagueName}_profile?player_id=${obj[\"player_id\"]}`,\n            },\n          };\n        });\n\n        setBowlingAverages(modifiedData);\n        setLoading(false);\n      });\n  }, [season, bowlingStat, oppositionOption]);\n\n  return (\n    <React.Fragment>\n      {bowlingAverages.length ? (\n        <Grid container sx={{ padding: 1 }}>\n          <Grid xs={12}>\n            <Box\n              sx={{\n                padding: \"5px 0px\",\n                textAlign: \"left\",\n                fontSize: { xs: 30, md: 48 },\n              }}\n            >\n              Bowling Averages\n            </Box>\n          </Grid>\n          <Grid xs={12} style={{ textAlign: \"left\" }}>\n            <FormControl sx={{ paddingRight: 1, marginTop: 1 }}>\n              <InputLabel id=\"demo-simple-select-label\">Stat</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={bowlingStat}\n                label=\"Stat\"\n                name=\"battingStat\"\n                onChange={(e) => handleOptionChange(e, setBowlingStats)}\n                sx={[\n                  {\n                    \".MuiSelect-select\": {\n                      padding: { xs: \"7px 5px\", md: \"16.5px 14px\" },\n                      fontSize: { xs: \"0.9rem\", md: \"1rem\" },\n                    },\n                  },\n                ]}\n              >\n                {Object.keys(stats_lookup).map((stat) => (\n                  <MenuItem value={stat}>{stat}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControl\n              variant=\"outlined\"\n              sx={{ paddingRight: 1, marginTop: 1 }}\n            >\n              <InputLabel id=\"demo-simple-select-label\">Season</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={season}\n                label=\"Season\"\n                name=\"bowlingSeason\"\n                onChange={(e) => handleOptionChange(e, setSeason)}\n                sx={[\n                  {\n                    \".MuiSelect-select\": {\n                      padding: { xs: \"7px 5px\", md: \"16.5px 14px\" },\n                      fontSize: { xs: \"0.9rem\", md: \"1rem\" },\n                    },\n                  },\n                ]}\n              >\n                {[\n                  ...league_seasons[leagueName],\n                  { season_number: 0, year: null, label: \"All Seasons\" },\n                ]\n                  .reverse()\n                  .map(({ season_number, label }) => (\n                    <MenuItem value={season_number}>{label}</MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n\n            <FormControl sx={{ marginTop: 1 }}>\n              <InputLabel id=\"demo-simple-select-label\">Against</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={oppositionOption}\n                label=\"Against\"\n                name=\"bowlingOpposition\"\n                onChange={(e) => handleOptionChange(e, setOppositionOption)}\n                sx={[\n                  {\n                    \".MuiSelect-select\": {\n                      padding: { xs: \"7px 5px\", md: \"16.5px 14px\" },\n                      fontSize: { xs: \"0.9rem\", md: \"1rem\" },\n                    },\n                  },\n                ]}\n              >\n                {league_teams[leagueName].map((value) => (\n                  <MenuItem value={value}>{value}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          {!loading ? (\n            <LeagueAveragesTable\n              rows={bowlingAverages}\n              columnNamesLookup={{\n                player_name: \"Player\",\n                [stats_lookup[bowlingStat]]: \"focus\",\n                ...column_name_lookup,\n              }}\n            />\n          ) : (\n            <CircularLoader />\n          )}\n        </Grid>\n      ) : (\n        <LeagueStatsSkeleton />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default LeagueBowlingStats;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/PlayerImage.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/getFormattedPageName.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueAveragesTable.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/CircularLoader.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueEnhancedTableHead.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Common/NoData.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Components/Leagues/LeagueStatsSkeleton.jsx",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":56,"column":6,"nodeType":"192","endLine":63,"endColumn":4,"suggestions":"193"},{"ruleId":"190","severity":1,"message":"194","line":102,"column":6,"nodeType":"192","endLine":102,"endColumn":8,"suggestions":"195"},{"ruleId":"190","severity":1,"message":"196","line":141,"column":6,"nodeType":"192","endLine":141,"endColumn":51,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":11,"column":10,"nodeType":"200","messageId":"201","endLine":11,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":71,"column":21,"nodeType":"204","endLine":71,"endColumn":46},{"ruleId":"198","severity":1,"message":"205","line":53,"column":9,"nodeType":"200","messageId":"201","endLine":53,"endColumn":14},{"ruleId":"190","severity":1,"message":"206","line":37,"column":6,"nodeType":"192","endLine":37,"endColumn":25,"suggestions":"207"},{"ruleId":"190","severity":1,"message":"208","line":93,"column":6,"nodeType":"192","endLine":93,"endColumn":45,"suggestions":"209"},{"ruleId":"190","severity":1,"message":"208","line":94,"column":6,"nodeType":"192","endLine":94,"endColumn":45,"suggestions":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["213"],"React Hook useEffect has a missing dependency: 'leagueName'. Either include it or remove the dependency array.",["214"],"React Hook useEffect has missing dependencies: 'history' and 'leagueName'. Either include them or remove the dependency array.",["215"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'theme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'btnLabel' and 'type'. Either include them or remove the dependency array. If 'setBtnLabel' needs the current value of 'type', you can also switch to useReducer instead of useState and read 'type' in the reducer.",["216"],"React Hook React.useEffect has a missing dependency: 'leagueName'. Either include it or remove the dependency array.",["217"],["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [firstPlayer, secondPlayer, battingSeason, battingOpposition, bowlingSeason, bowlingOpposition, history]",{"range":"231","text":"232"},"Update the dependencies array to be: [leagueName]",{"range":"233","text":"234"},"Update the dependencies array to be: [history, initialFirstPlayerID, initialSecondPlayerID, leagueName]",{"range":"235","text":"236"},"Update the dependencies array to be: [btnLabel, location.pathname, type]",{"range":"237","text":"238"},"Update the dependencies array to be: [season, battingStat, oppositionOption, leagueName]",{"range":"239","text":"240"},"Update the dependencies array to be: [season, bowlingStat, oppositionOption, leagueName]",{"range":"241","text":"242"},[2136,2260],"[firstPlayer, secondPlayer, battingSeason, battingOpposition, bowlingSeason, bowlingOpposition, history]",[3196,3198],"[leagueName]",[4296,4341],"[history, initialFirstPlayerID, initialSecondPlayerID, leagueName]",[1216,1235],"[btnLabel, location.pathname, type]",[2801,2840],"[season, battingStat, oppositionOption, leagueName]",[2827,2866],"[season, bowlingStat, oppositionOption, leagueName]"]