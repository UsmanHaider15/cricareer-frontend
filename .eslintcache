[{"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js":"1","/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js":"2","/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js":"3","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx":"4","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx":"5","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js":"6","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx":"7","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TabPanel.jsx":"8","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TableView.jsx":"9","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/ChartView.jsx":"10","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/PlayerSearch.jsx":"11","/home/usman/Desktop/Cricareer/cricareer-frontend/src/data/data.js":"12","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/AveragesTable.jsx":"13","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/EnhancedTableHead.jsx":"14","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerProfile.jsx":"15","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBattingAverages.jsx":"16","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBowlingAverages.jsx":"17","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/IccPlayersBattingAveragesComparison.jsx":"18","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/IccPlayersBowlingAveragesComparison.jsx":"19","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/MenuToolbar.jsx":"20","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ProfileMenu.jsx":"21","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ComparisonMenu.jsx":"22","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerBattingAverages.jsx":"23","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerBowlingAverages.jsx":"24","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerProfiles.jsx":"25","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersBattingAveragesComparison.jsx":"26","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersBowlingAveragesComparison.jsx":"27","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeagueCareerComparisons.jsx":"28","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersComparison.jsx":"29","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/MenuButton.jsx":"30","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/Home.jsx":"31"},{"size":613,"mtime":1616870646589,"results":"32","hashOfConfig":"33"},{"size":2434,"mtime":1616928059129,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1610861361319,"results":"35","hashOfConfig":"33"},{"size":5640,"mtime":1616886419605,"results":"36","hashOfConfig":"33"},{"size":646,"mtime":1615115850226,"results":"37","hashOfConfig":"33"},{"size":150,"mtime":1611167234492,"results":"38","hashOfConfig":"33"},{"size":2270,"mtime":1614464486560,"results":"39","hashOfConfig":"33"},{"size":382,"mtime":1611417644481,"results":"40","hashOfConfig":"33"},{"size":1639,"mtime":1614464960760,"results":"41","hashOfConfig":"33"},{"size":1037,"mtime":1611432683752,"results":"42","hashOfConfig":"33"},{"size":1986,"mtime":1614457343240,"results":"43","hashOfConfig":"33"},{"size":3813,"mtime":1616797310735,"results":"44","hashOfConfig":"33"},{"size":3107,"mtime":1614804930728,"results":"45","hashOfConfig":"33"},{"size":1965,"mtime":1615112155298,"results":"46","hashOfConfig":"33"},{"size":4308,"mtime":1616886681108,"results":"47","hashOfConfig":"33"},{"size":3520,"mtime":1615141694529,"results":"48","hashOfConfig":"33"},{"size":3226,"mtime":1615141524509,"results":"49","hashOfConfig":"33"},{"size":4572,"mtime":1616885708391,"results":"50","hashOfConfig":"33"},{"size":4649,"mtime":1616885732267,"results":"51","hashOfConfig":"33"},{"size":1239,"mtime":1616870513069,"results":"52","hashOfConfig":"33"},{"size":1946,"mtime":1616883375978,"results":"53","hashOfConfig":"33"},{"size":2214,"mtime":1616884162815,"results":"54","hashOfConfig":"33"},{"size":3246,"mtime":1616795592528,"results":"55","hashOfConfig":"33"},{"size":3278,"mtime":1616795592536,"results":"56","hashOfConfig":"33"},{"size":4887,"mtime":1616886732558,"results":"57","hashOfConfig":"33"},{"size":4899,"mtime":1616885910848,"results":"58","hashOfConfig":"33"},{"size":4899,"mtime":1616885551530,"results":"59","hashOfConfig":"33"},{"size":749,"mtime":1616795962540,"results":"60","hashOfConfig":"33"},{"size":6474,"mtime":1616886213919,"results":"61","hashOfConfig":"33"},{"size":415,"mtime":1616870295819,"results":"62","hashOfConfig":"33"},{"size":1711,"mtime":1616928711546,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1xm0vh1",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js",[],["141","142"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx",["143","144"],"import PlayerSearch from \"./PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router\";\nimport IccCareerComparisons from \"./IccCareerComparisons\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nconst IccPlayerComparison = ({ history }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [firstPlayer, setFirstPlayer] = useState({});\n  const [secondPlayer, setSecondPlayer] = useState({});\n  const [firstRef, firstLoaded, firstOnLoad] = useImageLoaded();\n  const [secondRef, secondLoaded, secondOnLoad] = useImageLoaded();\n\n  useEffect(() => {\n    if (Object.keys(firstPlayer).length && Object.keys(secondPlayer).length) {\n      history.push({\n        pathname: \"\",\n        search: `first_player_id=${firstPlayer.player_id}&second_player_id=${secondPlayer.player_id}`,\n      });\n    }\n  }, [firstPlayer, secondPlayer]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/get_players_list\", {\n        params: {\n          limit: 100,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const player_ids = qs.parse(history.location.search.substring(1));\n    const first_player_id = player_ids.first_player_id\n      ? player_ids.first_player_id\n      : 253802;\n    const second_player_id = player_ids.second_player_id\n      ? player_ids.second_player_id\n      : 348144;\n\n    axios\n      .get(`http://localhost:3001/get_player_by_id`, {\n        params: {\n          player_id: first_player_id,\n        },\n      })\n      .then(function (response) {\n        setFirstPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    axios\n      .get(`http://localhost:3001/get_player_by_id`, {\n        params: {\n          player_id: second_player_id,\n        },\n      })\n      .then(function (response) {\n        setSecondPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    history.push({\n      // pathname: \"\",\n      search: `first_player_id=${first_player_id}&second_player_id=${second_player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player, isFirst) => {\n    if (isFirst) {\n      setFirstPlayer(player);\n    } else {\n      setSecondPlayer(player);\n    }\n  };\n\n  return (\n    <div>\n      <Grid container style={{ paddingTop: 10 }} spacing={1}>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={firstPlayer}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={secondPlayer}\n            isFirst={false}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={firstRef}\n              onLoad={firstOnLoad}\n              src={\n                firstPlayer.player_image_url\n                  ? firstPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: firstLoaded ? \"block\" : \"none\",\n              }}\n            />\n            {!firstLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={secondRef}\n              onLoad={secondOnLoad}\n              src={\n                secondPlayer.player_image_url\n                  ? secondPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: secondLoaded ? \"block\" : \"none\",\n              }}\n            />\n\n            {!secondLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        {firstPlayer.player_id && secondPlayer.player_id ? (\n          <IccCareerComparisons\n            firstPlayer={firstPlayer}\n            secondPlayer={secondPlayer}\n          />\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(IccPlayerComparison);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx",[],["145","146"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TabPanel.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TableView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/ChartView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/PlayerSearch.jsx",["147"],"/* eslint-disable no-use-before-define */\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function PlayerSearch({\n  InitialPlayersList,\n  setSelectedPlayer,\n  player,\n  isFirst = true,\n  url = \"http://localhost:3001/search_player_by_name\",\n  league_name = \"psl\",\n}) {\n  const [searchedPlayersList, setSearchedPlayersList] = useState([]);\n  const [searchStr, setSearchStr] = useState(\"\");\n\n  useEffect(() => {\n    if (searchStr) {\n      axios\n        .get(url, {\n          params: {\n            player_name: searchStr,\n            league_name,\n          },\n        })\n        .then(function (response) {\n          setSearchedPlayersList(response.data.rows);\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n    }\n  }, [searchStr]);\n\n  return (\n    <div>\n      <Autocomplete\n        value={player}\n        disableClearable={true}\n        // id=\"combo-box-demo\"\n        options={\n          searchedPlayersList.length ? searchedPlayersList : InitialPlayersList\n        }\n        getOptionLabel={(option) => option.player_name}\n        getOptionSelected={(option, value) => {\n          if (option.player_name === value.player_name) {\n            setSelectedPlayer(value, isFirst);\n          }\n          return true;\n        }}\n        onInputChange={(event, value, reason) => {\n          return reason === \"input\" && setSearchStr(value);\n        }}\n        onChange={(event, value, reason) => {\n          if (reason === \"select-option\") {\n            setSelectedPlayer(value, isFirst);\n          }\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search Player\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        )}\n      />\n    </div>\n  );\n}\n\n//\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/data/data.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/AveragesTable.jsx",["148","149"],"import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    // minWidth: 750,\n  },\n\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst AveragesTable = ({ rows, columnNamesLookup }) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"opposition_team\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={\"small\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              columnNamesLookup={columnNamesLookup}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy)).map(\n                (row, index) => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.opposition_team}>\n                      {Object.values(row).map((col_val, index) => (\n                        <TableCell align=\"left\">{col_val}</TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                }\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n};\n\nexport default AveragesTable;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/EnhancedTableHead.jsx",["150"],"import React from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport PropTypes from \"prop-types\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport humanify from \"../../Utils/humanify\";\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort, columnNamesLookup } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  const headCells = Object.entries(columnNamesLookup).map(([key, value]) => ({\n    id: key,\n    numeric: false,\n    disablePadding: true,\n    label: value,\n  }));\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell, index) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"left\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n            // {...(index ? {} : { style: { paddingLeft: 15, paddingRight: 70 } })}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              <b>{headCell.label}</b>\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n};\n\nexport default EnhancedTableHead;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerProfile.jsx",["151","152"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport PlayerSearch from \"../PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport IccPlayerBattingAverages from \"./IccPlayerBattingAverages\";\nimport IccPlayerBowlingAverages from \"./IccPlayerBowlingAverages\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nconst IccPlayerProfile = ({ history }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [player, setPlayer] = useState({});\n  const [ref, loaded, onLoad] = useImageLoaded();\n\n  useEffect(() => {\n    if (Object.keys(player).length) {\n      history.push({\n        pathname: \"\",\n        search: `player_id=${player.player_id}`,\n      });\n    }\n  }, [player]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/get_players_list\", {\n        params: {\n          limit: 100,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const url_id = qs.parse(history.location.search.substring(1));\n    const player_id = url_id.player_id ? url_id.player_id : 253802;\n\n    axios\n      .get(`http://localhost:3001/get_player_by_id`, {\n        params: {\n          player_id: player_id,\n        },\n      })\n      .then(function (response) {\n        setPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    history.push({\n      // pathname: \"\",\n      search: `player_id=${player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player) => {\n    setPlayer(player);\n  };\n\n  return (\n    <div>\n      <Grid container style={{ paddingTop: 10 }} spacing={1}>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <PlayerSearch\n              InitialPlayersList={initialPlayersList}\n              setSelectedPlayer={handleSelectedPlayer}\n              player={player}\n              url=\"http://localhost:3001/search_player_by_name\"\n            />\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                paddingTop: 10,\n              }}\n            >\n              <img\n                ref={ref}\n                onLoad={onLoad}\n                src={\n                  player.player_image_url\n                    ? player.player_image_url\n                    : \"/default-user.jpg\"\n                }\n                alt=\"\"\n                style={{\n                  flexShrink: 0,\n                  minWidth: \"60%\",\n                  display: loaded ? \"block\" : \"none\",\n                }}\n              />\n              {!loaded ? <CircularProgress /> : null}\n            </div>\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n        <Grid item xs={12} style={{ padding: \"10px 0px\" }}>\n          <Typography variant=\"h5\" align=\"left\" style={{ paddingBottom: 10 }}>\n            Batting Averages\n          </Typography>\n          {Object.keys(player).length ? (\n            <IccPlayerBattingAverages player={player} />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} style={{ padding: \"10px 0px\" }}>\n          <Typography variant=\"h5\" align=\"left\" style={{ paddingBottom: 10 }}>\n            Bowling Averages\n          </Typography>\n          {Object.keys(player).length ? (\n            <IccPlayerBowlingAverages player={player} />\n          ) : null}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(IccPlayerProfile);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBattingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBowlingAverages.jsx",["153"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  icc_teams_lookup,\n  icc_bowling_table_column_name_lookup,\n} from \"../../data/data\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport AveragesTable from \"../common/AveragesTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst IccPlayerBowlingAverages = ({ player }) => {\n  const classes = useStyles();\n\n  const [oppositionOption, setOppositionOption] = React.useState(\"all_teams\");\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n  const [bowlingAverages, setBowlingAverages] = useState([]);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    console.log(\"player\", player[\"player_id\"]);\n    axios\n      .get(\"http://localhost:3001/icc_profile/icc_career_averages\", {\n        params: {\n          player_id: player[\"player_id\"],\n          opposition_team: oppositionOption,\n          type: \"bowling\",\n        },\n      })\n      .then(function (response) {\n        const data = response.data.rows;\n        console.log(\"data\", data);\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, Object.keys(icc_bowling_table_column_name_lookup))\n        );\n\n        setBowlingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, oppositionOption]);\n\n  return (\n    <Grid container>\n      <Grid item>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {Object.entries(icc_teams_lookup).map(([value, label]) => (\n              <MenuItem value={value}>{label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        {Object.keys(bowlingAverages).length ? (\n          <AveragesTable\n            rows={bowlingAverages}\n            columnNamesLookup={icc_bowling_table_column_name_lookup}\n          />\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default IccPlayerBowlingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/IccPlayersBattingAveragesComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/IccPlayersBowlingAveragesComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/MenuToolbar.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ProfileMenu.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ComparisonMenu.jsx",["154","155"],"import React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport humanify from \"../Utils/humanify\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuButton from \"./common/MenuButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: \"white\",\n  },\n}));\n\nexport default function ComparisonMenu() {\n  const classes = useStyles();\n  const location = useLocation();\n  const [btnLabel, setBtnLabel] = React.useState(\"Select Comparison\");\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    if (!location.pathname.includes(\"comparisons\")) {\n      setBtnLabel(\"Select Comparison\");\n    } else {\n      const btnLabel = humanify(location.pathname.split(\"/\").pop());\n      setBtnLabel(btnLabel);\n    }\n  }, [location.pathname]);\n\n  return (\n    <div>\n      <MenuButton\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        {btnLabel}\n      </MenuButton>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem\n          onClick={() => {\n            setBtnLabel(\"Icc Comparison\");\n            handleClose();\n          }}\n        >\n          <Link to=\"/comparisons/icc_comparison\">ICC Player comparisons</Link>\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setBtnLabel(\"Psl Comparison\");\n            handleClose();\n          }}\n        >\n          <Link to=\"/comparisons/psl_comparison\">PSL Player comparisons</Link>\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            setBtnLabel(\"Ipl Comparison\");\n            handleClose();\n          }}\n        >\n          <Link to=\"/comparisons/ipl_comparison\">IPL Player comparisons</Link>\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerBattingAverages.jsx",["156"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport AveragesTable from \"../common/AveragesTable\";\nimport _ from \"lodash\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { league_batting_table_column_name_lookup } from \"../../data/data\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayerBattingAverages = ({ player, leagueName }) => {\n  const classes = useStyles();\n  const [battingAverages, setBattingAverages] = useState([]);\n  const [option, setOption] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setOption(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\n        \"http://localhost:3001/league_player_profile/get_player_batting_averages\",\n        {\n          params: {\n            player_id: player.player_id,\n            season_number: option,\n            league_name: leagueName,\n          },\n        }\n      )\n      .then(function (response) {\n        const data = response.data.rows;\n\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, [\n            \"opposition_team\",\n            \"innings_played\",\n            \"not_outs\",\n            \"runs_scored\",\n            \"highest_inns_score\",\n            \"batting_average\",\n            \"balls_faced\",\n            \"batting_strike_rate\",\n            \"hundreds_scored\",\n            \"fifties_scored\",\n            \"boundary_fours\",\n            \"boundary_sixes\",\n          ])\n        );\n\n        setBattingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, option]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Option</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={option}\n            onChange={handleChange}\n            label=\"Option\"\n            className={classes.root}\n          >\n            {[0, 5, 4, 3, 2, 1].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      {battingAverages.length ? (\n        <AveragesTable\n          rows={battingAverages}\n          columnNamesLookup={league_batting_table_column_name_lookup}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default LeaguePlayerBattingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerBowlingAverages.jsx",["157"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport AveragesTable from \"../common/AveragesTable\";\nimport _ from \"lodash\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { league_bowling_table_column_to_label_lookup } from \"../../data/data\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayerBowlingAverages = ({ player, leagueName }) => {\n  const classes = useStyles();\n  const [bowlingAverages, setBowlingAverages] = useState([]);\n  const [option, setOption] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setOption(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\n        \"http://localhost:3001/league_player_profile/get_player_bowling_averages\",\n        {\n          params: {\n            player_id: player.player_id,\n            season_number: option,\n            league_name: leagueName,\n          },\n        }\n      )\n      .then(function (response) {\n        const data = response.data.rows;\n\n        const modifiedData = data.map((obj) =>\n          _.pick(obj, [\n            \"opposition_team\",\n            \"innings_played\",\n            \"balls_bowled\",\n            \"runs_conceded\",\n            \"wickets_taken\",\n            \"best_innings_bowling\",\n            \"bowling_average\",\n            \"economy_rate\",\n            \"bowling_strike_rate\",\n            \"five_wkts_in_an_inns\",\n            \"four_wkts_in_an_inns\",\n            \"ten_wkts_in_an_inns\",\n          ])\n        );\n\n        setBowlingAverages(modifiedData);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, [player.player_id, option]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Option</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={option}\n            onChange={handleChange}\n            label=\"Option\"\n            className={classes.root}\n          >\n            {[0, 5, 4, 3, 2, 1].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      {bowlingAverages.length ? (\n        <AveragesTable\n          rows={bowlingAverages}\n          columnNamesLookup={league_bowling_table_column_to_label_lookup}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default LeaguePlayerBowlingAverages;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/LeaguePlayerProfiles.jsx",["158","159"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport PlayerSearch from \"../PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LeaguePlayerBattingAverages from \"./LeaguePlayerBattingAverages\";\nimport LeaguePlayerBowlingAverages from \"./LeaguePlayerBowlingAverages\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst LeaguePlayerProfiles = ({ history, leagueName, initialPlayerID }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [player, setPlayer] = useState({});\n  const [ref, loaded, onLoad] = useImageLoaded();\n  const prevLeagueName = usePrevious(leagueName);\n\n  if (prevLeagueName && leagueName !== prevLeagueName) {\n    window.location.reload();\n  }\n  useEffect(() => {\n    if (Object.keys(player).length) {\n      history.push({\n        pathname: \"\",\n        search: `player_id=${player.player_id}`,\n      });\n    }\n  }, [player]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/league_player_profile/get_players_list\", {\n        params: {\n          limit: 100,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const url_id = qs.parse(history.location.search.substring(1));\n    const player_id = url_id.player_id ? url_id.player_id : initialPlayerID;\n\n    axios\n      .get(`http://localhost:3001/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    history.push({\n      // pathname: \"\",\n      search: `player_id=${player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player) => {\n    setPlayer(player);\n  };\n\n  return (\n    <div>\n      <Grid container style={{ paddingTop: 10 }} spacing={1}>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <PlayerSearch\n              InitialPlayersList={initialPlayersList}\n              setSelectedPlayer={handleSelectedPlayer}\n              player={player}\n              url=\"http://localhost:3001/league_player_profile/search_player_by_name\"\n              league_name={leagueName}\n            />\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs={3}></Grid>\n          <Grid item xs={6}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                paddingTop: 10,\n              }}\n            >\n              <img\n                ref={ref}\n                onLoad={onLoad}\n                src={\n                  player.player_image_url\n                    ? player.player_image_url\n                    : \"/default-user.jpg\"\n                }\n                alt=\"\"\n                style={{\n                  display: loaded ? \"block\" : \"none\",\n                }}\n              />\n              {!loaded ? <CircularProgress /> : null}\n            </div>\n          </Grid>\n          <Grid item xs={3}></Grid>\n        </Grid>\n\n        <Grid item xs={12} style={{ padding: \"10px 0px\" }}>\n          <Typography variant=\"h5\" align=\"left\" style={{ paddingBottom: 10 }}>\n            Batting Averages\n          </Typography>\n          {Object.keys(player).length > 0 ? (\n            <LeaguePlayerBattingAverages\n              leagueName={leagueName}\n              player={player}\n            />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} style={{ padding: \"10px 0px\" }}>\n          <Typography variant=\"h5\" align=\"left\" style={{ paddingBottom: 10 }}>\n            Bowling Averages\n          </Typography>\n          {Object.keys(player).length > 0 ? (\n            <LeaguePlayerBowlingAverages\n              leagueName={leagueName}\n              player={player}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(LeaguePlayerProfiles);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersBattingAveragesComparison.jsx",["160"],"import React, { useEffect } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport TableView from \"../common/TableView\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { league_teams, league_seasons } from \"../../data/data\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayersBattingAveragesComparison = ({\n  firstPlayer,\n  secondPlayer,\n  leagueName,\n}) => {\n  const classes = useStyles();\n  const [chartData, setChartData] = React.useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const [seasonOption, setSeasonOption] = React.useState(0);\n  const [seasonMenuOpen, setSeasonMenuOpen] = React.useState(false);\n\n  const handleSeasonChange = (event) => {\n    setSeasonOption(event.target.value);\n  };\n\n  const handleSeasonMenuClose = () => {\n    setSeasonMenuOpen(false);\n  };\n\n  const handleSeasonMenuOpen = () => {\n    setSeasonMenuOpen(true);\n  };\n\n  const [oppositionOption, setOppositionOption] = React.useState(\"All Teams\");\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:3001/league_player_comparison/career_averages_comparison`,\n        {\n          params: {\n            first_player_id: firstPlayer.player_id,\n            second_player_id: secondPlayer.player_id,\n            season_number: seasonOption,\n            opposition_team: oppositionOption,\n            league_name: leagueName,\n            type: \"batting\",\n          },\n        }\n      )\n      .then(function ({ data }) {\n        const { first_player, second_player } = data;\n\n        setChartData({ first_player, second_player });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [\n    seasonOption,\n    oppositionOption,\n    firstPlayer.player_id,\n    secondPlayer.player_id,\n  ]);\n\n  return (\n    <Grid container>\n      <div>\n        <Typography variant=\"h5\" align=\"left\" style={{ paddingBottom: 10 }}>\n          Batting Averages Comparison\n        </Typography>\n      </div>\n      <div>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={seasonMenuOpen}\n            onClose={handleSeasonMenuClose}\n            onOpen={handleSeasonMenuOpen}\n            value={seasonOption}\n            onChange={handleSeasonChange}\n            label=\"Season\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {league_teams[leagueName].map((value) => (\n              <MenuItem value={value}>{value}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      <div\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          borderRadius: \"10px 10px 10px 10px\",\n          padding: 8,\n          marginBottom: 20,\n          width: \"100%\",\n        }}\n      >\n        <TableView\n          data={chartData}\n          excludedKeys={[\"player_id\", \"season_number\", \"opposition_team\"]}\n        />\n      </div>\n    </Grid>\n  );\n};\n\nexport default LeaguePlayersBattingAveragesComparison;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersBowlingAveragesComparison.jsx",["161"],"import React, { useEffect } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport TableView from \"../common/TableView\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { league_teams, league_seasons } from \"../../data/data\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nconst LeaguePlayersBowlingAveragesComparison = ({\n  firstPlayer,\n  secondPlayer,\n  leagueName,\n}) => {\n  const classes = useStyles();\n  const [chartData, setChartData] = React.useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const [seasonOption, setSeasonOption] = React.useState(0);\n  const [seasonMenuOpen, setSeasonMenuOpen] = React.useState(false);\n\n  const handleSeasonChange = (event) => {\n    setSeasonOption(event.target.value);\n  };\n\n  const handleSeasonMenuClose = () => {\n    setSeasonMenuOpen(false);\n  };\n\n  const handleSeasonMenuOpen = () => {\n    setSeasonMenuOpen(true);\n  };\n\n  const [oppositionOption, setOppositionOption] = React.useState(\"All Teams\");\n  const [oppositionMenuOpen, setOppositionMenuOpen] = React.useState(false);\n\n  const handleOppositionChange = (event) => {\n    setOppositionOption(event.target.value);\n  };\n\n  const handleOppositionMenuClose = () => {\n    setOppositionMenuOpen(false);\n  };\n\n  const handleOppositionMenuOpen = () => {\n    setOppositionMenuOpen(true);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:3001/league_player_comparison/career_averages_comparison`,\n        {\n          params: {\n            first_player_id: firstPlayer.player_id,\n            second_player_id: secondPlayer.player_id,\n            season_number: seasonOption,\n            opposition_team: oppositionOption,\n            league_name: leagueName,\n            type: \"bowling\",\n          },\n        }\n      )\n      .then(function ({ data }) {\n        const { first_player, second_player } = data;\n\n        setChartData({ first_player, second_player });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [\n    seasonOption,\n    oppositionOption,\n    firstPlayer.player_id,\n    secondPlayer.player_id,\n  ]);\n\n  return (\n    <Grid container>\n      <div>\n        <Typography variant=\"h5\" align=\"left\" style={{ paddingBottom: 10 }}>\n          Bowling Averages Comparison\n        </Typography>\n      </div>\n      <div>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Season</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={seasonMenuOpen}\n            onClose={handleSeasonMenuClose}\n            onOpen={handleSeasonMenuOpen}\n            value={seasonOption}\n            onChange={handleSeasonChange}\n            label=\"Season\"\n            className={classes.root}\n          >\n            {[\n              0,\n              ...Array.from(\n                Array(league_seasons[leagueName]),\n                (x, i) => i + 1\n              ).reverse(),\n            ].map((value) => (\n              <MenuItem value={value}>\n                {value ? `${leagueName.toUpperCase()} ${value}` : \"All Seasons\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">\n            Opposition\n          </InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={oppositionMenuOpen}\n            onClose={handleOppositionMenuClose}\n            onOpen={handleOppositionMenuOpen}\n            value={oppositionOption}\n            onChange={handleOppositionChange}\n            label=\"Opposition\"\n            className={classes.root}\n          >\n            {league_teams[leagueName].map((value) => (\n              <MenuItem value={value}>{value}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      <div\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          borderRadius: \"10px 10px 10px 10px\",\n          padding: 8,\n          marginBottom: 20,\n          width: \"100%\",\n        }}\n      >\n        <TableView\n          data={chartData}\n          excludedKeys={[\"player_id\", \"season_number\", \"opposition_team\"]}\n        />\n      </div>\n    </Grid>\n  );\n};\n\nexport default LeaguePlayersBowlingAveragesComparison;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeagueCareerComparisons.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/LeaguePlayersComparison.jsx",["162","163"],"import PlayerSearch from \"../PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router\";\nimport LeagueCareerComparisons from \"./LeagueCareerComparisons\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst LeaguePlayersComparison = ({\n  history,\n  leagueName,\n  initialFirstPlayerID,\n  initialSecondPlayerID,\n}) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [firstPlayer, setFirstPlayer] = useState({});\n  const [secondPlayer, setSecondPlayer] = useState({});\n  const [firstRef, firstLoaded, firstOnLoad] = useImageLoaded();\n  const [secondRef, secondLoaded, secondOnLoad] = useImageLoaded();\n  const prevLeagueName = usePrevious(leagueName);\n\n  if (prevLeagueName && leagueName !== prevLeagueName) {\n    window.location.reload();\n  }\n\n  useEffect(() => {\n    if (Object.keys(firstPlayer).length && Object.keys(secondPlayer).length) {\n      history.push({\n        pathname: \"\",\n        search: `first_player_id=${firstPlayer.player_id}&second_player_id=${secondPlayer.player_id}`,\n      });\n    }\n  }, [firstPlayer, secondPlayer]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/league_player_profile/get_players_list\", {\n        params: {\n          limit: 100,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const player_ids = qs.parse(history.location.search.substring(1));\n    const first_player_id = player_ids.first_player_id\n      ? player_ids.first_player_id\n      : initialFirstPlayerID;\n    const second_player_id = player_ids.second_player_id\n      ? player_ids.second_player_id\n      : initialSecondPlayerID;\n\n    axios\n      .get(`http://localhost:3001/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: first_player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setFirstPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    axios\n      .get(`http://localhost:3001/league_player_profile/get_player_by_id`, {\n        params: {\n          player_id: second_player_id,\n          league_name: leagueName,\n        },\n      })\n      .then(function (response) {\n        setSecondPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    history.push({\n      // pathname: \"\",\n      search: `first_player_id=${first_player_id}&second_player_id=${second_player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player, isFirst) => {\n    if (isFirst) {\n      setFirstPlayer(player);\n    } else {\n      setSecondPlayer(player);\n    }\n  };\n\n  return (\n    <div>\n      <Grid container style={{ paddingTop: 10 }} spacing={1}>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={firstPlayer}\n            url=\"http://localhost:3001/league_player_profile/search_player_by_name\"\n            league_name={leagueName}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={secondPlayer}\n            isFirst={false}\n            url=\"http://localhost:3001/league_player_profile/search_player_by_name\"\n            league_name={leagueName}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={firstRef}\n              onLoad={firstOnLoad}\n              src={\n                firstPlayer.player_image_url\n                  ? firstPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: firstLoaded ? \"block\" : \"none\",\n              }}\n            />\n            {!firstLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={secondRef}\n              onLoad={secondOnLoad}\n              src={\n                secondPlayer.player_image_url\n                  ? secondPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: secondLoaded ? \"block\" : \"none\",\n              }}\n            />\n\n            {!secondLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        {firstPlayer.player_id && secondPlayer.player_id ? (\n          <LeagueCareerComparisons\n            firstPlayer={firstPlayer}\n            secondPlayer={secondPlayer}\n            leagueName={leagueName}\n          />\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(LeaguePlayersComparison);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/MenuButton.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/Home.jsx",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":43,"column":6,"nodeType":"170","endLine":43,"endColumn":33,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"169","line":99,"column":6,"nodeType":"170","endLine":99,"endColumn":8,"suggestions":"172"},{"ruleId":"164","replacedBy":"173"},{"ruleId":"166","replacedBy":"174"},{"ruleId":"168","severity":1,"message":"175","line":37,"column":6,"nodeType":"170","endLine":37,"endColumn":17,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":10,"column":8,"nodeType":"179","messageId":"180","endLine":10,"endColumn":24},{"ruleId":"177","severity":1,"message":"181","line":11,"column":8,"nodeType":"179","messageId":"180","endLine":11,"endColumn":14},{"ruleId":"177","severity":1,"message":"182","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":16},{"ruleId":"168","severity":1,"message":"169","line":43,"column":6,"nodeType":"170","endLine":43,"endColumn":14,"suggestions":"183"},{"ruleId":"168","severity":1,"message":"169","line":82,"column":6,"nodeType":"170","endLine":82,"endColumn":8,"suggestions":"184"},{"ruleId":"168","severity":1,"message":"185","line":71,"column":6,"nodeType":"170","endLine":71,"endColumn":42,"suggestions":"186"},{"ruleId":"177","severity":1,"message":"187","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"188","line":18,"column":9,"nodeType":"179","messageId":"180","endLine":18,"endColumn":16},{"ruleId":"168","severity":1,"message":"189","line":78,"column":6,"nodeType":"170","endLine":78,"endColumn":32,"suggestions":"190"},{"ruleId":"168","severity":1,"message":"189","line":78,"column":6,"nodeType":"170","endLine":78,"endColumn":32,"suggestions":"191"},{"ruleId":"168","severity":1,"message":"169","line":55,"column":6,"nodeType":"170","endLine":55,"endColumn":14,"suggestions":"192"},{"ruleId":"168","severity":1,"message":"193","line":96,"column":6,"nodeType":"170","endLine":96,"endColumn":8,"suggestions":"194"},{"ruleId":"168","severity":1,"message":"189","line":88,"column":6,"nodeType":"170","endLine":93,"endColumn":4,"suggestions":"195"},{"ruleId":"168","severity":1,"message":"189","line":88,"column":6,"nodeType":"170","endLine":93,"endColumn":4,"suggestions":"196"},{"ruleId":"168","severity":1,"message":"169","line":61,"column":6,"nodeType":"170","endLine":61,"endColumn":33,"suggestions":"197"},{"ruleId":"168","severity":1,"message":"198","line":120,"column":6,"nodeType":"170","endLine":120,"endColumn":8,"suggestions":"199"},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["202"],["203"],["200"],["201"],"React Hook useEffect has missing dependencies: 'league_name' and 'url'. Either include them or remove the dependency array.",["204"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'humanify' is defined but never used.",["205"],["206"],"React Hook useEffect has a missing dependency: 'player'. Either include it or remove the dependency array.",["207"],"'Button' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'leagueName'. Either include it or remove the dependency array.",["208"],["209"],["210"],"React Hook useEffect has missing dependencies: 'history', 'initialPlayerID', and 'leagueName'. Either include them or remove the dependency array.",["211"],["212"],["213"],["214"],"React Hook useEffect has missing dependencies: 'history', 'initialFirstPlayerID', 'initialSecondPlayerID', and 'leagueName'. Either include them or remove the dependency array.",["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"218","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"227","fix":"229"},{"desc":"222","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"233","fix":"235"},{"desc":"216","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [firstPlayer, history, secondPlayer]",{"range":"239","text":"240"},"Update the dependencies array to be: [history]",{"range":"241","text":"242"},"Update the dependencies array to be: [league_name, searchStr, url]",{"range":"243","text":"244"},"Update the dependencies array to be: [history, player]",{"range":"245","text":"246"},{"range":"247","text":"242"},"Update the dependencies array to be: [player.player_id, oppositionOption, player]",{"range":"248","text":"249"},"Update the dependencies array to be: [player.player_id, option, leagueName]",{"range":"250","text":"251"},{"range":"252","text":"251"},{"range":"253","text":"246"},"Update the dependencies array to be: [history, initialPlayerID, leagueName]",{"range":"254","text":"255"},"Update the dependencies array to be: [seasonOption, oppositionOption, firstPlayer.player_id, secondPlayer.player_id, leagueName]",{"range":"256","text":"257"},{"range":"258","text":"257"},{"range":"259","text":"240"},"Update the dependencies array to be: [history, initialFirstPlayerID, initialSecondPlayerID, leagueName]",{"range":"260","text":"261"},[1309,1336],"[firstPlayer, history, secondPlayer]",[2748,2750],"[history]",[974,985],"[league_name, searchStr, url]",[1200,1208],"[history, player]",[2106,2108],[2027,2063],"[player.player_id, oppositionOption, player]",[2090,2116],"[player.player_id, option, leagueName]",[2118,2144],[1516,1524],[2545,2547],"[history, initialPlayerID, leagueName]",[2419,2519],"[seasonOption, oppositionOption, firstPlayer.player_id, secondPlayer.player_id, leagueName]",[2419,2519],[1658,1685],[3297,3299],"[history, initialFirstPlayerID, initialSecondPlayerID, leagueName]"]