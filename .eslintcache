[{"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js":"1","/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js":"2","/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js":"3","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx":"4","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ComboBox.jsx":"5","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx":"6","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingAveragesComparison.jsx":"7","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js":"8","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparison.jsx":"9","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparisonChart.jsx":"10","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx":"11"},{"size":593,"mtime":1610989760186,"results":"12","hashOfConfig":"13"},{"size":211,"mtime":1610996996277,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610861361319,"results":"15","hashOfConfig":"13"},{"size":5458,"mtime":1611075438902,"results":"16","hashOfConfig":"13"},{"size":1914,"mtime":1611000245998,"results":"17","hashOfConfig":"13"},{"size":2703,"mtime":1611331885478,"results":"18","hashOfConfig":"13"},{"size":4215,"mtime":1611243433071,"results":"19","hashOfConfig":"13"},{"size":150,"mtime":1611167234492,"results":"20","hashOfConfig":"13"},{"size":5754,"mtime":1611349814375,"results":"21","hashOfConfig":"13"},{"size":1135,"mtime":1611334040880,"results":"22","hashOfConfig":"13"},{"size":2577,"mtime":1611352377860,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1xm0vh1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js",[],["51","52"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx",["53","54"],"import ComboBox from \"./ComboBox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router\";\nimport qs from \"qs\";\nimport IccCareerComparisons from \"./IccCareerComparisons\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nconst IccPlayerComparison = ({ history }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [firstPlayer, setFirstPlayer] = useState({});\n  const [secondPlayer, setSecondPlayer] = useState({});\n  const [firstRef, firstLoaded, firstOnLoad] = useImageLoaded();\n  const [secondRef, secondLoaded, secondOnLoad] = useImageLoaded();\n\n  useEffect(() => {\n    if (Object.keys(firstPlayer).length && Object.keys(secondPlayer).length) {\n      history.push({\n        pathname: \"\",\n        search: `first_player_id=${firstPlayer.player_id}&second_player_id=${secondPlayer.player_id}`,\n      });\n    }\n  }, [firstPlayer, secondPlayer]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/get_players_list\", {\n        params: {\n          limit: 100,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const player_ids = qs.parse(history.location.search.substring(1));\n    const first_player_id = player_ids.first_player_id\n      ? player_ids.first_player_id\n      : 253802;\n    const second_player_id = player_ids.second_player_id\n      ? player_ids.second_player_id\n      : 348144;\n\n    axios\n      .get(`http://localhost:3001/get_player_by_id`, {\n        params: {\n          player_id: first_player_id,\n        },\n      })\n      .then(function (response) {\n        setFirstPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    axios\n      .get(`http://localhost:3001/get_player_by_id`, {\n        params: {\n          player_id: second_player_id,\n        },\n      })\n      .then(function (response) {\n        setSecondPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    history.push({\n      // pathname: \"\",\n      search: `first_player_id=${first_player_id}&second_player_id=${second_player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player, isFirst) => {\n    if (isFirst) {\n      setFirstPlayer(player);\n    } else {\n      setSecondPlayer(player);\n    }\n  };\n\n  return (\n    <div>\n      <Grid container style={{ paddingTop: 10 }} spacing={1}>\n        <Grid item xs={6}>\n          <ComboBox\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={firstPlayer}\n            isFirst={true}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <ComboBox\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={secondPlayer}\n            isFirst={false}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={firstRef}\n              onLoad={firstOnLoad}\n              src={\n                firstPlayer.avatar_url\n                  ? firstPlayer.avatar_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: firstLoaded ? \"block\" : \"none\",\n              }}\n            />\n            {!firstLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={secondRef}\n              onLoad={secondOnLoad}\n              src={\n                secondPlayer.avatar_url\n                  ? secondPlayer.avatar_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: secondLoaded ? \"block\" : \"none\",\n              }}\n            />\n\n            {!secondLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <IccCareerComparisons />\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(IccPlayerComparison);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ComboBox.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingAveragesComparison.jsx",["55"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport humanify from \"../Utils/humanify\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n    // marginTop: theme.spacing(2),\n  },\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 100,\n  },\n}));\n\nexport default function IccBattingAveragesComparison() {\n  const classes = useStyles();\n  const [format, setFormat] = React.useState(\"ODIs\");\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = useState({ first_player: {}, second_player: {} });\n\n  const formatOptions = [\"ODIs\", \"T20Is\", \"T20s\", \"Tests\"];\n  const handleChange = (event) => {\n    setFormat(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3001/icc_comparison/batting_averages_comparison`, {\n        params: {\n          first_player_id: 253802,\n          second_player_id: 348144,\n          format,\n        },\n      })\n      .then(function (response) {\n        setData(response.data);\n        console.log(\"response\", response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [format]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Format</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={format}\n            onChange={handleChange}\n            label=\"Format\"\n            className={classes.root}\n          >\n            {formatOptions.map((option) => (\n              <MenuItem value={option}>{option}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <div\n        style={{\n          marginBottom: 20,\n        }}\n      >\n        <div>\n          {Object.keys(data.first_player)\n            .filter(\n              (key) =>\n                ![\"player_id\", \"match_type\", \"stumpings_made\"].includes(key)\n            )\n            .map((key) => (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  marginBottom: 2,\n                }}\n              >\n                <div\n                  style={{\n                    color: \"white\",\n                    backgroundColor: \"#ff2400\",\n                    flex: \"1 1 0\",\n                    borderBottomLeftRadius: 20,\n                    borderTopLeftRadius: 20,\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {data.first_player[key]}\n                </div>\n                <div\n                  style={{\n                    backgroundImage:\n                      \"linear-gradient(to right, #ff2400, #0073cf)\",\n                    color: \"white\",\n                    flex: \"2 1 0\",\n                    whiteSpace: \"nowrap\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  {humanify(key)}\n                </div>\n                <div\n                  style={{\n                    color: \"white\",\n                    backgroundColor: \"#0073cf\",\n                    flex: \"1 1 0\",\n                    borderTopRightRadius: 20,\n                    borderBottomRightRadius: 20,\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {data.second_player[key]}\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n",["56","57"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparison.jsx",["58","59","60","61"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport humanify from \"../Utils/humanify\";\nimport IccBattingFormatAveragesComparisonChart from \"./IccBattingFormatAveragesComparisonChart\";\nimport DataViewTabs from \"./DataViewTabs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nexport default function IccBattingFormatAveragesComparison() {\n  const classes = useStyles();\n  const [battingAverageOption, setBattingAverageOption] = React.useState({\n    label: \"Matches Played\",\n    value: \"matches_played\",\n  });\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = useState({ first_player: {}, second_player: {} });\n\n  const battingAverageOptions = [\n    { label: \"Matches Played\", value: \"matches_played\" },\n    { label: \"Innings Played\", value: \"innings_played\" },\n    { label: \"Not Outs\", value: \"not_outs\" },\n    { label: \"Runs Scored\", value: \"runs_scored\" },\n    { label: \"Highest Inns Score\", value: \"highest_inns_score\" },\n    { label: \"Batting Average\", value: \"batting_average\" },\n    { label: \"Balls Faced\", value: \"balls_faced\" },\n    { label: \"Batting Strike Rate\", value: \"batting_strike_rate\" },\n    { label: \"Hundreds Scored\", value: \"hundreds_scored\" },\n    { label: \"Fifties Scored\", value: \"fifties_scored\" },\n    { label: \"Boundary Fours\", value: \"boundary_fours\" },\n    { label: \"Boundary Sixes\", value: \"boundary_sixes\" },\n    { label: \"Catches Taken\", value: \"catches_taken\" },\n  ];\n\n  const handleChange = (event) => {\n    setBattingAverageOption({\n      label: humanify(event.target.value),\n      value: event.target.value,\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:3001/icc_comparison/batting_format_averages_comparison`,\n        {\n          params: {\n            first_player_id: 253802,\n            second_player_id: 348144,\n            battingAverageOption: battingAverageOption.value,\n          },\n        }\n      )\n      .then(function (response) {\n        const firstPlayer = {};\n        response.data.first_player.map((obj) => {\n          firstPlayer[obj[\"match_type\"]] = obj[battingAverageOption.value];\n        });\n        const secondPlayer = {};\n        response.data.second_player.map((obj) => {\n          secondPlayer[obj[\"match_type\"]] = obj[battingAverageOption.value];\n        });\n\n        const first_player = {};\n        const second_player = {};\n        [\"Tests\", \"ODIs\", \"T20Is\", \"T20s\"].map((format) => {\n          first_player[format] = firstPlayer[format];\n          second_player[format] = secondPlayer[format];\n        });\n\n        setData({ first_player, second_player });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [battingAverageOption.value]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Option</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={battingAverageOption.value}\n            onChange={handleChange}\n            label=\"Option\"\n            className={classes.root}\n          >\n            {battingAverageOptions.map((option) => (\n              <MenuItem value={option.value}>{option.label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      <div>\n        <div>\n          {Object.keys(data.first_player).map((format) => (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                marginBottom: 2,\n              }}\n            >\n              <div\n                style={{\n                  color: \"white\",\n                  backgroundColor: \"#ff2400\",\n                  flex: \"1 1 0\",\n                  borderBottomLeftRadius: 20,\n                  borderTopLeftRadius: 20,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {data.first_player[format]}\n              </div>\n              <div\n                style={{\n                  backgroundImage:\n                    \"linear-gradient(to right, #ff2400, #0073cf)\",\n                  color: \"white\",\n                  flex: \"2 1 0\",\n                  whiteSpace: \"nowrap\",\n                  fontWeight: \"bolder\",\n                }}\n              >\n                {humanify(format)}\n              </div>\n              <div\n                style={{\n                  color: \"white\",\n                  backgroundColor: \"#0073cf\",\n                  flex: \"1 1 0\",\n                  borderTopRightRadius: 20,\n                  borderBottomRightRadius: 20,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {data.second_player[format]}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div>\n          <IccBattingFormatAveragesComparisonChart chartData={data} />\n        </div>\n      </div>\n      <div>\n        <DataViewTabs />\n      </div>\n    </div>\n  );\n}\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparisonChart.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx",["62","63","64","65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":43,"column":6,"nodeType":"73","endLine":43,"endColumn":33,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"72","line":99,"column":6,"nodeType":"73","endLine":99,"endColumn":8,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":14},{"ruleId":"67","replacedBy":"80"},{"ruleId":"69","replacedBy":"81"},{"ruleId":"76","severity":1,"message":"77","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":77,"column":46,"nodeType":"84","messageId":"85","endLine":77,"endColumn":48},{"ruleId":"82","severity":1,"message":"83","line":81,"column":47,"nodeType":"84","messageId":"85","endLine":81,"endColumn":49},{"ruleId":"82","severity":1,"message":"83","line":87,"column":57,"nodeType":"84","messageId":"85","endLine":87,"endColumn":59},{"ruleId":"76","severity":1,"message":"86","line":9,"column":8,"nodeType":"78","messageId":"79","endLine":9,"endColumn":21},{"ruleId":"76","severity":1,"message":"87","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":16},{"ruleId":"76","severity":1,"message":"88","line":11,"column":8,"nodeType":"78","messageId":"79","endLine":11,"endColumn":22},{"ruleId":"76","severity":1,"message":"89","line":12,"column":8,"nodeType":"78","messageId":"79","endLine":12,"endColumn":17},{"ruleId":"76","severity":1,"message":"90","line":13,"column":8,"nodeType":"78","messageId":"79","endLine":13,"endColumn":15},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["93"],["94"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["91"],["92"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'PersonPinIcon' is defined but never used.","'HelpIcon' is defined but never used.","'ShoppingBasket' is defined but never used.","'ThumbDown' is defined but never used.","'ThumbUp' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [firstPlayer, history, secondPlayer]",{"range":"99","text":"100"},"Update the dependencies array to be: [history]",{"range":"101","text":"102"},[1301,1328],"[firstPlayer, history, secondPlayer]",[2740,2742],"[history]"]