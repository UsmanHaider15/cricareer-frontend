[{"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js":"1","/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js":"2","/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js":"3","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx":"4","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ComboBox.jsx":"5","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx":"6","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingAveragesComparison.jsx":"7","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js":"8","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparison.jsx":"9","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparisonChart.jsx":"10","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx":"11","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparisonTable.jsx":"12"},{"size":593,"mtime":1610989760186,"results":"13","hashOfConfig":"14"},{"size":211,"mtime":1610996996277,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610861361319,"results":"16","hashOfConfig":"14"},{"size":5627,"mtime":1611395733260,"results":"17","hashOfConfig":"14"},{"size":1914,"mtime":1611000245998,"results":"18","hashOfConfig":"14"},{"size":2986,"mtime":1611395764523,"results":"19","hashOfConfig":"14"},{"size":4598,"mtime":1611407365514,"results":"20","hashOfConfig":"14"},{"size":150,"mtime":1611167234492,"results":"21","hashOfConfig":"14"},{"size":4943,"mtime":1611411804995,"results":"22","hashOfConfig":"14"},{"size":1178,"mtime":1611411607962,"results":"23","hashOfConfig":"14"},{"size":2926,"mtime":1611411843330,"results":"24","hashOfConfig":"14"},{"size":1472,"mtime":1611385367463,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1xm0vh1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js",[],["52","53"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx",["54","55"],"import ComboBox from \"./ComboBox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router\";\nimport qs from \"qs\";\nimport IccCareerComparisons from \"./IccCareerComparisons\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nconst IccPlayerComparison = ({ history }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [firstPlayer, setFirstPlayer] = useState({});\n  const [secondPlayer, setSecondPlayer] = useState({});\n  const [firstRef, firstLoaded, firstOnLoad] = useImageLoaded();\n  const [secondRef, secondLoaded, secondOnLoad] = useImageLoaded();\n\n  useEffect(() => {\n    if (Object.keys(firstPlayer).length && Object.keys(secondPlayer).length) {\n      history.push({\n        pathname: \"\",\n        search: `first_player_id=${firstPlayer.player_id}&second_player_id=${secondPlayer.player_id}`,\n      });\n    }\n  }, [firstPlayer, secondPlayer]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/get_players_list\", {\n        params: {\n          limit: 100,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const player_ids = qs.parse(history.location.search.substring(1));\n    const first_player_id = player_ids.first_player_id\n      ? player_ids.first_player_id\n      : 253802;\n    const second_player_id = player_ids.second_player_id\n      ? player_ids.second_player_id\n      : 348144;\n\n    axios\n      .get(`http://localhost:3001/get_player_by_id`, {\n        params: {\n          player_id: first_player_id,\n        },\n      })\n      .then(function (response) {\n        setFirstPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    axios\n      .get(`http://localhost:3001/get_player_by_id`, {\n        params: {\n          player_id: second_player_id,\n        },\n      })\n      .then(function (response) {\n        setSecondPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    history.push({\n      // pathname: \"\",\n      search: `first_player_id=${first_player_id}&second_player_id=${second_player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player, isFirst) => {\n    if (isFirst) {\n      setFirstPlayer(player);\n    } else {\n      setSecondPlayer(player);\n    }\n  };\n\n  return (\n    <div>\n      <Grid container style={{ paddingTop: 10 }} spacing={1}>\n        <Grid item xs={6}>\n          <ComboBox\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={firstPlayer}\n            isFirst={true}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <ComboBox\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={secondPlayer}\n            isFirst={false}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={firstRef}\n              onLoad={firstOnLoad}\n              src={\n                firstPlayer.avatar_url\n                  ? firstPlayer.avatar_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: firstLoaded ? \"block\" : \"none\",\n              }}\n            />\n            {!firstLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={secondRef}\n              onLoad={secondOnLoad}\n              src={\n                secondPlayer.avatar_url\n                  ? secondPlayer.avatar_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: secondLoaded ? \"block\" : \"none\",\n              }}\n            />\n\n            {!secondLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        {firstPlayer.player_id && secondPlayer.player_id ? (\n          <IccCareerComparisons\n            firstPlayer={firstPlayer}\n            secondPlayer={secondPlayer}\n          />\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(IccPlayerComparison);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/ComboBox.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingAveragesComparison.jsx",["56","57"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparison.jsx",["58","59","60","61","62","63","64"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparisonChart.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparisonTable.jsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":43,"column":6,"nodeType":"71","endLine":43,"endColumn":33,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"70","line":99,"column":6,"nodeType":"71","endLine":99,"endColumn":8,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":14},{"ruleId":"69","severity":1,"message":"78","line":69,"column":6,"nodeType":"71","endLine":69,"endColumn":61,"suggestions":"79"},{"ruleId":"74","severity":1,"message":"75","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":14},{"ruleId":"74","severity":1,"message":"80","line":10,"column":8,"nodeType":"76","messageId":"77","endLine":10,"endColumn":47},{"ruleId":"74","severity":1,"message":"81","line":12,"column":8,"nodeType":"76","messageId":"77","endLine":12,"endColumn":47},{"ruleId":"82","severity":1,"message":"83","line":85,"column":46,"nodeType":"84","messageId":"85","endLine":85,"endColumn":48},{"ruleId":"82","severity":1,"message":"83","line":89,"column":47,"nodeType":"84","messageId":"85","endLine":89,"endColumn":49},{"ruleId":"82","severity":1,"message":"83","line":95,"column":57,"nodeType":"84","messageId":"85","endLine":95,"endColumn":59},{"ruleId":"69","severity":1,"message":"78","line":115,"column":6,"nodeType":"71","endLine":119,"endColumn":4,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["89"],["90"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'firstPlayer.player_name' and 'secondPlayer.player_name'. Either include them or remove the dependency array. If 'setData' needs the current value of 'firstPlayer.player_name', you can also switch to useReducer instead of useState and read 'firstPlayer.player_name' in the reducer.",["91"],"'IccBattingFormatAveragesComparisonChart' is defined but never used.","'IccBattingFormatAveragesComparisonTable' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [firstPlayer, history, secondPlayer]",{"range":"101","text":"102"},"Update the dependencies array to be: [history]",{"range":"103","text":"104"},"Update the dependencies array to be: [format, firstPlayer.player_id, secondPlayer.player_id, firstPlayer.player_name, secondPlayer.player_name]",{"range":"105","text":"106"},"Update the dependencies array to be: [battingAverageOption.value, firstPlayer.player_id, firstPlayer.player_name, secondPlayer.player_id, secondPlayer.player_name]",{"range":"107","text":"108"},[1301,1328],"[firstPlayer, history, secondPlayer]",[2740,2742],"[history]",[1962,2017],"[format, firstPlayer.player_id, secondPlayer.player_id, firstPlayer.player_name, secondPlayer.player_name]",[3844,3936],"[battingAverageOption.value, firstPlayer.player_id, firstPlayer.player_name, secondPlayer.player_id, secondPlayer.player_name]"]