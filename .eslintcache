[{"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js":"1","/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js":"2","/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js":"3","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx":"4","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx":"5","/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js":"6","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparison.jsx":"7","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx":"8","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TabPanel.jsx":"9","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TableView.jsx":"10","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/ChartView.jsx":"11","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/PlayerSearch.jsx":"12","/home/usman/Desktop/Cricareer/cricareer-frontend/src/data/data.js":"13","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerAveragesComparison.jsx":"14","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerProfiles.jsx":"15","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerBattingAverages.jsx":"16","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/AveragesTable.jsx":"17","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/EnhancedTableHead.jsx":"18","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerBowlingAverages.jsx":"19","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/PslCareerComparisons.jsx":"20","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/PslPlayersComparison.jsx":"21","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/PslPlayersBowlingAveragesComparison.jsx":"22","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/PslPlayersBattingAveragesComparison.jsx":"23","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerProfile.jsx":"24","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBattingAverages.jsx":"25","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBowlingAverages.jsx":"26"},{"size":593,"mtime":1610989760186,"results":"27","hashOfConfig":"28"},{"size":1787,"mtime":1614511595800,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1610861361319,"results":"30","hashOfConfig":"28"},{"size":5772,"mtime":1614512131241,"results":"31","hashOfConfig":"28"},{"size":2938,"mtime":1614457565783,"results":"32","hashOfConfig":"28"},{"size":150,"mtime":1611167234492,"results":"33","hashOfConfig":"28"},{"size":3613,"mtime":1614464199673,"results":"34","hashOfConfig":"28"},{"size":2270,"mtime":1614464486560,"results":"35","hashOfConfig":"28"},{"size":382,"mtime":1611417644481,"results":"36","hashOfConfig":"28"},{"size":1639,"mtime":1614464960760,"results":"37","hashOfConfig":"28"},{"size":1037,"mtime":1611432683752,"results":"38","hashOfConfig":"28"},{"size":1986,"mtime":1614457343240,"results":"39","hashOfConfig":"28"},{"size":3192,"mtime":1615113533908,"results":"40","hashOfConfig":"28"},{"size":3041,"mtime":1614464503448,"results":"41","hashOfConfig":"28"},{"size":3857,"mtime":1614377950925,"results":"42","hashOfConfig":"28"},{"size":3205,"mtime":1614850468229,"results":"43","hashOfConfig":"28"},{"size":3107,"mtime":1614804930728,"results":"44","hashOfConfig":"28"},{"size":1965,"mtime":1615112155298,"results":"45","hashOfConfig":"28"},{"size":3185,"mtime":1614462962588,"results":"46","hashOfConfig":"28"},{"size":649,"mtime":1614465319131,"results":"47","hashOfConfig":"28"},{"size":5985,"mtime":1614457605475,"results":"48","hashOfConfig":"28"},{"size":4575,"mtime":1614511585731,"results":"49","hashOfConfig":"28"},{"size":4575,"mtime":1614798714912,"results":"50","hashOfConfig":"28"},{"size":3779,"mtime":1615115151772,"results":"51","hashOfConfig":"28"},{"size":3559,"mtime":1615113916696,"results":"52","hashOfConfig":"28"},{"size":3207,"mtime":1615113812367,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1xm0vh1",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/usman/Desktop/Cricareer/cricareer-frontend/src/index.js",[],["114","115"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/App.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/reportWebVitals.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccPlayerComparison.jsx",["116","117"],"import PlayerSearch from \"./PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router\";\nimport IccCareerComparisons from \"./IccCareerComparisons\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nconst IccPlayerComparison = ({ history }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [firstPlayer, setFirstPlayer] = useState({});\n  const [secondPlayer, setSecondPlayer] = useState({});\n  const [firstRef, firstLoaded, firstOnLoad] = useImageLoaded();\n  const [secondRef, secondLoaded, secondOnLoad] = useImageLoaded();\n\n  useEffect(() => {\n    if (Object.keys(firstPlayer).length && Object.keys(secondPlayer).length) {\n      history.push({\n        pathname: \"\",\n        search: `first_player_id=${firstPlayer.player_id}&second_player_id=${secondPlayer.player_id}`,\n      });\n    }\n  }, [firstPlayer, secondPlayer]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/get_players_list\", {\n        params: {\n          limit: 100,\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const player_ids = qs.parse(history.location.search.substring(1));\n    const first_player_id = player_ids.first_player_id\n      ? player_ids.first_player_id\n      : 253802;\n    const second_player_id = player_ids.second_player_id\n      ? player_ids.second_player_id\n      : 348144;\n\n    axios\n      .get(`http://localhost:3001/get_player_by_id`, {\n        params: {\n          player_id: first_player_id,\n        },\n      })\n      .then(function (response) {\n        setFirstPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    axios\n      .get(`http://localhost:3001/get_player_by_id`, {\n        params: {\n          player_id: second_player_id,\n        },\n      })\n      .then(function (response) {\n        setSecondPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    history.push({\n      // pathname: \"\",\n      search: `first_player_id=${first_player_id}&second_player_id=${second_player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player, isFirst) => {\n    if (isFirst) {\n      setFirstPlayer(player);\n    } else {\n      setSecondPlayer(player);\n    }\n  };\n\n  return (\n    <div>\n      <Grid container style={{ paddingTop: 10 }} spacing={1}>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={firstPlayer}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={secondPlayer}\n            isFirst={false}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={firstRef}\n              onLoad={firstOnLoad}\n              src={\n                firstPlayer.player_image_url\n                  ? firstPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: firstLoaded ? \"block\" : \"none\",\n              }}\n            />\n            {!firstLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={secondRef}\n              onLoad={secondOnLoad}\n              src={\n                secondPlayer.player_image_url\n                  ? secondPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: secondLoaded ? \"block\" : \"none\",\n              }}\n            />\n\n            {!secondLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        {firstPlayer.player_id && secondPlayer.player_id ? (\n          <IccCareerComparisons\n            firstPlayer={firstPlayer}\n            secondPlayer={secondPlayer}\n          />\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(IccPlayerComparison);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerComparisons.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/Utils/humanify.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccBattingFormatAveragesComparison.jsx",["118","119","120","121"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport humanify from \"../Utils/humanify\";\nimport DataViewTabs from \"./DataViewTabs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nexport default function IccBattingFormatAveragesComparison({\n  firstPlayer,\n  secondPlayer,\n  career,\n  options,\n}) {\n  const classes = useStyles();\n  const [option, setOption] = React.useState(\"matches_played\");\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = useState({ first_player: {}, second_player: {} });\n  const [chartData, setChartData] = useState({\n    first_player: {},\n    second_player: {},\n  });\n\n  const handleChange = (event) => {\n    setOption(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:3001/icc_comparison/${career}_format_averages_comparison`,\n        {\n          params: {\n            first_player_id: firstPlayer.player_id,\n            second_player_id: secondPlayer.player_id,\n            option: option,\n          },\n        }\n      )\n      .then(function (response) {\n        const first = {};\n        response.data.first_player.map((obj) => {\n          first[obj[\"match_type\"]] = obj[option];\n        });\n        const second = {};\n        response.data.second_player.map((obj) => {\n          second[obj[\"match_type\"]] = obj[option];\n        });\n\n        const first_player = {};\n        const second_player = {};\n        [\"Tests\", \"ODIs\", \"T20Is\", \"T20s\"].map((format) => {\n          first_player[format] = first[format] ? first[format] : \"-\";\n          second_player[format] = second[format] ? second[format] : \"-\";\n        });\n\n        setChartData({ first_player, second_player });\n        setData({\n          first_player: Object.assign(\n            { player_name: firstPlayer.player_name.split(\" \")[0] },\n            first_player\n          ),\n          second_player: Object.assign(\n            { player_name: secondPlayer.player_name.split(\" \")[0] },\n            second_player\n          ),\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [option, firstPlayer.player_id, secondPlayer.player_id]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Option</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={option}\n            onChange={handleChange}\n            label=\"Option\"\n            className={classes.root}\n          >\n            {options.map((value) => (\n              <MenuItem value={value}>{humanify(value)}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      <div>\n        <DataViewTabs\n          data={data}\n          chartData={chartData}\n          firstPlayer={firstPlayer}\n          secondPlayer={secondPlayer}\n        />\n      </div>\n    </div>\n  );\n}\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/DataViewTabs.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TabPanel.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/TableView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/ChartView.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/PlayerSearch.jsx",["122"],"/* eslint-disable no-use-before-define */\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function PlayerSearch({\n  InitialPlayersList,\n  setSelectedPlayer,\n  player,\n  isFirst = true,\n  url = \"http://localhost:3001/search_player_by_name\",\n  league_name = \"psl\",\n}) {\n  const [searchedPlayersList, setSearchedPlayersList] = useState([]);\n  const [searchStr, setSearchStr] = useState(\"\");\n\n  useEffect(() => {\n    if (searchStr) {\n      axios\n        .get(url, {\n          params: {\n            player_name: searchStr,\n            league_name,\n          },\n        })\n        .then(function (response) {\n          setSearchedPlayersList(response.data.rows);\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n    }\n  }, [searchStr]);\n\n  return (\n    <div>\n      <Autocomplete\n        value={player}\n        disableClearable={true}\n        // id=\"combo-box-demo\"\n        options={\n          searchedPlayersList.length ? searchedPlayersList : InitialPlayersList\n        }\n        getOptionLabel={(option) => option.player_name}\n        getOptionSelected={(option, value) => {\n          if (option.player_name === value.player_name) {\n            setSelectedPlayer(value, isFirst);\n          }\n          return true;\n        }}\n        onInputChange={(event, value, reason) => {\n          return reason === \"input\" && setSearchStr(value);\n        }}\n        onChange={(event, value, reason) => {\n          if (reason === \"select-option\") {\n            setSelectedPlayer(value, isFirst);\n          }\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search Player\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        )}\n      />\n    </div>\n  );\n}\n\n//\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/data/data.js",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/IccCareerAveragesComparison.jsx",["123"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport TableView from \"./common/TableView\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { padding: 0, marginBottom: 10 },\n\n  button: {\n    display: \"block\",\n  },\n  formControl: {\n    minWidth: 100,\n  },\n}));\n\nexport default function IccCareerAveragesComparison({\n  firstPlayer,\n  secondPlayer,\n  career,\n}) {\n  const classes = useStyles();\n  const [format, setFormat] = React.useState(\"ODIs\");\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = useState({ first_player: {}, second_player: {} });\n\n  const formatOptions = [\"ODIs\", \"T20Is\", \"T20s\", \"Tests\"];\n  const handleChange = (event) => {\n    setFormat(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  useEffect(() => {\n    axios\n      .get(\n        `http://localhost:3001/icc_comparison/${career}_averages_comparison`,\n        {\n          params: {\n            first_player_id: firstPlayer.player_id,\n            second_player_id: secondPlayer.player_id,\n            format,\n          },\n        }\n      )\n      .then(function (response) {\n        setData({\n          first_player: Object.assign(\n            { player_name: firstPlayer.player_name.split(\" \")[0] },\n            response.data.first_player\n          ),\n          second_player: Object.assign(\n            { player_name: secondPlayer.player_name.split(\" \")[0] },\n            response.data.second_player\n          ),\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [format, firstPlayer.player_id, secondPlayer.player_id]);\n\n  return (\n    <div>\n      <div style={{ textAlign: \"left\" }}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-controlled-open-select-label\">Format</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={format}\n            onChange={handleChange}\n            label=\"Format\"\n            className={classes.root}\n          >\n            {formatOptions.map((option) => (\n              <MenuItem value={option}>{option}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      <div\n        style={{\n          boxShadow: \"2px 2px 6px 0px #888888\",\n          borderRadius: \"10px 10px 10px 10px\",\n          padding: 8,\n          marginBottom: 20,\n        }}\n      >\n        <TableView\n          data={data}\n          excludedKeys={[\"player_id\", \"match_type\", \"stumpings_made\"]}\n        />\n      </div>\n    </div>\n  );\n}\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerProfiles.jsx",["124","125"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { withRouter } from \"react-router\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport PlayerSearch from \"../PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PslPlayerBattingAverages from \"./PslPlayerBattingAverages\";\nimport PslPlayerBowlingAverages from \"./PslPlayerBowlingAverages\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nconst PslPlayerProfiles = ({ history }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [player, setPlayer] = useState({});\n  const [ref, loaded, onLoad] = useImageLoaded();\n\n  useEffect(() => {\n    if (Object.keys(player).length) {\n      history.push({\n        pathname: \"\",\n        search: `player_id=${player.player_id}`,\n      });\n    }\n  }, [player]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/psl_profile/get_players_list\", {\n        params: {\n          limit: 100,\n          league_name: \"psl\",\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const url_id = qs.parse(history.location.search.substring(1));\n    const player_id = url_id.player_id ? url_id.player_id : 440;\n\n    axios\n      .get(`http://localhost:3001/psl_profile/get_player_by_id`, {\n        params: {\n          player_id: player_id,\n          league_name: \"psl\",\n        },\n      })\n      .then(function (response) {\n        setPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    history.push({\n      // pathname: \"\",\n      search: `player_id=${player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player) => {\n    setPlayer(player);\n  };\n\n  return (\n    <div>\n      <Grid container style={{ paddingTop: 10 }} spacing={1}>\n        <Grid item xs={12}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={player}\n            url=\"http://localhost:3001/psl_profile/search_player_by_name\"\n            league_name=\"psl\"\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <div\n            style={{\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n            }}\n          >\n            <img\n              ref={ref}\n              onLoad={onLoad}\n              src={\n                player.player_image_url\n                  ? player.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                display: loaded ? \"block\" : \"none\",\n              }}\n            />\n            {!loaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid item xs={12} style={{ marginBottom: 30 }}>\n          {Object.keys(player).length > 0 ? (\n            <PslPlayerBattingAverages player={player} />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} style={{ marginBottom: 1000 }}>\n          {Object.keys(player).length > 0 ? (\n            <PslPlayerBowlingAverages player={player} />\n          ) : null}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(PslPlayerProfiles);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerBattingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/AveragesTable.jsx",["126","127"],"import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    // minWidth: 750,\n  },\n\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst AveragesTable = ({ rows, columnNamesLookup }) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"opposition_team\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={\"small\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              columnNamesLookup={columnNamesLookup}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy)).map(\n                (row, index) => {\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.opposition_team}>\n                      {Object.values(row).map((col_val, index) => (\n                        <TableCell align=\"left\">{col_val}</TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                }\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n};\n\nexport default AveragesTable;\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/common/EnhancedTableHead.jsx",["128"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/PslPlayerBowlingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/PslCareerComparisons.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/PslPlayersComparison.jsx",["129","130"],"import PlayerSearch from \"../PlayerSearch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { useState, useEffect, useRef } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withRouter } from \"react-router\";\nimport PslCareerComparisons from \"./PslCareerComparisons\";\n\nconst useImageLoaded = () => {\n  const [loaded, setLoaded] = useState(false);\n  const ref = useRef();\n\n  const onLoad = (val) => {\n    setLoaded(val);\n  };\n\n  useEffect(() => {\n    if (ref.current && ref.current.complete) {\n      onLoad(true);\n    } else {\n      onLoad(false);\n    }\n  });\n\n  return [ref, loaded, onLoad];\n};\n\nconst PslPlayersBattingComparison = ({ history }) => {\n  const [initialPlayersList, setInitialPlayersList] = useState([]);\n  const [firstPlayer, setFirstPlayer] = useState({});\n  const [secondPlayer, setSecondPlayer] = useState({});\n  const [firstRef, firstLoaded, firstOnLoad] = useImageLoaded();\n  const [secondRef, secondLoaded, secondOnLoad] = useImageLoaded();\n\n  useEffect(() => {\n    if (Object.keys(firstPlayer).length && Object.keys(secondPlayer).length) {\n      history.push({\n        pathname: \"\",\n        search: `first_player_id=${firstPlayer.player_id}&second_player_id=${secondPlayer.player_id}`,\n      });\n    }\n  }, [firstPlayer, secondPlayer]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/psl_profile/get_players_list\", {\n        params: {\n          limit: 100,\n          league_name: \"psl\",\n        },\n      })\n      .then(function (response) {\n        setInitialPlayersList(response.data.rows);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n\n    const player_ids = qs.parse(history.location.search.substring(1));\n    const first_player_id = player_ids.first_player_id\n      ? player_ids.first_player_id\n      : 440;\n    const second_player_id = player_ids.second_player_id\n      ? player_ids.second_player_id\n      : 441;\n\n    axios\n      .get(`http://localhost:3001/psl_profile/get_player_by_id`, {\n        params: {\n          player_id: first_player_id,\n          league_name: \"psl\",\n        },\n      })\n      .then(function (response) {\n        setFirstPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    axios\n      .get(`http://localhost:3001/psl_profile/get_player_by_id`, {\n        params: {\n          player_id: second_player_id,\n          league_name: \"psl\",\n        },\n      })\n      .then(function (response) {\n        setSecondPlayer(response.data.rows[0]);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    history.push({\n      // pathname: \"\",\n      search: `first_player_id=${first_player_id}&second_player_id=${second_player_id}`,\n    });\n  }, []);\n\n  const handleSelectedPlayer = (player, isFirst) => {\n    if (isFirst) {\n      setFirstPlayer(player);\n    } else {\n      setSecondPlayer(player);\n    }\n  };\n\n  return (\n    <div>\n      <Grid container style={{ paddingTop: 10 }} spacing={1}>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={firstPlayer}\n            url=\"http://localhost:3001/psl_profile/search_player_by_name\"\n            league_name=\"psl\"\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <PlayerSearch\n            InitialPlayersList={initialPlayersList}\n            setSelectedPlayer={handleSelectedPlayer}\n            player={secondPlayer}\n            isFirst={false}\n            url=\"http://localhost:3001/psl_profile/search_player_by_name\"\n            league_name=\"psl\"\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={firstRef}\n              onLoad={firstOnLoad}\n              src={\n                firstPlayer.player_image_url\n                  ? firstPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: firstLoaded ? \"block\" : \"none\",\n              }}\n            />\n            {!firstLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n              border: \"1px solid black\",\n              padding: 10,\n              height: \"85%\",\n            }}\n          >\n            <img\n              ref={secondRef}\n              onLoad={secondOnLoad}\n              src={\n                secondPlayer.player_image_url\n                  ? secondPlayer.player_image_url\n                  : \"/default-user.jpg\"\n              }\n              alt=\"\"\n              style={{\n                flexShrink: 0,\n                minWidth: \"100%\",\n                maxWidth: \"100%\",\n                display: secondLoaded ? \"block\" : \"none\",\n              }}\n            />\n\n            {!secondLoaded ? <CircularProgress /> : null}\n          </div>\n        </Grid>\n      </Grid>\n      <Grid container>\n        {firstPlayer.player_id && secondPlayer.player_id ? (\n          <PslCareerComparisons\n            firstPlayer={firstPlayer}\n            secondPlayer={secondPlayer}\n          />\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default withRouter(PslPlayersBattingComparison);\n","/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/PslPlayersBowlingAveragesComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/comparisons/PslPlayersBattingAveragesComparison.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerProfile.jsx",["131","132"],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBattingAverages.jsx",[],"/home/usman/Desktop/Cricareer/cricareer-frontend/src/components/profiles/IccPlayerBowlingAverages.jsx",["133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":43,"column":6,"nodeType":"140","endLine":43,"endColumn":33,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"139","line":99,"column":6,"nodeType":"140","endLine":99,"endColumn":8,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":62,"column":46,"nodeType":"145","messageId":"146","endLine":62,"endColumn":48},{"ruleId":"143","severity":1,"message":"144","line":66,"column":47,"nodeType":"145","messageId":"146","endLine":66,"endColumn":49},{"ruleId":"143","severity":1,"message":"144","line":72,"column":57,"nodeType":"145","messageId":"146","endLine":72,"endColumn":59},{"ruleId":"138","severity":1,"message":"147","line":92,"column":6,"nodeType":"140","endLine":92,"endColumn":61,"suggestions":"148"},{"ruleId":"138","severity":1,"message":"149","line":37,"column":6,"nodeType":"140","endLine":37,"endColumn":17,"suggestions":"150"},{"ruleId":"138","severity":1,"message":"147","line":70,"column":6,"nodeType":"140","endLine":70,"endColumn":61,"suggestions":"151"},{"ruleId":"138","severity":1,"message":"139","line":42,"column":6,"nodeType":"140","endLine":42,"endColumn":14,"suggestions":"152"},{"ruleId":"138","severity":1,"message":"139","line":83,"column":6,"nodeType":"140","endLine":83,"endColumn":8,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":10,"column":8,"nodeType":"156","messageId":"157","endLine":10,"endColumn":24},{"ruleId":"154","severity":1,"message":"158","line":11,"column":8,"nodeType":"156","messageId":"157","endLine":11,"endColumn":14},{"ruleId":"154","severity":1,"message":"159","line":7,"column":8,"nodeType":"156","messageId":"157","endLine":7,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":43,"column":6,"nodeType":"140","endLine":43,"endColumn":33,"suggestions":"160"},{"ruleId":"138","severity":1,"message":"139","line":102,"column":6,"nodeType":"140","endLine":102,"endColumn":8,"suggestions":"161"},{"ruleId":"138","severity":1,"message":"139","line":42,"column":6,"nodeType":"140","endLine":42,"endColumn":14,"suggestions":"162"},{"ruleId":"138","severity":1,"message":"139","line":81,"column":6,"nodeType":"140","endLine":81,"endColumn":8,"suggestions":"163"},{"ruleId":"138","severity":1,"message":"164","line":70,"column":6,"nodeType":"140","endLine":70,"endColumn":42,"suggestions":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["168"],["169"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'career', 'firstPlayer.player_name', and 'secondPlayer.player_name'. Either include them or remove the dependency array. If 'setData' needs the current value of 'firstPlayer.player_name', you can also switch to useReducer instead of useState and read 'firstPlayer.player_name' in the reducer.",["170"],"React Hook useEffect has missing dependencies: 'league_name' and 'url'. Either include them or remove the dependency array.",["171"],["172"],["173"],["174"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'humanify' is defined but never used.",["175"],["176"],["177"],["178"],"React Hook useEffect has a missing dependency: 'player'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"182","fix":"192"},{"desc":"180","fix":"193"},{"desc":"182","fix":"194"},{"desc":"190","fix":"195"},{"desc":"182","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [firstPlayer, history, secondPlayer]",{"range":"199","text":"200"},"Update the dependencies array to be: [history]",{"range":"201","text":"202"},"Update the dependencies array to be: [option, firstPlayer.player_id, secondPlayer.player_id, career, firstPlayer.player_name, secondPlayer.player_name]",{"range":"203","text":"204"},"Update the dependencies array to be: [league_name, searchStr, url]",{"range":"205","text":"206"},"Update the dependencies array to be: [format, firstPlayer.player_id, secondPlayer.player_id, career, firstPlayer.player_name, secondPlayer.player_name]",{"range":"207","text":"208"},"Update the dependencies array to be: [history, player]",{"range":"209","text":"210"},{"range":"211","text":"202"},{"range":"212","text":"200"},{"range":"213","text":"202"},{"range":"214","text":"210"},{"range":"215","text":"202"},"Update the dependencies array to be: [player.player_id, oppositionOption, player]",{"range":"216","text":"217"},[1309,1336],"[firstPlayer, history, secondPlayer]",[2748,2750],"[history]",[2608,2663],"[option, firstPlayer.player_id, secondPlayer.player_id, career, firstPlayer.player_name, secondPlayer.player_name]",[974,985],"[league_name, searchStr, url]",[1895,1950],"[format, firstPlayer.player_id, secondPlayer.player_id, career, firstPlayer.player_name, secondPlayer.player_name]",[1146,1154],"[history, player]",[2133,2135],[1318,1345],[2877,2879],[1145,1153],[2051,2053],[2008,2044],"[player.player_id, oppositionOption, player]"]